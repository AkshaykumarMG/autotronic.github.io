var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.1,1,0.93]],["body/components/AppComponent.html",[0,0.179,1,1.726,2,1.428,3,0.355,4,0.308,5,1.349,6,1.449,7,1.449,8,0.308,9,3.811,10,1.349,11,1.929,12,1.929,13,2.046,14,2.563,15,1.535,16,2.201,17,5.974,18,1.535,19,5.531,20,1.535,21,5.531,22,0.308,23,0.683,24,2.562,25,0.308,26,0.028,27,0.798,28,0.864,29,0.505,30,3.022,31,4.081,32,4.081,33,0.734,34,4.526,35,0.617,36,0.453,37,1.349,38,0.355,39,0.355,40,1.256,41,1.535,42,0.975,43,1.449,44,1.992,45,1.449,46,0.553,47,1.449,48,1.008,49,1.428,50,1.449,51,1.086,52,1.449,53,1.349,54,1.008,55,1.449,56,1.008,57,1.256,58,1.449,59,1.086,60,1.256,61,1.449,62,1.256,63,1.449,64,1.449,65,1.142,66,1.771,67,1.256,68,1.449,69,1.086,70,1.449,71,1.086,72,1.449,73,1.256,74,1.449,75,1.256,76,1.086,77,1.449,78,1.349,79,1.349,80,1.449,81,1.008,82,1.256,83,1.771,84,1.008,85,1.449,86,1.256,87,1.449,88,1.008,89,0.798,90,1.349,91,1.449,92,1.008,93,1.449,94,1.086,95,1.449,96,1.349,97,1.168,98,1.168,99,1.449,100,1.449,101,0.023,102,0.023]],["title/injectables/AuthService.html",[103,0.746,104,2.004]],["body/injectables/AuthService.html",[0,0.158,3,0.329,4,0.286,8,0.286,13,1.554,15,1.682,22,0.286,25,0.286,26,0.029,33,0.937,35,0.644,36,0.42,38,0.329,39,0.329,46,0.42,101,0.022,102,0.022,103,1.176,104,3.159,105,1.802,106,3.537,107,1.09,108,6.061,109,1.603,110,6.061,111,0.931,112,3.537,113,1.645,114,2.226,115,4.201,116,0.802,117,0.681,118,4.201,119,2.265,120,1.497,121,3.486,122,3.625,123,1.457,124,1.953,125,1.941,126,1.682,127,3.032,128,2.575,129,3.486,130,2.652,131,2.265,132,1.061,133,3.311,134,2.6,135,1.722,136,4.201,137,4.447,138,3.159,139,4.447,140,4.001,141,3.897,142,5.282,143,2.265,144,2.447,145,3.159,146,2.102,147,2.6,148,2.31,149,3.159,150,2.447,151,2.886,152,1.574,153,4.447,154,3.159,155,3.897,156,5.282,157,5.282,158,1.862,159,1.574,160,4.447,161,1.953,162,1.363,163,1.947,164,4.201,165,1.672,166,1.363,167,1.267,168,3.897,169,1.176,170,4.447,171,4.201,172,0.802,173,4.201,174,1.554,175,1.252,176,1.947,177,2.109,178,1.947,179,2.295,180,1.252,181,2.109,182,1.947,183,3.537,184,3.537,185,4.201,186,1.166,187,4.201,188,4.201,189,3.1,190,2.512,191,1.947,192,4.201,193,4.201]],["title/injectables/CSVService.html",[103,0.746,194,1.83]],["body/injectables/CSVService.html",[3,0.229,4,0.199,8,0.282,13,1.079,22,0.356,23,0.682,24,1.252,25,0.376,26,0.029,27,1.196,28,0.79,29,0.462,33,0.896,35,0.325,36,0.292,38,0.229,39,0.229,42,0.514,46,0.553,101,0.017,102,0.017,103,0.922,105,1.252,107,0.854,111,0.847,116,0.999,117,0.848,123,1.278,126,1.819,131,1.775,132,0.957,135,0.87,165,1.162,169,1.426,172,1.239,175,1.56,194,2.261,195,2.457,196,4.139,197,3.485,198,4.139,199,4.139,200,2.919,201,4.139,202,5.524,203,2.692,204,5.524,205,2.919,206,4.588,207,4.257,208,3.701,209,2.658,210,3.861,211,3.485,212,3.054,213,3.35,214,1.918,215,1.918,216,3.122,217,2.424,218,3.431,219,5.295,220,3.054,221,2.424,222,2.461,223,1.654,224,5.232,225,1.405,226,4.192,227,4.233,228,6.028,229,3.861,230,3.895,231,4.139,232,2.461,233,4.139,234,4.139,235,3.485,236,3.485,237,4.405,238,2.919,239,3.787,240,5.235,241,3.485,242,3.054,243,3.054,244,3.129,245,1.465,246,3.548,247,3.548,248,2.475,249,3.485,250,3.485,251,3.054,252,4.139,253,5.524,254,2.919,255,0.7,256,4.139,257,1.837,258,2.793,259,2.919,260,3.485,261,4.831,262,4.139,263,4.139,264,1.53,265,3.485,266,3.054,267,4.139,268,3.861,269,3.174,270,4.405,271,5.737,272,5.737,273,5.737,274,2.732,275,1.918,276,2.627,277,1.53,278,4.139,279,3.485,280,3.485,281,4.139,282,4.139,283,4.049,284,4.809,285,3.054,286,2.627,287,2.475,288,3.485,289,4.139,290,2.919,291,2.154,292,1.745,293,4.139,294,2.919,295,2.919,296,2.919,297,2.457,298,0.993,299,2.919,300,2.919,301,1.927,302,2.919,303,2.919,304,2.919,305,4.139,306,2.919,307,2.919,308,2.919,309,2.154,310,2.919,311,1.927,312,2.457,313,2.919,314,2.919,315,2.919,316,2.919,317,2.919,318,2.457,319,2.919,320,2.919,321,2.919,322,1.71,323,2.457,324,2.457,325,2.457,326,2.457,327,2.457,328,2.457,329,2.457,330,2.457,331,3.485,332,2.457,333,2.457,334,5.9,335,2.919,336,5.232,337,2.919,338,2.919,339,2.919,340,2.919,341,2.919,342,4.139,343,2.919,344,3.485,345,2.919,346,2.919,347,4.809,348,2.919,349,4.049,350,2.919,351,2.919,352,2.919,353,2.919]],["title/interfaces/CarForm.html",[354,0.999,355,2.004]],["body/interfaces/CarForm.html",[3,0.335,4,0.291,8,0.415,22,0.291,23,0.659,25,0.447,26,0.029,27,1.222,28,0.817,29,0.732,30,2.338,38,0.456,39,0.335,42,1.187,46,0.628,89,0.941,101,0.022,102,0.022,135,1.909,147,1.835,152,1.275,162,1.104,167,1.282,180,1.593,203,2.318,209,2.967,222,2.499,225,1.322,257,1.865,275,2.475,277,1.976,286,2.925,354,1.736,355,3.195,356,2.148,357,2.338,358,2.559,359,3.183,360,2.559,361,3.484,362,2.148,363,2.824,364,2.559,365,2.338,366,2.824,367,3.845,368,3.649,369,2.559,370,3.195,371,2.824,372,2.827,373,2.559,374,2.824,375,3.063,376,2.559,377,3.157,378,2.148,379,3.157,380,2.004,381,2.148,382,3.484,383,1.835,384,2.824,385,3.157,386,3.527,387,3.195,388,3.157,389,2.148,390,2.338,391,3.157,392,3.157,393,3.157,394,3.157,395,3.157,396,3.157,397,3.157,398,1.104,399,3.157,400,3.157,401,3.942,402,2.682,403,3.157,404,3.157,405,3.157,406,4.633,407,1.37,408,3.157,409,3.157,410,3.157,411,3.157,412,2.338,413,2.824,414,3.157,415,3.157,416,2.338,417,2.148,418,1.983,419,1.835]],["title/interfaces/Column.html",[354,0.999,420,2.004]],["body/interfaces/Column.html",[0,0.134,3,0.35,4,0.144,8,0.373,11,0.587,12,0.587,15,0.905,18,0.587,20,0.587,22,0.144,23,0.402,24,2.467,25,0.362,26,0.029,27,1.121,28,0.854,29,0.653,35,0.641,36,0.212,37,0.631,38,0.35,39,0.166,41,0.587,42,0.373,46,0.326,48,0.471,49,1.697,54,0.726,76,1.073,89,0.575,97,1.154,98,0.546,101,0.013,102,0.018,109,1.241,111,0.373,113,1.027,114,1.369,117,0.343,119,1.918,120,1.281,123,1.254,124,1.471,125,1.044,126,1.104,129,2.626,131,0.907,132,1.012,133,2.174,134,1.707,135,1.333,140,1.396,143,0.907,144,0.98,145,1.265,146,0.842,148,1.206,150,0.98,152,1.333,155,1.561,158,1.521,159,1.333,162,0.842,163,0.98,166,1.247,167,1.276,169,1.355,172,1.226,174,0.782,175,0.631,176,0.98,177,1.062,186,1.416,190,1.265,194,2.443,203,2.116,207,1.396,208,3.143,209,0.98,214,1.511,215,1.843,216,3.175,217,3.054,218,1.265,220,1.561,221,2.364,222,2.787,223,0.728,225,1.279,226,1.396,229,1.561,230,2.152,232,0.907,235,1.781,239,1.396,243,1.561,244,1.95,246,1.561,247,2.406,255,1.159,257,1.044,258,1.843,264,0.782,265,1.781,266,2.406,270,3.35,274,1.396,277,2.083,283,4.296,286,1.062,298,0.507,322,1.745,344,1.781,349,2.745,354,0.631,356,1.062,357,1.156,359,2.174,361,1.265,362,1.062,365,2.174,372,2.072,378,1.062,380,0.728,381,2.425,383,0.907,384,1.396,389,2.425,398,0.546,407,1.634,412,1.156,417,2.562,418,1.843,420,3.705,421,1.396,422,1.781,423,1.95,424,1.265,425,1.369,426,2.745,427,0.587,428,0.728,429,0.728,430,2.626,431,2.115,432,1.062,433,1.561,434,3.35,435,1.583,436,0.782,437,3.261,438,1.781,439,3.979,440,1.781,441,2.115,442,2.115,443,1.265,444,1.265,445,0.98,446,2.745,447,3.299,448,2.115,449,3.261,450,1.156,451,2.115,452,5.407,453,1.561,454,2.115,455,2.115,456,2.115,457,2.674,458,3.261,459,3.261,460,2.745,461,4.149,462,2.115,463,1.843,464,1.561,465,3.299,466,2.115,467,1.396,468,2.115,469,2.115,470,2.115,471,2.115,472,3.261,473,2.115,474,2.115,475,4.83,476,4.066,477,2.115,478,5.49,479,2.115,480,4.83,481,3.261,482,2.115,483,2.115,484,3.261,485,3.261,486,3.764,487,3.764,488,4.471,489,3.261,490,3.261,491,3.261,492,3.261,493,1.95,494,3.979,495,3.261,496,3.261,497,2.745,498,2.152,499,4.83,500,2.115,501,2.115,502,1.561,503,2.115,504,2.115,505,2.115,506,2.115,507,2.115,508,1.781,509,1.561,510,2.115,511,0.907,512,0.98,513,1.475,514,0.677,515,1.062,516,1.396,517,0.98,518,2.115,519,0.907,520,0.907,521,3.261,522,1.95,523,3.188,524,3.261,525,2.416,526,1.265,527,1.781,528,1.781,529,1.781,530,1.561,531,2.115,532,1.843,533,2.951,534,1.396,535,1.062,536,2.115,537,2.115,538,2.115,539,3.35,540,2.745,541,3.979,542,1.781,543,2.115,544,1.396,545,2.115,546,2.379,547,2.115,548,2.115,549,3.261,550,2.115,551,3.261,552,2.115,553,2.115,554,1.561,555,1.561,556,1.396,557,2.115,558,2.115,559,2.115,560,3.261,561,2.115,562,2.115,563,2.115,564,2.115,565,3.764,566,3.764,567,4.471,568,3.979,569,2.115,570,1.781,571,3.261,572,3.198,573,3.979,574,2.745,575,1.396,576,1.781,577,3.261,578,2.115,579,3.261,580,2.115,581,2.115,582,2.115,583,2.115,584,2.115,585,2.115,586,1.396,587,1.265,588,2.115,589,2.443,590,1.781,591,2.115,592,2.115,593,3.261,594,2.115,595,2.115,596,1.265,597,2.115,598,2.115,599,3.261,600,2.115,601,2.115,602,3.261,603,2.115,604,0.782,605,0.842,606,1.781,607,1.265,608,1.637,609,1.298,610,1.396,611,1.781,612,1.637,613,2.936,614,2.115,615,2.115,616,1.396,617,2.115,618,2.115,619,2.115,620,1.781,621,0.907,622,0.907,623,1.156,624,0.842,625,1.561,626,3.979,627,3.188,628,3.261,629,2.936,630,1.561,631,3.979,632,3.051,633,2.115,634,2.115,635,3.979,636,2.115,637,2.115,638,2.406,639,2.936,640,2.115,641,3.261,642,0.907,643,2.115,644,2.115,645,2.115,646,2.379,647,2.115,648,3.261,649,2.115,650,3.261,651,3.261,652,3.261,653,2.115,654,1.396,655,2.115,656,2.115,657,1.781,658,2.626,659,3.979,660,2.115,661,2.115,662,2.115,663,2.115,664,1.781,665,1.781,666,3.261,667,1.561,668,1.561,669,1.781,670,4.83,671,3.261,672,2.115,673,2.174,674,3.35,675,1.637,676,1.637,677,2.115,678,3.261,679,3.261,680,2.115,681,2.115,682,2.115,683,2.745,684,2.115,685,3.261,686,3.261,687,1.781,688,1.781,689,1.396,690,1.561,691,2.115,692,3.979,693,5.103,694,1.781,695,3.299,696,4.471,697,3.261,698,1.781,699,2.115,700,1.781,701,2.115,702,2.115,703,1.781,704,2.115,705,3.979,706,3.979,707,1.156,708,2.115,709,1.561,710,3.261,711,2.115,712,3.261,713,2.115,714,3.261,715,3.261,716,3.261,717,3.261,718,3.261,719,3.261,720,3.261,721,2.115,722,3.261,723,2.115,724,2.115,725,2.115,726,2.115,727,2.115,728,2.115,729,2.115,730,2.115,731,2.115,732,2.115,733,2.115,734,3.979,735,2.115,736,2.115,737,3.261,738,2.115,739,2.115,740,2.115,741,1.561,742,2.115,743,3.299,744,3.188,745,2.115,746,2.115,747,2.115,748,1.396,749,3.261,750,3.261,751,2.745,752,1.781,753,2.115,754,2.115,755,2.115,756,1.781,757,2.115,758,2.115,759,2.115,760,2.115,761,1.265,762,2.115,763,2.115,764,2.745,765,2.115,766,2.115,767,2.115,768,2.115,769,2.115,770,2.115,771,2.115,772,2.115,773,1.781]],["title/interfaces/Column-1.html",[175,0.837,354,0.837,420,1.679]],["body/interfaces/Column-1.html",[0,0.135,3,0.099,4,0.19,5,0.377,8,0.424,11,0.351,12,0.351,15,1.57,18,0.351,20,0.351,22,0.086,23,0.456,24,0.922,25,0.349,26,0.029,27,1.064,28,0.767,29,0.65,35,0.542,36,0.127,37,0.377,38,0.099,39,0.099,42,0.493,46,0.525,54,0.954,89,0.223,92,0.282,97,0.327,98,1.213,101,0.009,102,0.011,109,1.425,111,0.223,113,0.723,114,0.963,119,1.586,120,1.144,123,1.298,124,1.221,125,1.184,126,1.484,128,0.504,130,0.635,131,1.201,132,0.985,133,1.53,134,2.754,135,1.687,138,3.486,143,0.543,144,0.586,146,1.114,147,0.922,148,1.584,152,1.977,158,1.752,159,1.344,161,1.799,162,0.555,163,0.586,166,0.954,167,0.887,169,1.372,172,1.021,174,1.667,175,0.641,178,2.177,180,1.789,181,0.635,182,1.713,186,1.631,194,1.53,203,1.87,206,0.934,208,1.174,209,0.586,210,1.586,213,1.803,215,1.985,216,2.359,217,1.297,221,1.297,222,2.293,225,1.288,226,1.419,229,0.934,232,0.922,242,1.586,244,1.285,255,1.386,257,1.057,258,2.089,260,1.066,264,1.486,269,2.652,274,1.848,275,0.586,276,2.973,277,2.115,285,0.934,286,1.856,287,1.675,291,2.066,292,1.974,297,1.066,298,1.602,309,2.435,322,1.738,354,0.641,356,0.635,362,1.079,364,2.696,372,1.862,375,1.406,380,1.617,383,0.543,387,1.675,389,1.657,390,1.174,398,0.327,402,0.635,407,1.287,412,1.174,413,2.44,416,0.692,418,0.586,419,2.478,420,1.974,423,1.285,425,0.435,427,0.916,428,0.435,429,0.435,432,0.635,433,0.934,435,1.114,436,0.468,445,0.586,446,1.066,447,1.586,450,1.803,453,1.586,457,0.757,460,1.066,461,4.085,463,1.713,465,1.586,493,0.757,508,1.066,511,0.543,512,0.586,513,0.351,514,0.688,515,0.635,517,0.586,519,0.543,520,0.543,522,1.285,523,0.836,525,2.427,526,1.285,527,1.809,528,2.02,532,1.529,533,3.102,535,0.635,544,0.836,546,2.211,570,1.066,572,0.692,574,1.066,575,0.836,576,1.066,587,1.285,589,1.803,596,2.995,604,1.799,605,0.504,606,1.066,607,1.675,608,0.635,609,1.114,610,0.836,611,1.174,612,1.079,613,2.066,616,2.652,621,1.838,622,1.838,623,1.53,624,1.705,625,0.934,627,4.102,629,2.435,630,2.435,632,0.757,638,2.066,639,0.934,646,1.285,658,0.836,668,2.066,674,2.358,676,0.635,690,1.586,695,2.066,703,1.809,744,4.085,751,4.323,752,1.809,761,0.757,774,1.066,775,1.266,776,3.463,777,1.174,778,0.692,779,0.586,780,2.149,781,0.934,782,0.692,783,0.836,784,3.112,785,5.247,786,2.8,787,1.809,788,0.934,789,0.934,790,1.266,791,1.266,792,1.266,793,1.266,794,2.8,795,2.44,796,1.066,797,1.066,798,1.066,799,1.066,800,1.066,801,1.066,802,1.066,803,1.066,804,1.066,805,1.066,806,1.066,807,1.066,808,1.066,809,1.066,810,1.066,811,1.066,812,1.066,813,1.066,814,1.066,815,1.066,816,1.066,817,1.066,818,1.066,819,1.066,820,1.066,821,1.066,822,1.066,823,1.066,824,1.066,825,1.066,826,1.066,827,1.066,828,2.017,829,1.066,830,3.796,831,1.266,832,2.149,833,3.697,834,4.018,835,1.266,836,4.018,837,1.266,838,2.779,839,1.266,840,2.965,841,2.8,842,1.266,843,4.284,844,3.697,845,1.266,846,1.266,847,1.266,848,2.149,849,1.266,850,3.697,851,0.934,852,1.266,853,1.266,854,1.809,855,1.266,856,1.266,857,3.112,858,2.358,859,1.266,860,1.266,861,6.072,862,2.59,863,2.149,864,1.266,865,3.184,866,3.015,867,1.266,868,3.871,869,1.266,870,1.266,871,3.327,872,1.266,873,2.179,874,2.8,875,1.266,876,2.149,877,2.728,878,2.728,879,1.266,880,1.266,881,1.266,882,1.066,883,1.066,884,1.266,885,1.266,886,1.266,887,1.266,888,2.8,889,1.266,890,1.266,891,2.149,892,1.266,893,1.266,894,2.149,895,1.266,896,0.934,897,1.266,898,1.266,899,1.266,900,1.809,901,1.266,902,1.066,903,1.266,904,1.266,905,0.934,906,1.266,907,1.266,908,1.266,909,1.586,910,1.809,911,1.066,912,1.586,913,1.848,914,2.8,915,4.284,916,4.284,917,5.829,918,4.284,919,2.8,920,2.8,921,2.8,922,2.8,923,2.8,924,2.8,925,1.266,926,4.284,927,1.809,928,2.149,929,2.149,930,2.149,931,1.285,932,0.757,933,2.779,934,2.149,935,2.8,936,1.266,937,1.266,938,1.266,939,1.266,940,1.419,941,2.379,942,2.652,943,0.934,944,1.266,945,1.066,946,0.836,947,3.3,948,1.266,949,1.266,950,1.266,951,1.266,952,1.066,953,3.697,954,2.149,955,1.266,956,3.3,957,0.836,958,0.934,959,0.635,960,0.934,961,1.066,962,1.066,963,1.066,964,1.066,965,1.419,966,1.266,967,1.266,968,1.266,969,1.266,970,1.53,971,1.266,972,1.114,973,2.358,974,0.692,975,1.266,976,1.266,977,1.066,978,1.266,979,1.266,980,1.266,981,3.3,982,2.149,983,2.149,984,5.008,985,1.266,986,3.697,987,2.8,988,4.284,989,1.266,990,2.149,991,1.266,992,2.149,993,2.149,994,2.8,995,2.149,996,1.266,997,1.266,998,1.266,999,1.266,1000,1.266,1001,1.266,1002,2.8,1003,1.266,1004,1.266,1005,1.266,1006,1.266,1007,1.266,1008,1.266,1009,1.266,1010,1.266,1011,1.266,1012,1.266,1013,1.266,1014,1.266,1015,1.266,1016,1.266,1017,1.266,1018,1.266,1019,1.266,1020,1.266,1021,1.266,1022,1.266,1023,1.266,1024,1.266,1025,1.266,1026,1.266,1027,1.266,1028,1.266,1029,1.266,1030,1.266,1031,1.266,1032,1.266,1033,1.266,1034,1.266,1035,1.266,1036,1.266,1037,3.3,1038,2.149,1039,1.266,1040,1.266,1041,1.266,1042,3.697,1043,2.149,1044,2.149,1045,2.8,1046,1.285,1047,1.266,1048,1.419,1049,1.266,1050,1.266,1051,1.066,1052,1.419,1053,0.996,1054,1.419,1055,1.266,1056,1.266,1057,1.066,1058,1.809,1059,1.066,1060,1.066,1061,1.066,1062,1.266,1063,1.266,1064,1.266,1065,1.266,1066,1.266,1067,0.934,1068,1.066,1069,2.358,1070,1.066,1071,1.066,1072,1.266,1073,1.809,1074,1.809,1075,2.149,1076,2.8,1077,1.266,1078,2.149,1079,2.149,1080,1.266,1081,2.149,1082,1.066,1083,2.358,1084,1.066,1085,1.266,1086,0.934,1087,0.934,1088,1.266,1089,0.934,1090,2.149,1091,1.066,1092,2.728,1093,1.266,1094,1.266,1095,1.266,1096,2.8,1097,1.174,1098,1.809,1099,1.586,1100,1.266,1101,1.266,1102,1.809,1103,2.149,1104,1.266,1105,1.266,1106,0.757,1107,0.934,1108,1.066,1109,0.757,1110,0.836,1111,2.149,1112,1.266,1113,2.149,1114,2.149,1115,1.066,1116,3.3,1117,4.018,1118,4.284,1119,3.3,1120,2.8,1121,2.8,1122,1.266,1123,2.358,1124,2.8,1125,2.8,1126,1.266,1127,4.018,1128,2.8,1129,2.358,1130,2.8,1131,2.8,1132,1.066,1133,0.934,1134,1.266,1135,0.836,1136,2.149,1137,1.266,1138,1.266,1139,1.266,1140,2.149,1141,1.848,1142,2.149,1143,1.809,1144,1.266,1145,1.297,1146,2.149,1147,1.809,1148,2.149,1149,2.066,1150,1.266,1151,1.266,1152,1.809,1153,1.266,1154,1.266,1155,2.8,1156,3.3,1157,1.266,1158,1.266,1159,1.266,1160,1.266,1161,1.266,1162,1.266,1163,1.266,1164,1.266,1165,1.266,1166,1.266,1167,1.266,1168,1.266,1169,1.266,1170,1.266,1171,1.266,1172,1.266,1173,1.266,1174,1.675,1175,2.8,1176,4.018,1177,2.149,1178,4.284,1179,1.266,1180,1.586,1181,0.836,1182,2.149,1183,1.266,1184,1.066,1185,1.266,1186,2.149,1187,2.8,1188,1.266,1189,1.266,1190,2.149,1191,1.266,1192,1.266,1193,1.266,1194,1.266,1195,1.266,1196,1.266,1197,1.266,1198,2.149,1199,1.675,1200,2.8,1201,1.066,1202,1.266,1203,1.266,1204,1.266,1205,1.266,1206,1.266,1207,2.44,1208,1.266,1209,2.149,1210,1.066,1211,1.266,1212,1.266,1213,1.266,1214,1.586,1215,1.266,1216,1.586,1217,2.149,1218,2.149,1219,1.266,1220,2.149,1221,1.266,1222,1.266,1223,1.266,1224,1.266,1225,1.266,1226,1.266,1227,1.266,1228,1.266,1229,0.836,1230,2.8,1231,1.266,1232,3.697,1233,0.757,1234,1.266,1235,2.149,1236,3.3,1237,1.066,1238,2.149,1239,3.3,1240,1.266,1241,1.066,1242,1.266,1243,1.266,1244,1.266,1245,1.266,1246,1.266,1247,1.266,1248,1.266,1249,1.266,1250,1.266,1251,1.266,1252,1.266,1253,1.266,1254,1.266,1255,1.266,1256,1.266,1257,1.266,1258,1.266,1259,0.836,1260,1.266,1261,0.934,1262,0.934,1263,1.266,1264,1.266,1265,0.934,1266,1.266,1267,1.266,1268,1.266,1269,1.266,1270,1.266,1271,4.284,1272,4.284,1273,1.266,1274,1.266,1275,1.266,1276,1.266,1277,1.266,1278,0.934,1279,1.066,1280,1.266,1281,1.266,1282,1.266,1283,1.266,1284,1.266,1285,1.266,1286,1.266,1287,1.419,1288,2.149,1289,2.8,1290,2.8,1291,1.266,1292,2.149,1293,2.149,1294,1.266,1295,2.149,1296,1.266,1297,1.266,1298,1.266,1299,1.266,1300,1.266,1301,1.266,1302,1.266,1303,1.066,1304,1.266,1305,1.266,1306,0.934,1307,1.266,1308,1.266,1309,2.149,1310,0.836,1311,0.757,1312,1.266,1313,0.836,1314,0.836,1315,1.266,1316,2.149,1317,1.266,1318,1.266,1319,0.836,1320,4.284,1321,1.266,1322,1.266,1323,0.934,1324,2.149,1325,1.266,1326,0.836,1327,1.066,1328,1.266,1329,1.266,1330,2.8,1331,1.266]],["title/interfaces/CommonElement.html",[354,0.999,376,2.004]],["body/interfaces/CommonElement.html",[3,0.291,4,0.253,8,0.394,22,0.253,23,0.602,25,0.473,26,0.029,27,1.231,28,0.709,29,0.712,30,2.029,38,0.427,39,0.453,42,1.189,46,0.602,89,1.059,101,0.02,102,0.02,117,0.791,135,2.017,147,1.593,152,1.107,162,0.959,167,1.442,180,1.792,203,1.478,209,2.991,222,2.338,225,1.274,257,1.925,275,2.261,277,1.805,286,2.736,354,1.625,355,2.221,356,1.865,357,2.029,358,2.221,359,2.977,360,2.221,361,3.259,362,1.865,363,2.452,364,2.221,365,2.029,366,2.452,367,3.598,368,3.461,369,2.221,370,3.461,371,2.452,372,2.859,373,2.221,374,2.452,375,2.906,376,2.918,377,4.271,378,1.865,379,4.271,380,1.875,381,1.865,382,3.761,383,1.593,384,3.821,385,2.741,386,3.968,387,3.595,388,2.741,389,1.865,390,3.162,391,4.271,392,2.741,393,4.271,394,4.271,395,2.741,396,4.271,397,2.741,398,0.959,399,2.741,400,2.741,401,4.436,402,3.018,403,4.271,404,4.271,405,4.271,406,4.709,407,1.189,408,4.271,409,4.271,410,2.741,411,2.741,412,2.029,413,2.452,414,4.271,415,2.741,416,2.029,417,2.906,418,1.721,419,1.593,1332,4.109]],["title/injectables/CommonService.html",[103,0.746,430,2.212]],["body/injectables/CommonService.html",[3,0.229,4,0.199,8,0.199,13,1.083,22,0.282,23,0.595,24,2.533,25,0.451,26,0.029,27,1.223,28,0.559,29,0.537,33,0.958,35,0.327,36,0.293,38,0.229,39,0.229,46,0.614,101,0.025,102,0.017,103,0.924,105,1.256,107,0.856,111,0.849,116,1.056,117,0.897,123,1.167,125,1.328,126,1.594,131,1.779,132,1.08,133,2.266,165,1.165,169,1.167,172,1.232,175,1.436,197,3.493,203,2.632,206,4.591,207,4.309,208,3.547,209,1.922,210,3.061,211,3.493,212,3.061,213,3.438,216,2.083,218,3.608,219,3.493,221,1.922,222,2.864,223,1.903,225,1.299,226,3.983,227,3.061,230,3.651,232,2.463,236,3.493,237,4.412,239,2.738,240,4.412,241,3.493,243,3.061,244,3.133,245,2.419,246,3.554,247,3.554,248,3.435,249,3.493,250,3.493,251,3.866,258,2.661,279,4.412,280,3.493,286,3.124,298,1.257,301,2.738,312,4.412,322,1.829,323,2.466,324,2.466,325,2.466,326,2.466,327,2.466,328,2.466,329,2.466,330,2.466,331,3.493,332,2.466,333,2.466,430,2.738,465,4.452,532,1.922,572,3.353,589,2.863,611,3.138,612,2.631,683,3.493,688,3.493,695,3.061,698,3.493,913,2.738,1053,1.922,1135,1.933,1181,2.738,1210,4.056,1216,3.061,1229,3.791,1333,2.466,1334,5.24,1335,4.148,1336,4.148,1337,4.148,1338,4.148,1339,2.928,1340,2.928,1341,4.148,1342,2.928,1343,5.24,1344,6.034,1345,4.148,1346,5.24,1347,3.866,1348,4.148,1349,4.148,1350,4.148,1351,3.493,1352,3.493,1353,4.148,1354,4.452,1355,4.148,1356,2.928,1357,4.148,1358,4.148,1359,4.148,1360,5.24,1361,6.034,1362,5.24,1363,5.744,1364,5.744,1365,5.744,1366,5.744,1367,5.744,1368,4.817,1369,4.817,1370,3.554,1371,4.817,1372,4.148,1373,2.928,1374,4.148,1375,2.928,1376,4.148,1377,4.148,1378,4.148,1379,4.148,1380,2.928,1381,4.836,1382,5.24,1383,5.24,1384,5.24,1385,3.061,1386,4.148,1387,4.148,1388,4.148,1389,2.928,1390,2.928,1391,2.928,1392,4.148,1393,4.148,1394,2.928,1395,2.928,1396,2.928,1397,2.928,1398,4.148,1399,3.493,1400,2.928,1401,2.928,1402,2.928,1403,2.928,1404,2.928,1405,2.928,1406,2.928,1407,2.928,1408,2.928,1409,4.148,1410,2.928,1411,2.928,1412,2.928,1413,2.928]],["title/injectables/EventService.html",[103,0.746,1414,2.004]],["body/injectables/EventService.html",[0,0.162,3,0.345,4,0.299,8,0.299,13,1.627,22,0.299,24,1.887,25,0.37,26,0.029,27,1.039,29,0.687,33,0.956,35,0.491,36,0.44,38,0.426,39,0.345,46,0.44,101,0.022,102,0.022,103,1.211,105,1.887,107,1.122,116,0.84,117,0.713,119,2.331,120,1.47,121,3.588,122,3.25,123,1.372,126,1.709,127,2.518,128,2.163,129,3.588,130,2.729,132,1.046,135,1.311,165,1.751,172,1.038,191,2.518,215,2.518,216,2.729,223,1.87,225,1.331,255,1.597,268,4.352,298,1.304,322,1.311,354,1.311,372,2.038,445,2.038,463,2.518,513,1.508,514,1.74,525,2.766,532,2.518,572,2.969,587,3.25,609,2.163,1414,3.25,1415,3.246,1416,5.435,1417,5.187,1418,5.187,1419,4.576,1420,4.067,1421,4.399,1422,4.546,1423,4.067,1424,4.399,1425,4.011,1426,4.576,1427,3.25,1428,4.011,1429,4.011,1430,4.576,1431,4.399,1432,4.576,1433,4.576,1434,4.966,1435,4.966,1436,4.576,1437,4.576,1438,4.966,1439,4.576,1440,3.704,1441,3.704,1442,3.704,1443,3.704,1444,3.704,1445,3.704]],["title/components/FavouriteVehicleComponent.html",[0,0.1,56,0.746]],["body/components/FavouriteVehicleComponent.html",[0,0.184,1,0.822,2,1.08,3,0.232,4,0.202,5,0.883,6,0.949,7,0.949,8,0.202,10,0.883,11,1.868,12,1.868,18,1.16,20,1.16,22,0.202,23,0.65,25,0.358,26,0.029,27,1.016,28,0.566,29,0.541,33,0.935,35,0.587,36,0.296,37,0.883,38,0.232,39,0.232,40,0.822,41,1.16,42,0.737,43,1.552,44,1.686,45,0.949,46,0.556,47,0.949,48,0.66,49,1.08,50,0.949,51,0.711,52,0.949,53,0.883,54,0.66,55,0.949,56,1.173,57,1.767,58,0.949,59,0.711,60,0.822,61,0.949,62,0.822,63,0.949,64,0.949,65,0.863,66,1.339,67,0.822,68,0.949,69,0.711,70,0.949,71,0.711,72,0.949,73,0.822,74,0.949,75,0.822,76,1.333,77,0.949,78,0.883,79,0.883,80,0.949,81,0.66,82,0.822,83,1.339,84,0.66,85,0.949,86,0.822,87,0.949,88,0.66,89,0.522,90,0.883,91,0.949,92,0.66,93,0.949,94,0.711,95,0.949,96,0.883,97,1.703,98,1.562,99,0.949,100,0.949,101,0.017,102,0.017,107,0.863,109,1.707,111,0.737,113,1.588,116,0.926,117,0.786,120,1.173,123,1.348,124,1.547,125,1.552,126,1.16,132,0.981,146,1.664,148,2.132,149,2.501,150,2.574,151,2.285,152,0.883,158,1.927,159,1.719,161,1.948,162,1.359,166,1.251,167,1.163,172,0.799,174,1.547,186,1.345,203,2.294,214,1.938,217,2.95,223,1.439,225,1.087,232,1.794,245,1.487,255,1.264,311,2.761,322,1.445,375,2.1,381,1.487,387,1.772,398,0.765,417,2.1,418,2.246,425,2.082,427,0.822,428,1.019,429,1.019,435,2.358,436,1.096,457,2.501,498,4.316,502,3.086,511,1.794,512,1.938,513,1.16,514,1.339,517,1.938,519,1.794,520,2.259,525,2.596,534,3.2,546,1.772,587,2.501,589,3.306,604,1.547,605,2.096,607,2.501,608,2.434,609,1.664,610,2.761,611,2.878,612,2.644,621,1.271,622,1.271,623,1.619,624,1.179,642,1.794,646,2.501,673,2.285,675,3.038,748,2.761,862,2.079,972,1.929,974,2.285,1053,1.938,1141,1.956,1145,1.373,1214,3.577,1229,2.761,1278,3.086,1446,4.989,1447,3.911,1448,2.494,1449,4.183,1450,4.183,1451,6.153,1452,5.267,1453,4.183,1454,4.183,1455,1.271,1456,4.183,1457,2.963,1458,6.597,1459,3.522,1460,3.522,1461,3.522,1462,4.183,1463,2.963,1464,4.435,1465,3.522,1466,3.522,1467,3.086,1468,4.435,1469,3.086,1470,4.848,1471,4.183,1472,2.963,1473,2.285,1474,3.522,1475,2.761,1476,4.183,1477,2.963,1478,5.765,1479,4.183,1480,3.522,1481,3.522,1482,4.183,1483,2.963,1484,2.963,1485,2.963,1486,2.186,1487,2.186,1488,2.963,1489,2.963,1490,2.186,1491,2.494,1492,2.186,1493,3.477,1494,3.086,1495,4.183,1496,2.501,1497,4.183,1498,4.183,1499,4.183,1500,2.494,1501,3.522,1502,4.183,1503,4.183,1504,3.086,1505,3.522,1506,4.183,1507,3.086,1508,3.522,1509,3.086,1510,3.086,1511,2.494]],["title/components/ForgetPasswordComponent.html",[0,0.1,62,0.93]],["body/components/ForgetPasswordComponent.html",[0,0.154,1,0.681,2,0.942,3,0.192,4,0.167,5,0.732,6,0.786,7,0.786,8,0.167,10,0.732,11,1.834,12,1.834,14,1.691,15,1.552,16,1.452,18,1.013,20,1.013,22,0.167,23,0.595,25,0.351,26,0.029,27,0.768,28,0.984,29,0.655,33,0.996,35,0.704,36,0.246,37,0.732,38,0.192,39,0.192,40,0.681,41,1.013,42,0.643,43,0.786,44,1.544,45,0.786,46,0.436,47,0.786,48,0.547,49,0.942,50,0.786,51,0.589,52,0.786,53,0.732,54,0.547,55,0.786,56,0.547,57,0.681,58,0.786,59,0.589,60,0.681,61,0.786,62,1.338,63,2.005,64,0.786,65,0.753,66,1.169,67,0.681,68,0.786,69,0.589,70,0.786,71,0.589,72,0.786,73,0.681,74,0.786,75,0.681,76,1.045,77,0.786,78,0.732,79,0.732,80,0.786,81,0.547,82,0.681,83,1.169,84,0.547,85,0.786,86,0.681,87,0.786,88,0.547,89,0.433,90,0.732,91,0.786,92,0.547,93,0.786,94,0.589,95,0.786,96,0.732,97,0.634,98,1.245,99,0.786,100,0.786,101,0.015,102,0.015,107,0.753,109,1.704,111,0.643,113,1.444,116,0.469,117,0.398,120,1.074,123,1.331,124,1.998,130,3.083,132,0.932,134,2.564,135,1.438,143,2.069,144,2.235,145,2.884,146,2.15,148,2.243,149,2.884,150,2.503,158,1.882,159,1.61,161,2.21,162,1.245,166,1.124,167,1.045,169,1.203,172,0.697,175,1.088,176,1.691,177,1.832,178,2.018,180,1.989,182,1.691,186,1.209,191,2.235,215,1.691,225,1.234,248,2.182,255,1.045,257,1.169,258,2.018,292,2.605,298,1.296,380,1.499,383,1.053,398,0.634,402,1.832,419,2.707,424,1.468,425,1.859,427,0.681,428,1.499,429,0.844,435,2.337,436,0.908,443,2.182,444,2.182,461,2.409,463,2.388,467,3.184,514,1.169,535,2.187,604,1.784,605,2.15,607,3.231,608,2.588,609,2.287,616,2.409,621,1.868,622,1.868,624,1.734,673,1.994,675,1.832,687,3.073,707,1.994,709,1.811,741,2.693,761,2.605,777,1.341,778,1.341,779,1.137,828,1.832,862,1.565,865,2.38,866,2.38,873,3.403,913,3.566,931,3.775,932,2.182,941,2.235,959,2.886,970,1.994,1046,2.182,1048,2.409,1052,2.409,1053,1.691,1082,4.061,1084,3.073,1089,4.579,1092,2.693,1097,1.994,1107,3.804,1133,1.811,1145,1.691,1174,3.574,1180,2.693,1199,2.182,1207,3.566,1241,3.073,1259,2.409,1265,2.693,1287,2.409,1306,4.128,1311,3.231,1313,3.184,1314,2.409,1319,3.184,1347,2.693,1354,2.693,1370,2.693,1385,2.693,1455,1.053,1512,5.17,1513,5.17,1514,2.067,1515,1.994,1516,4.481,1517,2.605,1518,3.214,1519,2.876,1520,2.605,1521,2.38,1522,2.876,1523,2.605,1524,2.38,1525,3.214,1526,2.876,1527,2.38,1528,3.214,1529,3.668,1530,3.65,1531,3.65,1532,5.155,1533,4.34,1534,3.668,1535,3.668,1536,3.668,1537,3.668,1538,4.061,1539,4.823,1540,4.061,1541,4.061,1542,2.455,1543,2.455,1544,5.565,1545,3.65,1546,3.65,1547,3.65,1548,2.455,1549,3.65,1550,2.455,1551,3.65,1552,2.455,1553,3.65,1554,3.65,1555,2.693,1556,3.668,1557,2.455,1558,2.455,1559,2.455,1560,2.455,1561,2.455,1562,2.455,1563,1.62,1564,1.468,1565,1.341,1566,1.811,1567,1.341,1568,1.811,1569,2.067,1570,1.137,1571,1.62,1572,1.468,1573,1.468,1574,2.067,1575,3.668,1576,4.061,1577,2.876,1578,3.214,1579,4.356,1580,2.455,1581,3.073,1582,3.214,1583,2.067,1584,2.067,1585,2.067,1586,2.067,1587,2.455,1588,2.067,1589,2.455,1590,1.811,1591,2.067,1592,2.455,1593,2.067,1594,2.067,1595,1.811,1596,2.455,1597,3.073,1598,3.073,1599,3.073,1600,3.65,1601,3.073,1602,3.073,1603,3.073]],["title/components/HomeComponent.html",[0,0.1,65,0.692]],["body/components/HomeComponent.html",[0,0.182,1,0.7,2,0.962,3,0.198,4,0.172,5,0.753,6,0.808,7,0.808,8,0.172,10,0.753,11,1.839,12,1.839,14,1.726,15,1.034,16,1.483,18,1.034,20,1.034,22,0.172,23,0.46,25,0.424,26,0.029,27,0.657,28,0.996,29,0.582,30,2.036,31,2.749,32,2.749,33,1.001,35,0.681,36,0.253,37,0.753,38,0.198,39,0.198,40,0.7,41,1.034,42,0.657,43,0.808,44,1.566,45,0.808,46,0.489,47,0.808,48,0.562,49,1.143,50,0.808,51,0.606,52,0.808,53,0.753,54,0.562,55,0.808,56,0.562,57,0.7,58,0.808,59,0.606,60,0.7,61,0.808,62,0.7,63,0.808,64,0.808,65,1.077,66,1.193,67,0.7,68,0.808,69,0.606,70,0.808,71,0.606,72,0.808,73,0.7,74,0.808,75,0.7,76,1.062,77,0.808,78,0.753,79,0.753,80,0.808,81,0.562,82,1.229,83,1.193,84,0.562,85,0.808,86,0.7,87,0.808,88,0.562,89,1.125,90,0.753,91,0.808,92,0.562,93,0.808,94,0.606,95,0.808,96,0.753,97,0.962,98,0.652,99,0.808,100,0.808,101,0.015,102,0.015,107,0.769,109,1.693,111,0.657,113,1.457,114,1.942,116,1.042,117,0.604,119,1.598,123,1.089,124,1.808,125,1.193,126,1.034,127,2.417,128,2.076,131,1.9,132,0.94,158,1.876,159,1.627,161,1.378,162,1.262,163,1.17,166,1.143,167,1.062,169,1.089,174,1.378,175,1.458,186,1.229,213,2.671,214,1.726,221,1.726,222,2.341,223,0.868,225,1.299,245,1.267,255,1.062,257,1.193,264,1.378,274,2.46,276,1.871,298,1.39,318,3.137,322,0.753,360,2.228,368,2.228,378,3.021,380,0.868,381,3.298,398,0.652,407,0.808,419,2.784,423,2.648,425,1.878,427,0.7,428,0.868,429,0.868,432,1.267,445,1.726,457,3.376,463,2.266,493,2.228,511,2.097,512,1.726,513,1.357,514,1.193,515,1.871,517,1.726,519,1.598,520,2.097,525,2.341,529,4.391,532,2.052,533,2.46,554,1.863,555,1.863,566,5.376,586,1.666,604,1.378,605,1.483,630,3.268,632,2.228,642,1.598,646,2.228,667,4.027,776,3.443,777,1.379,778,1.379,779,1.17,865,2.982,866,2.982,905,2.749,912,3.268,941,1.726,952,3.137,957,1.666,958,4.276,959,3.132,970,1.379,972,1.483,974,2.036,1097,2.036,1106,2.228,1381,3.137,1399,3.137,1427,2.228,1429,2.749,1455,1.083,1473,2.036,1475,2.46,1496,2.924,1517,2.648,1520,2.648,1521,2.42,1523,2.648,1524,2.42,1527,2.42,1564,1.51,1565,1.379,1567,1.379,1572,1.51,1573,1.51,1604,2.126,1605,2.228,1606,3.729,1607,3.729,1608,3.137,1609,3.137,1610,5.216,1611,5.216,1612,4.429,1613,4.429,1614,4.429,1615,5.216,1616,3.726,1617,4.595,1618,4.89,1619,3.726,1620,2.524,1621,3.726,1622,5.458,1623,3.726,1624,3.726,1625,3.726,1626,2.524,1627,5.216,1628,3.228,1629,3.726,1630,2.524,1631,4.117,1632,4.391,1633,3.726,1634,2.524,1635,4.89,1636,2.749,1637,3.726,1638,2.524,1639,2.524,1640,2.524,1641,2.524,1642,2.524,1643,2.126,1644,2.126,1645,1.863,1646,2.524,1647,2.524,1648,2.524,1649,2.524,1650,2.126,1651,2.524,1652,2.524,1653,2.524,1654,4.429,1655,4.429,1656,2.524,1657,3.726,1658,3.726,1659,2.524,1660,2.524,1661,2.524,1662,2.524,1663,2.524,1664,2.524,1665,2.524,1666,2.524,1667,2.524,1668,2.524,1669,2.524,1670,2.524,1671,2.524,1672,2.524,1673,2.524,1674,2.524,1675,2.524,1676,2.524,1677,2.524,1678,2.524,1679,3.726,1680,3.726,1681,4.89,1682,3.726,1683,3.726,1684,3.726,1685,3.726,1686,3.726,1687,3.726,1688,3.726,1689,3.726,1690,3.726,1691,3.726,1692,6.176,1693,6.176,1694,3.726,1695,3.726,1696,3.726,1697,3.726,1698,3.726,1699,3.726,1700,3.726,1701,2.126,1702,3.726,1703,3.726,1704,3.726,1705,3.726,1706,2.46,1707,3.726,1708,3.137,1709,2.524,1710,3.726,1711,3.726,1712,3.726,1713,3.726,1714,5.795,1715,5.795,1716,5.795,1717,5.795,1718,5.795,1719,3.726,1720,3.726,1721,3.726,1722,3.137,1723,3.726,1724,3.726,1725,2.126,1726,2.524]],["title/components/HomeComponent-1.html",[0,0.084,65,0.579,175,0.837]],["body/components/HomeComponent-1.html",[0,0.182,1,1.073,2,1.293,3,0.303,4,0.263,5,1.153,6,1.239,7,1.239,8,0.263,10,1.153,11,1.909,12,1.909,18,1.39,20,1.39,22,0.263,23,0.618,25,0.341,26,0.029,27,0.682,33,0.901,35,0.656,36,0.387,37,1.153,38,0.303,39,0.303,40,1.073,41,1.39,42,0.883,43,1.239,44,1.882,45,1.239,46,0.556,47,1.239,48,0.862,49,1.724,50,1.239,51,0.928,52,1.239,53,1.153,54,1.39,55,1.239,56,0.862,57,1.073,58,1.239,59,0.928,60,1.073,61,1.239,62,1.073,63,1.239,64,1.239,65,1.257,66,1.604,67,1.073,68,1.239,69,0.928,70,1.239,71,0.928,72,1.239,73,1.073,74,1.239,75,1.073,76,0.928,77,1.239,78,1.153,79,1.153,80,1.239,81,0.862,82,1.073,83,1.604,84,0.862,85,1.239,86,1.073,87,1.239,88,0.862,89,0.682,90,1.153,91,1.239,92,0.862,93,1.239,94,0.928,95,1.239,96,1.153,97,0.999,98,0.999,99,1.239,100,1.239,101,0.021,102,0.021,107,1.034,109,1.542,111,0.883,113,1.639,114,2.185,116,0.739,117,0.627,119,2.149,120,1.461,124,2.174,127,1.792,128,1.539,132,0.813,152,1.939,158,1.815,159,1.494,162,1.293,163,1.792,166,1.435,167,1.333,169,1.238,174,1.853,175,1.153,186,1.542,257,1.882,258,2.322,407,1.239,423,3.324,425,2.146,427,1.073,428,1.331,429,1.331,432,1.942,445,2.322,511,2.149,512,2.322,513,1.39,519,2.149,520,2.522,539,4.219,540,3.257,542,3.257,544,2.554,575,2.554,940,2.554,1106,2.997,1455,1.659,1605,2.997,1608,4.219,1609,4.219,1631,5.477,1727,3.257,1728,6.09,1729,5.011,1730,3.869,1731,6.505,1732,3.869,1733,3.869,1734,3.869,1735,5.011,1736,3.869,1737,3.869]],["title/injectables/HttpService.html",[103,0.746,113,0.865]],["body/injectables/HttpService.html",[3,0.141,4,0.122,8,0.195,13,0.665,15,1.135,22,0.122,23,0.354,25,0.444,26,0.029,27,1.16,28,0.343,29,0.4,33,0.939,35,0.456,36,0.18,38,0.141,39,0.141,46,0.571,101,0.012,102,0.012,103,0.639,105,0.771,107,0.593,109,1.757,111,0.506,112,1.514,113,1.056,116,1.09,117,0.925,120,1.432,123,0.639,124,1.062,126,1.583,132,1.043,137,2.417,143,2.657,146,2.52,147,2.227,148,2.567,149,3.412,150,2.83,154,1.075,158,1.986,159,1.789,165,0.716,166,1.056,169,0.639,172,1.09,174,0.665,178,2.406,179,2.837,180,2.031,181,3.25,182,2.406,186,1.441,207,1.895,208,2.999,209,1.33,214,2.543,215,2.72,216,2.053,221,1.33,223,1.928,225,1.41,227,3.516,230,2.95,245,2.607,264,1.92,276,3.471,285,4.05,287,2.446,298,0.431,322,1.806,378,2.244,380,0.987,427,0.796,428,0.987,464,3.516,513,1.796,522,1.717,523,3.623,530,2.118,532,2.406,535,2.607,609,2.576,689,3.623,690,2.118,782,1.568,783,1.187,838,5.143,862,2.716,902,2.417,941,1.33,959,1.441,972,2.639,1053,2.208,1106,1.717,1110,1.187,1132,4.622,1181,1.187,1214,3.832,1229,3.876,1262,4.429,1311,3.705,1313,4.179,1314,3.428,1319,3.766,1326,1.895,1422,3.832,1577,3.428,1632,5.278,1706,3.428,1738,1.514,1739,3.583,1740,2.871,1741,2.871,1742,2.871,1743,5.489,1744,2.871,1745,2.871,1746,2.871,1747,5.872,1748,2.871,1749,2.871,1750,1.798,1751,5.706,1752,5.354,1753,5.193,1754,5.872,1755,6.359,1756,5.706,1757,5.193,1758,6.002,1759,2.871,1760,1.798,1761,5.605,1762,6.453,1763,2.871,1764,1.798,1765,3.763,1766,4.09,1767,4.765,1768,2.871,1769,1.798,1770,6.196,1771,4.372,1772,5.193,1773,5.193,1774,4.372,1775,2.871,1776,1.798,1777,2.871,1778,2.871,1779,2.871,1780,4.372,1781,1.798,1782,2.871,1783,2.417,1784,3.583,1785,2.871,1786,1.798,1787,5.193,1788,2.871,1789,1.798,1790,2.871,1791,1.798,1792,2.871,1793,1.798,1794,2.871,1795,1.798,1796,4.765,1797,2.871,1798,2.871,1799,1.514,1800,1.075,1801,1.514,1802,1.798,1803,2.871,1804,1.798,1805,5.353,1806,1.798,1807,4.09,1808,1.798,1809,1.798,1810,5,1811,2.871,1812,1.798,1813,1.798,1814,4.47,1815,1.798,1816,1.798,1817,1.798,1818,1.798,1819,1.798,1820,1.798,1821,1.798,1822,2.871,1823,1.514,1824,1.798,1825,2.871,1826,1.798,1827,2.871,1828,2.871,1829,1.798,1830,1.798,1831,1.798,1832,1.798,1833,1.798,1834,1.798,1835,1.798,1836,1.798]],["title/interfaces/INotification.html",[354,0.999,1420,2.212]],["body/interfaces/INotification.html",[0,0.137,3,0.359,4,0.312,8,0.312,13,1.694,22,0.312,23,0.688,24,2.68,25,0.456,26,0.029,27,1.181,29,0.621,35,0.511,36,0.458,38,0.436,39,0.359,101,0.023,102,0.023,103,1.241,119,1.965,120,1.391,121,3.024,122,2.739,123,1.241,126,1.546,127,2.122,128,1.823,129,3.024,130,2.3,132,0.974,135,1.79,165,1.823,172,0.875,191,2.122,215,2.122,216,2.3,223,2.149,225,1.24,255,1.562,268,4.431,298,1.337,322,1.365,354,1.365,356,2.3,372,2.782,445,2.122,463,2.122,513,1.271,514,1.467,525,2.576,532,2.122,572,2.503,587,2.739,609,1.823,1414,2.739,1415,3.38,1417,3.857,1418,3.857,1419,3.857,1420,3.964,1422,4.111,1423,3.678,1425,3.38,1426,3.857,1427,2.739,1428,3.38,1429,3.38,1430,3.857,1432,3.857,1433,3.857,1434,4.691,1435,4.691,1436,3.857,1437,3.857,1438,5.056,1439,4.691,1440,5.26,1441,5.26,1442,3.857,1443,3.857,1444,3.857,1445,3.857]],["title/components/IndexComponent.html",[0,0.1,67,0.93]],["body/components/IndexComponent.html",[0,0.173,1,0.646,2,0.906,3,0.183,4,0.159,5,0.695,6,0.746,7,0.746,8,0.159,10,0.695,11,1.823,12,1.823,14,1.626,15,1.399,16,1.397,18,0.974,20,0.974,22,0.343,23,0.433,25,0.418,26,0.029,28,0.897,29,0.524,30,1.918,31,2.59,32,2.59,33,0.996,35,0.692,36,0.233,37,0.695,38,0.183,39,0.183,40,0.646,41,0.974,42,0.619,43,0.746,44,1.505,45,0.746,46,0.423,47,0.746,48,0.519,49,0.906,50,0.746,51,0.559,52,0.746,53,0.695,54,0.519,55,0.746,56,0.519,57,0.646,58,0.746,59,0.559,60,0.646,61,0.746,62,0.646,63,0.746,64,0.746,65,0.725,66,1.124,67,1.304,68,0.746,69,0.559,70,0.746,71,0.559,72,0.746,73,0.646,74,0.746,75,0.646,76,1.358,77,0.746,78,0.695,79,1.259,80,0.746,81,0.519,82,0.974,83,1.124,84,0.519,85,0.746,86,0.646,87,0.746,88,0.519,89,0.744,90,0.695,91,0.746,92,0.519,93,0.746,94,0.559,95,0.746,96,0.695,97,1.09,98,0.601,99,0.746,100,0.746,101,0.014,102,0.014,104,3.288,107,0.725,109,1.663,111,0.619,113,1.419,114,1.992,116,0.445,117,0.378,119,2.016,120,1.404,122,2.099,123,1.29,125,1.761,126,1.172,127,1.626,128,1.397,132,0.957,134,1.811,135,1.046,139,2.955,140,3.498,141,3.91,143,2.016,144,1.626,147,1.505,151,1.918,152,1.046,153,3.555,154,2.099,158,1.865,159,1.579,160,4.765,161,1.864,162,1.368,163,1.08,166,1.523,167,1.271,168,1.719,169,1.047,170,3.555,175,1.046,176,1.626,177,1.762,178,1.957,179,1.918,180,1.401,182,1.626,183,2.955,184,2.955,186,1.172,190,1.393,191,2.548,213,1.918,214,1.626,217,1.08,225,0.97,232,1.505,255,1.271,257,1.124,258,2.178,264,1.298,275,1.626,277,2.246,373,1.393,381,1.17,398,0.601,402,1.762,407,0.746,416,2.754,418,1.08,425,1.823,427,0.646,429,0.802,432,1.17,436,0.862,450,2.568,476,3.957,498,1.538,511,2.273,513,1.304,514,1.124,515,1.762,516,2.787,517,1.626,519,1.505,520,2.016,528,1.273,535,1.17,546,2.525,556,1.538,590,1.962,596,3.169,605,1.397,610,2.317,629,3.116,642,1.505,675,2.962,676,2.531,689,2.317,707,1.918,764,4.461,795,1.538,858,3.555,877,1.719,878,1.719,883,1.962,900,1.962,905,1.719,940,3.102,941,2.178,942,3.102,943,2.59,946,3.498,965,2.317,1046,1.393,1067,2.59,1086,2.59,1087,2.59,1145,1.626,1147,2.955,1149,1.719,1184,2.955,1216,2.59,1233,2.099,1237,2.955,1323,2.59,1414,3.288,1423,1.538,1427,3.463,1428,3.116,1455,0.999,1460,1.962,1491,1.962,1493,2.317,1496,2.811,1521,2.307,1524,2.307,1527,2.307,1565,1.273,1567,1.273,1570,1.08,1595,1.719,1605,2.525,1617,3.957,1645,2.59,1650,1.962,1708,1.962,1771,2.955,1800,2.099,1801,1.962,1837,1.962,1838,3.555,1839,3.555,1840,3.51,1841,3.51,1842,5.042,1843,4.223,1844,5.042,1845,5.042,1846,4.223,1847,4.765,1848,4.7,1849,4.7,1850,4.7,1851,4.223,1852,5.499,1853,3.51,1854,2.33,1855,3.51,1856,3.91,1857,4.7,1858,5.9,1859,5.046,1860,3.51,1861,2.955,1862,2.955,1863,3.51,1864,3.51,1865,4.223,1866,4.223,1867,4.223,1868,3.51,1869,4.223,1870,3.51,1871,2.33,1872,3.51,1873,3.51,1874,5.042,1875,4.461,1876,2.955,1877,2.33,1878,6.255,1879,2.955,1880,4.223,1881,3.51,1882,5.042,1883,3.51,1884,4.223,1885,3.51,1886,4.223,1887,2.33,1888,3.51,1889,3.51,1890,3.51,1891,3.51,1892,3.51,1893,3.51,1894,2.33,1895,5.499,1896,3.51,1897,3.51,1898,3.51,1899,3.51,1900,3.51,1901,3.51,1902,2.33,1903,3.51,1904,3.51,1905,5.659,1906,2.33,1907,2.33,1908,2.33,1909,2.33,1910,2.955,1911,2.33,1912,1.962,1913,2.33,1914,1.962,1915,2.33,1916,2.33,1917,1.962,1918,1.962,1919,1.962,1920,2.33,1921,2.33,1922,2.33,1923,2.33,1924,2.33,1925,4.223,1926,2.33,1927,1.962,1928,2.33,1929,2.33,1930,5.9,1931,2.33,1932,2.33,1933,2.955,1934,2.33,1935,2.33,1936,5.299,1937,2.33,1938,2.33,1939,2.33,1940,2.787,1941,2.33,1942,3.555,1943,2.33,1944,2.33,1945,2.33,1946,4.223,1947,2.33,1948,2.33,1949,4.223,1950,2.33,1951,2.33,1952,2.33,1953,2.33,1954,2.33,1955,1.962,1956,3.51,1957,2.33,1958,2.33,1959,3.51,1960,2.33,1961,2.33,1962,2.33,1963,2.33,1964,2.33,1965,2.33,1966,3.51,1967,2.33,1968,2.33,1969,2.33,1970,2.33,1971,2.33,1972,4.7,1973,3.51,1974,3.51]],["title/interfaces/LabelValueData.html",[354,0.999,382,2.004]],["body/interfaces/LabelValueData.html",[3,0.337,4,0.293,8,0.416,22,0.293,23,0.662,25,0.442,26,0.029,27,1.222,28,0.822,29,0.733,30,2.351,38,0.458,39,0.337,42,1.188,46,0.536,89,0.945,101,0.022,102,0.022,135,1.912,147,1.846,152,1.283,162,1.111,167,1.286,180,1.598,203,1.712,209,2.971,222,2.505,225,1.206,257,1.87,275,2.484,277,2.326,286,2.932,354,1.741,355,2.573,356,2.16,357,2.351,358,2.573,359,3.191,360,2.573,361,3.493,362,2.16,363,2.84,364,2.573,365,2.351,366,2.84,367,3.855,368,3.656,369,2.573,370,3.206,371,2.84,372,2.833,373,2.573,374,2.84,375,3.069,376,2.573,377,3.175,378,2.16,379,3.175,380,2.009,381,2.16,382,3.656,383,1.846,384,2.84,385,3.175,386,3.539,387,3.206,388,3.175,389,2.16,390,2.351,391,3.175,392,3.175,393,3.175,394,3.175,395,3.175,396,3.175,397,3.175,398,1.111,399,3.175,400,3.175,401,3.956,402,2.692,403,3.175,404,3.175,405,3.175,406,4.641,407,1.378,408,3.175,409,3.175,410,3.175,411,3.175,412,2.351,413,2.84,414,3.175,415,3.175,416,2.351,417,2.16,418,1.994,419,1.846]],["title/components/LoaderComponent.html",[0,0.1,71,0.804]],["body/components/LoaderComponent.html",[0,0.177,1,1.228,2,1.408,3,0.347,4,0.301,5,1.319,6,1.417,7,1.417,8,0.301,10,1.319,11,1.926,12,1.926,14,2.527,15,1.513,16,2.171,18,1.513,20,1.513,22,0.301,23,0.673,25,0.371,26,0.028,29,0.493,33,0.884,35,0.66,36,0.443,38,0.347,39,0.347,40,1.228,41,1.513,42,0.961,43,1.417,44,1.977,45,1.417,46,0.592,47,1.417,48,0.985,49,1.408,50,1.417,51,1.061,52,1.417,53,1.319,54,0.985,55,1.417,56,0.985,57,1.228,58,1.417,59,1.061,60,1.228,61,1.417,62,1.228,63,1.417,64,1.417,65,1.126,66,1.747,67,1.228,68,1.417,69,1.061,70,1.417,71,1.481,72,1.417,73,1.228,74,1.417,75,1.228,76,1.061,77,1.417,78,1.319,79,1.319,80,1.417,81,0.985,82,1.228,83,1.747,84,0.985,85,1.417,86,1.228,87,1.417,88,0.985,89,0.78,90,1.319,91,1.417,92,0.985,93,1.417,94,1.061,95,1.417,96,1.319,97,1.142,98,1.142,99,1.417,100,1.417,101,0.022,102,0.022,111,0.78,116,0.845,117,0.717,380,1.877,424,2.646,443,3.262,444,3.262,1519,3.904,1570,2.05,1975,3.725,1976,6.609,1977,5.455,1978,5.455,1979,4.593,1980,4.425,1981,4.186,1982,4.425,1983,4.425,1984,4.425,1985,4.425,1986,4.425,1987,4.425]],["title/injectables/LoaderService.html",[103,0.746,1981,2.212]],["body/injectables/LoaderService.html",[2,1.376,3,0.334,4,0.29,8,0.29,13,1.576,15,1.775,22,0.29,23,0.658,25,0.363,26,0.029,28,0.814,29,0.699,33,0.988,35,0.475,36,0.426,38,0.334,39,0.334,46,0.426,101,0.022,102,0.022,103,1.187,105,1.828,107,1.1,111,1.025,116,0.814,117,0.691,121,3.518,124,1.971,125,2.049,132,1.073,133,3.495,134,2.815,135,1.998,152,1.27,165,1.696,166,1.572,172,0.814,223,1.466,232,2.613,245,2.676,255,1.395,322,1.27,461,3.518,493,3.187,513,1.69,528,2.912,604,1.971,639,3.932,654,3.518,795,3.518,828,3.442,851,3.145,896,5.136,941,2.469,1109,3.187,1303,5.13,1310,4.493,1981,3.518,1988,3.588,1989,6.092,1990,5.329,1991,5.329,1992,4.262,1993,6.092,1994,4.487,1995,5.329,1996,5.329,1997,4.262,1998,5.329,1999,5.329,2000,5.329,2001,5.329,2002,5.329]],["title/injectables/LocalStorageService.html",[103,0.746,114,1.153]],["body/injectables/LocalStorageService.html",[3,0.282,4,0.245,8,0.245,13,1.768,15,1.586,22,0.245,23,0.59,25,0.436,26,0.029,27,1.189,29,0.75,33,1.051,35,0.402,36,0.36,38,0.375,39,0.282,46,0.612,54,1.362,101,0.02,102,0.02,103,1.065,105,1.545,107,0.987,111,0.843,114,1.645,116,1.168,117,0.992,119,2.453,120,1.429,123,1.065,125,2.03,126,1.825,127,2.937,128,2.724,131,2.051,132,1.087,133,2.612,134,2.453,135,1.704,165,1.903,169,0.802,172,1.168,189,4.514,214,2.215,255,1.372,269,4.184,298,0.864,322,1.861,380,2.104,383,2.051,418,2.649,513,1.586,572,3.704,586,3.543,638,3.528,642,2.051,654,3.774,673,2.932,675,2.401,676,3.071,1570,2.215,1628,3.543,1706,3.156,1800,2.154,1912,4.026,1979,4.519,2003,4.82,2004,2.658,2005,4.782,2006,5.718,2007,4.782,2008,5.718,2009,3.602,2010,3.602,2011,3.602,2012,4.782,2013,3.602,2014,4.026,2015,4.782,2016,3.602,2017,3.602,2018,5.151,2019,4.782,2020,4.782,2021,4.782,2022,3.602,2023,4.782,2024,3.602,2025,4.782,2026,3.602,2027,3.602,2028,5.368,2029,3.602,2030,4.782,2031,3.602,2032,3.602,2033,2.658,2034,3.033,2035,3.033,2036,3.033,2037,6.339,2038,4.782,2039,3.602,2040,3.602,2041,3.602,2042,3.602,2043,3.602,2044,3.602]],["title/components/LoginComponent.html",[0,0.1,73,0.93]],["body/components/LoginComponent.html",[0,0.151,1,0.888,2,1.139,3,0.251,4,0.218,5,0.954,6,1.024,7,1.024,8,0.218,10,0.954,11,1.881,12,1.881,14,2.045,15,1.402,16,1.756,18,1.224,20,1.224,22,0.218,23,0.545,25,0.3,26,0.029,28,0.843,29,0.607,33,0.926,35,0.729,36,0.32,37,0.954,38,0.251,39,0.251,40,0.888,41,1.224,42,0.778,43,1.024,44,1.744,45,1.024,46,0.505,47,1.024,48,0.713,49,1.139,50,1.024,51,0.768,52,1.024,53,0.954,54,0.713,55,1.024,56,0.713,57,0.888,58,1.024,59,0.768,60,0.888,61,1.024,62,0.888,63,1.618,64,1.024,65,0.911,66,1.413,67,0.888,68,1.024,69,0.768,70,1.024,71,0.768,72,1.024,73,1.511,74,1.024,75,0.888,76,1.307,77,1.024,78,0.954,79,0.954,80,1.024,81,0.713,82,0.888,83,1.413,84,0.713,85,1.024,86,0.888,87,1.024,88,0.713,89,0.564,90,0.954,91,1.024,92,0.713,93,1.024,94,0.768,95,1.024,96,0.954,97,0.826,98,1.139,99,1.024,100,1.024,101,0.018,102,0.018,107,0.911,109,1.511,111,0.778,113,1.562,114,2.082,116,0.611,117,0.519,120,1.394,123,1.316,127,2.045,128,2.167,132,0.883,140,2.913,141,2.361,143,1.893,144,2.045,150,2.045,152,0.954,155,2.361,158,1.703,159,1.315,161,2.113,162,1.139,163,1.482,166,1.562,167,1.307,169,1.125,172,0.843,175,0.954,176,1.482,177,1.606,178,1.482,179,1.748,180,1.703,182,1.482,186,0.888,189,3.728,190,1.913,191,2.99,213,2.411,221,2.045,225,1.292,244,1.913,248,2.639,255,1.212,264,1.632,298,1.417,301,2.913,380,1.101,383,1.372,398,0.826,407,1.024,419,2.805,424,1.913,425,2.032,427,0.888,428,1.518,429,1.101,432,1.606,435,2.491,436,1.183,443,2.639,444,2.639,497,2.694,514,1.413,605,1.756,609,1.273,620,2.694,621,1.372,622,1.372,624,1.273,642,1.893,707,1.748,741,3.256,776,3.335,777,1.748,778,1.748,779,1.482,782,1.748,783,2.112,795,2.112,828,2.536,865,2.975,866,2.975,931,3.257,932,2.639,940,2.913,946,2.913,1052,2.913,1097,2.411,1099,3.256,1174,1.913,1199,2.639,1207,2.913,1259,2.913,1261,3.256,1279,2.694,1287,2.913,1326,2.913,1423,2.913,1427,2.639,1455,1.372,1515,2.411,1516,4.072,1517,3.021,1520,3.021,1521,2.76,1522,3.335,1523,3.021,1524,2.76,1526,3.335,1527,2.76,1555,3.256,1563,2.112,1564,1.913,1565,1.748,1567,1.748,1571,2.112,1572,1.913,1578,2.361,1582,2.361,1605,1.913,1800,1.913,1847,4.973,1856,3.256,1859,4.253,1861,3.716,1862,3.716,1910,3.716,1914,2.694,2014,2.694,2045,2.694,2046,4.413,2047,4.413,2048,5.052,2049,5.446,2050,5.446,2051,4.413,2052,3.199,2053,4.413,2054,3.199,2055,4.413,2056,4.413,2057,3.199,2058,3.199,2059,3.199,2060,3.199,2061,2.694,2062,3.199,2063,4.413,2064,3.199,2065,3.199,2066,3.199,2067,1.913,2068,3.199,2069,3.199,2070,2.694,2071,3.199,2072,3.199,2073,3.199,2074,2.694,2075,3.199,2076,3.199,2077,3.199,2078,3.199,2079,3.199,2080,3.199,2081,4.413,2082,3.199,2083,3.199,2084,3.199,2085,3.199,2086,3.199,2087,3.199]],["title/components/PageNotFoundComponent.html",[0,0.1,75,0.93]],["body/components/PageNotFoundComponent.html",[0,0.174,1,1.188,2,1.38,3,0.335,4,0.291,5,1.276,6,1.371,7,1.371,8,0.291,10,1.276,11,1.922,12,1.922,14,2.477,15,1.483,16,1.704,18,1.483,20,1.483,22,0.291,25,0.291,26,0.028,29,0.596,33,0.867,35,0.596,36,0.428,38,0.335,39,0.335,40,1.188,41,1.483,42,0.942,43,1.371,44,1.954,45,1.371,46,0.583,47,1.371,48,0.954,49,1.38,50,1.371,51,1.027,52,1.371,53,1.276,54,0.954,55,1.371,56,0.954,57,1.188,58,1.371,59,1.027,60,1.188,61,1.371,62,1.188,63,1.371,64,1.371,65,1.103,66,1.712,67,1.188,68,1.371,69,1.027,70,1.371,71,1.027,72,1.371,73,1.188,74,1.371,75,1.693,76,1.589,77,1.371,78,1.276,79,1.276,80,1.371,81,0.954,82,1.188,83,1.712,84,0.954,85,1.371,86,1.188,87,1.371,88,0.954,89,0.755,90,1.276,91,1.371,92,0.954,93,1.371,94,1.027,95,1.371,96,1.276,97,1.105,98,1.105,99,1.371,100,1.371,101,0.022,102,0.022,107,1.103,111,0.755,116,0.818,117,0.694,132,0.867,167,1.027,172,1.021,232,2.293,255,1.398,362,2.684,509,4.503,513,1.693,596,3.831,632,3.197,1199,3.197,1201,4.501,1473,2.92,1507,4.726,1570,1.984,2088,4.907,2089,4.907,2090,3.606,2091,5.345,2092,5.345,2093,6.103,2094,4.282,2095,4.282,2096,4.282,2097,5.345,2098,5.345,2099,5.345,2100,4.282,2101,4.282]],["title/components/PriceAlertComponent.html",[0,0.1,81,0.746]],["body/components/PriceAlertComponent.html",[0,0.184,1,0.818,2,1.076,3,0.231,4,0.201,5,0.879,6,0.944,7,0.944,8,0.201,10,0.879,11,1.867,12,1.867,18,1.157,20,1.157,22,0.201,23,0.649,25,0.358,26,0.029,27,1.014,28,0.563,29,0.686,33,0.933,35,0.586,36,0.295,37,0.879,38,0.231,39,0.231,40,0.818,41,1.157,42,0.735,43,1.549,44,1.683,45,0.944,46,0.555,47,0.944,48,0.657,49,1.076,50,0.944,51,0.708,52,0.944,53,0.879,54,0.657,55,0.944,56,0.657,57,0.818,58,0.944,59,0.708,60,0.818,61,0.944,62,0.818,63,0.944,64,0.944,65,0.861,66,1.335,67,0.818,68,0.944,69,0.708,70,0.944,71,0.708,72,0.944,73,0.818,74,0.944,75,0.818,76,1.16,77,0.944,78,0.879,79,0.879,80,0.944,81,1.171,82,1.904,83,1.335,84,0.657,85,0.944,86,0.818,87,0.944,88,0.657,89,0.52,90,0.879,91,0.944,92,0.657,93,0.944,94,0.708,95,0.944,96,0.879,97,1.357,98,1.486,99,0.944,100,0.944,101,0.017,102,0.017,107,0.861,109,1.705,111,0.735,113,1.527,116,0.923,117,0.784,120,1.346,123,1.417,125,1.683,126,1.157,131,1.265,132,0.98,146,1.659,147,1.788,148,2.051,151,2.278,152,0.879,158,1.926,159,1.716,161,1.944,162,1.431,166,1.248,167,1.16,172,1.154,174,1.542,178,1.367,179,1.611,180,1.243,181,2.428,182,1.367,186,1.342,203,2.092,218,2.493,223,1.434,225,0.998,232,1.788,255,1.261,264,1.542,275,2.436,287,2.892,311,2.752,322,1.442,398,0.761,417,2.093,425,1.98,427,0.818,428,1.015,429,1.015,435,2.355,436,1.091,450,1.611,511,1.788,512,2.57,513,1.157,514,1.335,517,1.932,519,1.788,520,2.255,525,2.593,526,2.493,530,3.076,534,2.752,535,1.481,589,3.233,604,1.944,605,2.092,608,1.481,611,2.872,612,2.639,621,1.265,622,1.265,623,1.611,624,1.174,632,2.493,642,2.379,646,3.316,673,3.302,748,2.752,828,2.428,840,3.076,862,2.074,972,1.659,974,2.872,1102,3.511,1109,3.144,1110,2.752,1145,1.367,1278,3.076,1323,3.076,1455,1.265,1459,3.511,1464,4.426,1465,3.511,1466,3.511,1467,3.076,1468,3.511,1469,3.076,1473,2.278,1480,4.426,1481,4.426,1486,2.176,1487,2.176,1492,2.176,1493,2.752,1494,3.076,1496,2.493,1500,2.483,1504,3.076,1509,3.076,1510,3.076,1511,2.483,1577,1.947,1701,2.483,1725,2.483,1940,4.29,2074,3.511,2102,4.983,2103,3.906,2104,2.176,2105,3.511,2106,3.511,2107,6.147,2108,5.257,2109,4.169,2110,4.169,2111,3.511,2112,2.95,2113,6.619,2114,5.757,2115,2.95,2116,4.169,2117,2.95,2118,4.169,2119,4.169,2120,2.95,2121,3.511,2122,4.169,2123,4.169,2124,4.169,2125,2.483,2126,2.95,2127,2.95,2128,2.483,2129,2.95,2130,2.95,2131,4.169,2132,4.169,2133,4.169,2134,4.169,2135,3.511,2136,4.169,2137,4.169,2138,4.169]],["title/components/ProfileComponent.html",[0,0.1,84,0.746]],["body/components/ProfileComponent.html",[0,0.161,1,0.613,2,0.87,3,0.173,4,0.15,5,0.659,6,0.708,7,0.708,8,0.311,10,0.659,11,1.812,12,1.812,18,0.936,20,0.936,22,0.15,23,0.416,25,0.278,26,0.029,28,0.874,29,0.738,33,0.944,35,0.602,36,0.221,38,0.173,39,0.173,40,0.613,41,0.936,42,0.594,43,0.708,44,1.465,45,0.708,46,0.409,47,0.708,48,0.492,49,0.87,50,0.708,51,0.53,52,0.708,53,0.659,54,0.492,55,0.708,56,0.492,57,0.613,58,0.708,59,0.53,60,0.613,61,0.708,62,0.613,63,0.708,64,0.708,65,0.696,66,1.08,67,0.613,68,0.708,69,0.53,70,0.708,71,0.53,72,0.708,73,0.613,74,0.708,75,0.613,76,0.53,77,0.708,78,0.659,79,0.659,80,0.708,81,0.492,82,0.613,83,1.08,84,1.019,85,0.708,86,0.613,87,0.708,88,0.492,89,0.389,90,0.659,91,0.708,92,0.492,93,0.708,94,0.53,95,0.708,96,0.659,97,0.57,98,1.34,99,0.708,100,0.708,101,0.014,102,0.014,107,0.696,109,1.719,111,0.594,113,1.394,114,1.858,116,0.422,117,0.358,120,1.41,124,2.059,125,1.577,130,3.178,132,0.903,143,1.962,144,1.562,145,2.017,146,1.342,148,1.997,158,1.908,159,1.66,161,1.692,162,1.34,163,1.024,166,1.181,167,1.098,169,1.24,172,0.644,175,1.005,176,1.562,177,1.11,178,1.894,179,1.207,180,1.66,181,1.11,182,1.894,186,1.441,194,2.837,208,2.499,217,1.024,220,2.488,225,1.279,257,1.08,264,1.247,276,1.11,277,2.423,291,3.635,292,2.946,298,1.612,390,3.18,398,0.57,407,0.708,412,1.207,416,1.842,419,2.679,423,2.445,427,0.613,428,0.76,429,0.76,432,1.11,433,1.631,435,2.149,436,0.817,445,1.562,450,2.691,453,1.631,463,2.697,467,3.427,511,1.446,512,1.562,513,1.545,514,1.08,515,1.693,517,1.562,519,1.446,520,1.962,522,2.017,526,2.017,528,1.842,533,4.179,534,2.226,535,1.11,544,1.459,546,1.322,596,2.736,604,1.92,605,1.342,609,1.342,613,2.488,621,2.113,622,2.113,623,1.842,624,1.96,658,2.226,668,3.017,675,3.013,707,1.207,743,4.21,744,4.371,756,1.861,761,1.322,776,3.565,777,1.207,778,1.207,779,1.024,782,1.207,783,1.459,796,3.443,797,2.839,798,2.839,799,2.839,800,2.839,801,2.839,802,2.839,803,2.839,804,2.839,805,2.839,806,2.839,807,2.839,808,2.839,809,2.839,810,2.839,811,2.839,812,2.839,813,2.839,814,2.839,815,2.839,816,2.839,817,2.839,818,2.839,819,2.839,820,2.839,821,2.839,822,2.839,823,2.839,824,2.839,825,2.839,826,2.839,827,2.839,828,2.795,829,3.443,830,5.115,854,1.861,862,1.754,865,3.529,866,3.556,868,2.488,871,3.831,873,1.459,877,3.017,878,3.017,882,1.861,909,3.985,910,4.547,911,2.839,912,3.017,931,2.946,932,2.017,946,2.226,957,1.459,958,3.635,959,2.473,960,1.631,961,1.861,962,1.861,963,1.861,964,1.861,972,1.342,973,3.852,974,1.842,977,2.839,1046,2.017,1048,1.459,1051,3.852,1053,2.12,1054,3.02,1057,1.861,1058,2.839,1059,1.861,1060,1.861,1061,1.861,1067,1.631,1068,1.861,1069,2.839,1070,1.861,1071,1.861,1073,1.861,1074,1.861,1083,3.443,1086,2.488,1087,2.488,1097,2.499,1099,2.488,1108,1.861,1115,3.852,1141,2.226,1143,2.839,1145,1.562,1149,2.488,1311,2.017,1326,2.226,1347,3.831,1354,3.831,1370,3.831,1385,3.831,1490,1.631,1516,4.349,1577,1.459,1590,3.831,1597,4.371,1598,4.371,1628,2.226,1783,2.839,1879,2.839,2139,1.861,2140,3.372,2141,3.372,2142,4.089,2143,4.089,2144,4.089,2145,4.575,2146,4.575,2147,4.575,2148,2.21,2149,2.21,2150,2.21,2151,4.926,2152,2.21,2153,3.372,2154,3.372,2155,3.372,2156,2.21,2157,4.575,2158,3.372,2159,2.21,2160,3.372,2161,2.21,2162,2.21,2163,2.21,2164,3.372,2165,3.372,2166,3.372,2167,2.21,2168,4.148,2169,2.21,2170,2.21,2171,2.21,2172,2.21,2173,2.21,2174,2.21,2175,2.21,2176,2.21,2177,2.21,2178,2.21,2179,2.21,2180,2.21,2181,2.21,2182,2.21,2183,2.21,2184,2.21,2185,2.21,2186,2.21,2187,2.21,2188,2.21,2189,2.21,2190,2.21,2191,2.21,2192,2.21,2193,2.21,2194,2.21,2195,2.21,2196,3.372,2197,3.372,2198,3.372,2199,3.852,2200,3.372]],["title/components/RegisterComponent.html",[0,0.1,86,0.93]],["body/components/RegisterComponent.html",[0,0.126,1,0.641,2,0.901,3,0.181,4,0.157,5,0.689,6,0.74,7,0.74,8,0.157,10,0.689,11,1.822,12,1.822,14,1.617,15,1.746,16,1.389,18,0.968,20,0.968,22,0.157,23,0.431,24,1.497,25,0.373,26,0.029,27,0.741,28,1.047,29,0.697,33,0.994,35,0.702,36,0.231,37,0.689,38,0.181,39,0.181,40,0.641,41,0.968,42,0.615,43,0.74,44,1.499,45,0.74,46,0.421,47,0.74,48,0.515,49,0.901,50,0.74,51,0.555,52,0.74,53,0.689,54,1.119,55,0.74,56,0.515,57,0.641,58,0.74,59,0.555,60,0.641,61,0.74,62,0.641,63,0.74,64,0.74,65,0.72,66,1.117,67,0.641,68,0.74,69,0.555,70,0.74,71,0.555,72,0.74,73,0.641,74,0.74,75,0.641,76,1.008,77,0.74,78,0.689,79,0.689,80,0.74,81,0.515,82,0.641,83,1.117,84,0.515,85,0.74,86,1.299,87,0.74,88,0.515,89,0.407,90,0.689,91,0.74,92,0.515,93,0.74,94,0.555,95,0.74,96,0.689,97,0.597,98,1.208,99,0.74,100,0.74,101,0.014,102,0.014,107,0.72,109,1.603,111,0.615,113,1.416,116,0.441,117,0.375,120,1.177,123,1.402,124,1.954,132,0.915,134,2.749,135,1.575,143,2.008,144,2.169,145,2.8,146,2.343,148,2.212,150,2.169,151,1.906,158,1.862,159,1.575,161,2.382,162,1.52,166,1.297,167,1.008,168,3.101,169,1.177,172,0.666,175,1.04,176,1.617,177,1.752,180,1.911,186,1.166,191,2.169,221,1.617,222,1.497,225,1.299,242,1.706,248,2.087,255,1.008,257,1.499,258,1.947,264,1.731,269,1.526,277,1.731,292,3.28,298,1.386,383,0.992,398,0.597,402,1.752,407,0.74,419,2.566,424,1.383,425,1.817,427,0.641,428,0.795,429,0.795,435,2.38,436,0.855,443,2.087,444,2.087,467,2.303,514,1.692,604,1.954,607,3.159,608,2.523,609,2.102,616,2.303,621,1.803,622,1.803,624,1.672,675,2.652,707,1.906,709,2.575,744,2.303,761,2.513,777,1.263,778,1.263,779,1.071,862,2.008,865,2.886,866,2.886,873,3.317,896,1.706,931,3.764,932,2.087,941,2.728,942,3.727,945,2.938,959,2.834,970,1.906,972,2.343,1046,2.8,1048,3.09,1052,1.526,1053,1.617,1089,4.345,1091,4.754,1092,3.454,1097,2.558,1107,4.569,1109,2.087,1133,1.706,1135,1.526,1145,1.071,1152,3.539,1180,2.575,1207,3.09,1259,2.303,1261,2.575,1265,2.575,1287,2.303,1306,4.644,1311,3.521,1313,3.09,1314,3.09,1319,3.487,1351,2.938,1425,2.575,1455,0.992,1469,1.706,1473,1.906,1515,1.906,1516,3.09,1517,2.513,1518,3.101,1519,2.774,1520,2.513,1521,2.296,1522,2.774,1523,2.513,1524,2.296,1525,3.101,1526,2.774,1527,2.296,1528,3.101,1529,3.539,1533,4.231,1534,3.539,1535,3.539,1536,4.231,1537,3.539,1538,3.942,1540,3.942,1541,3.942,1544,5.698,1555,2.575,1556,3.539,1563,1.526,1564,1.383,1565,1.263,1566,1.706,1567,1.263,1568,1.706,1569,1.947,1570,1.071,1571,1.526,1572,1.383,1573,2.087,1574,1.947,1575,3.539,1576,3.942,1578,3.101,1581,2.938,1582,3.101,1583,1.947,1584,1.947,1585,1.947,1586,1.947,1588,1.947,1590,1.706,1591,1.947,1593,1.947,1594,1.947,1595,1.706,1599,2.938,1601,2.938,1602,2.938,1603,2.938,1823,1.947,1942,3.942,2061,2.938,2168,2.938,2201,1.947,2202,3.489,2203,3.539,2204,3.489,2205,3.489,2206,4.203,2207,5.982,2208,4.203,2209,4.681,2210,2.312,2211,2.312,2212,4.681,2213,2.312,2214,6.294,2215,4.681,2216,3.489,2217,2.312,2218,2.312,2219,4.681,2220,2.938,2221,2.938,2222,2.312,2223,2.312,2224,2.312,2225,2.312,2226,2.312,2227,2.312,2228,2.312,2229,3.942,2230,2.312,2231,1.947,2232,5.283,2233,4.203,2234,4.203,2235,2.312,2236,2.312,2237,2.312,2238,2.312,2239,2.312,2240,2.312,2241,1.947,2242,2.312,2243,2.312,2244,3.489]],["title/injectables/SEOService.html",[103,0.746,2245,2.472]],["body/injectables/SEOService.html",[3,0.245,4,0.213,8,0.213,10,1.609,13,1.159,22,0.213,24,2.933,25,0.417,26,0.029,27,1.197,29,0.704,33,0.952,35,0.485,36,0.314,38,0.245,39,0.245,41,1.498,46,0.656,76,1.641,101,0.018,102,0.018,103,0.969,105,1.344,107,0.898,111,0.767,116,1.121,117,0.952,123,1.479,125,2.02,130,2.184,132,1.023,165,1.247,166,1.123,169,0.698,172,1.205,215,2.015,223,2.328,245,2.71,251,3.687,255,1.573,276,3.425,298,1.044,309,3.983,322,1.858,378,2.184,380,2.293,386,3.298,389,2.184,464,5.052,586,2.871,604,2.333,624,2.336,673,3.513,676,1.573,689,2.871,694,4.207,700,4.207,781,2.312,927,4.207,941,2.923,942,2.871,970,2.377,1098,3.662,1106,2.601,1199,2.988,1233,2.601,1752,4.207,1994,4.207,2199,4.207,2245,3.21,2246,2.638,2247,4.35,2248,4.35,2249,4.35,2250,4.35,2251,4.35,2252,3.133,2253,6.556,2254,4.997,2255,3.133,2256,4.997,2257,4.35,2258,3.133,2259,6.375,2260,6.617,2261,5.398,2262,4.997,2263,4.997,2264,4.35,2265,6.137,2266,4.35,2267,3.133,2268,6.232,2269,4.35,2270,3.133,2271,4.545,2272,5.671,2273,5.398,2274,4.35,2275,5.869,2276,4.997,2277,5.671,2278,5.671,2279,5.671,2280,4.35,2281,3.133,2282,4.35,2283,4.35,2284,3.133,2285,3.133,2286,3.133,2287,3.133,2288,3.133,2289,5.869,2290,3.133,2291,4.35,2292,3.133,2293,4.35,2294,4.35,2295,3.133,2296,3.133,2297,3.133]],["title/components/SearchAlertComponent.html",[0,0.1,88,0.746]],["body/components/SearchAlertComponent.html",[0,0.17,1,0.721,2,0.983,3,0.204,4,0.177,5,0.775,6,1.442,7,0.832,8,0.177,10,0.775,11,1.845,12,1.845,18,1.056,20,1.056,22,0.177,23,0.47,25,0.406,26,0.029,27,1.123,28,0.86,29,0.737,33,0.947,35,0.553,36,0.26,37,0.775,38,0.204,39,0.204,40,0.721,41,1.056,42,0.671,43,0.832,44,1.588,45,0.832,46,0.585,47,0.832,48,0.579,49,0.983,50,0.832,51,0.624,52,0.832,53,0.775,54,0.579,55,0.832,56,0.579,57,0.721,58,0.832,59,0.624,60,0.721,61,0.832,62,0.721,63,0.832,64,0.832,65,0.786,66,1.219,67,0.721,68,0.832,69,0.624,70,0.832,71,0.624,72,0.832,73,0.721,74,0.832,75,0.721,76,1.266,77,0.832,78,0.775,79,0.775,80,0.832,81,0.579,82,0.721,83,1.219,84,0.579,85,0.832,86,0.721,87,0.832,88,1.104,89,1.082,90,0.775,91,0.832,92,0.579,93,0.832,94,0.624,95,0.832,96,0.775,97,1.508,98,1.424,99,0.832,100,0.832,101,0.016,102,0.016,107,0.786,109,1.654,111,0.671,113,1.539,116,0.947,117,0.804,120,1.328,123,0.848,125,1.219,126,1.621,131,2.506,132,0.982,146,1.974,147,1.633,148,1.834,149,2.277,150,1.764,151,2.08,152,1.343,158,1.886,159,1.644,161,1.834,162,1.28,166,1.163,167,1.081,169,0.579,172,0.947,174,1.408,186,1.376,203,1.515,214,1.764,217,2.087,223,1.55,225,0.93,239,2.974,255,1.081,261,3.793,264,1.408,266,2.809,275,2.555,277,2.34,288,3.793,311,2.513,322,1.478,359,2.461,365,2.461,398,0.671,417,1.911,425,2.01,427,0.721,428,0.894,429,0.894,435,2.268,436,0.961,450,2.461,452,5.46,457,2.694,498,2.513,502,2.809,511,1.633,512,1.764,513,1.681,514,1.219,515,1.911,516,3.274,517,1.764,519,1.633,520,2.127,522,2.966,523,2.513,525,2.366,526,2.277,528,2.461,532,1.764,554,1.918,555,1.918,589,3.257,604,1.834,605,1.974,608,1.305,611,2.709,612,2.49,621,1.115,622,1.115,623,1.42,624,1.035,625,2.809,642,1.633,654,2.513,657,3.206,658,2.513,664,2.189,665,3.793,667,4.311,748,3.641,840,2.809,857,3.206,862,1.932,943,4.532,957,2.513,965,3.641,972,1.974,974,2.709,1053,1.764,1109,2.277,1110,2.513,1141,1.716,1145,1.204,1181,2.513,1327,3.206,1332,2.189,1455,1.115,1461,3.206,1473,2.08,1474,3.206,1475,2.513,1486,1.918,1487,1.918,1490,1.918,1492,1.918,1493,3.274,1494,2.809,1496,2.966,1501,3.206,1504,2.809,1507,2.809,1508,3.206,1509,2.809,1510,2.809,1636,2.809,1927,4.175,1940,4.377,2104,1.918,2105,3.206,2106,3.206,2111,2.189,2121,3.206,2125,2.189,2128,2.189,2220,3.206,2298,5.019,2299,3.935,2300,5.961,2301,4.959,2302,3.807,2303,4.959,2304,3.807,2305,3.807,2306,3.807,2307,3.807,2308,2.6,2309,3.807,2310,6.059,2311,3.807,2312,5.279,2313,4.959,2314,4.505,2315,2.6,2316,5.698,2317,3.807,2318,2.6,2319,3.807,2320,2.6,2321,3.807,2322,3.807,2323,3.807,2324,3.807,2325,3.807,2326,2.6,2327,3.807,2328,4.959,2329,3.807,2330,3.807,2331,2.6,2332,3.807,2333,2.6,2334,2.6,2335,2.6,2336,2.6,2337,3.807,2338,4.505,2339,3.807,2340,2.6,2341,2.6,2342,3.807,2343,3.807,2344,2.6,2345,2.6,2346,2.6,2347,3.807,2348,3.807,2349,3.807,2350,3.807,2351,3.807,2352,3.807,2353,3.807,2354,3.807,2355,3.807,2356,3.807,2357,3.807]],["title/modules/UserModule.html",[2067,2.004,2358,2.212]],["body/modules/UserModule.html",[2,0.899,3,0.273,4,0.237,8,0.237,16,1.86,26,0.029,35,0.779,36,0.348,38,0.273,39,0.273,40,0.966,48,1.349,49,1.207,51,1.453,56,1.349,57,0.966,59,1.453,60,0.966,65,1.251,69,1.453,71,1.453,81,1.349,82,0.966,84,1.349,88,1.349,89,0.614,92,1.349,94,1.453,101,0.019,102,0.019,120,0.775,138,2.082,154,2.082,180,1.038,181,1.748,398,0.899,421,2.298,427,0.966,434,3.936,435,1.86,436,1.288,438,2.931,440,2.931,565,2.931,627,2.298,779,1.613,784,2.931,787,3.936,788,2.569,789,2.569,868,2.569,871,2.569,1054,2.298,1174,2.082,1447,2.298,1515,2.554,1517,2.795,1518,3.449,1519,3.086,1520,2.795,1522,3.086,1523,2.795,1524,2.554,1525,3.449,1526,3.086,1527,2.554,1528,3.449,1563,2.298,1564,2.082,1565,1.902,1566,2.569,1567,1.902,1568,2.569,1570,1.613,1571,2.298,1572,2.082,1606,3.936,1607,3.936,1643,2.931,1644,2.931,1799,2.931,1838,3.936,1839,3.936,1917,2.931,1918,2.931,1919,2.931,2067,2.082,2103,2.298,2203,3.936,2231,2.931,2299,2.298,2358,4.562,2359,2.082,2360,2.082,2361,4.443,2362,2.298,2363,2.569,2364,2.931,2365,2.931,2366,2.931,2367,5.101,2368,5.101,2369,3.623,2370,5.101,2371,3.936,2372,3.482,2373,3.936,2374,3.482,2375,2.931,2376,3.482,2377,2.931,2378,2.569,2379,2.931,2380,2.931,2381,2.931,2382,2.931,2383,3.936,2384,2.931,2385,3.482,2386,4.675,2387,3.482,2388,3.482,2389,3.482,2390,2.569,2391,3.482,2392,3.482,2393,3.482,2394,2.931,2395,4.675,2396,3.482,2397,4.675,2398,3.482,2399,4.675,2400,3.482,2401,4.675,2402,4.675,2403,3.482,2404,4.675,2405,3.482,2406,4.675,2407,3.482,2408,4.675,2409,3.482,2410,4.675,2411,3.482,2412,4.675,2413,3.482,2414,4.675,2415,3.482,2416,4.675,2417,3.482,2418,4.675,2419,3.482,2420,4.675,2421,3.482,2422,2.931,2423,4.675,2424,3.482,2425,4.675,2426,4.675,2427,3.482,2428,4.675,2429,3.482,2430,4.675,2431,3.482,2432,4.675,2433,3.482,2434,4.675,2435,3.482,2436,4.675,2437,3.482,2438,4.675,2439,3.482,2440,4.675,2441,3.482,2442,2.569,2443,2.931,2444,2.931]],["title/modules/UserRoutingModule.html",[2067,2.004,2369,2.004]],["body/modules/UserRoutingModule.html",[0,0.203,3,0.356,4,0.309,8,0.309,16,1.809,26,0.029,35,0.762,36,0.455,37,1.355,38,0.356,39,0.356,48,1.235,49,1.608,51,1.33,54,1.012,56,1.235,57,1.539,59,1.33,60,1.539,65,1.145,69,1.33,81,1.235,82,1.539,84,1.235,88,1.235,89,0.977,92,1.235,94,1.33,97,1.173,101,0.023,102,0.023,152,1.355,169,1.012,217,2.106,421,3,427,1.261,743,3.354,773,3.827,1129,5.695,1310,3,1447,3,1521,3.03,1605,2.718,1940,3.661,2103,3,2229,3.827,2299,3,2359,2.718,2363,3.354,2369,3.316,2373,4.669,2375,3.827,2377,3.827,2378,3.354,2379,3.827,2380,3.827,2381,3.827,2382,3.827,2383,4.669,2384,3.827,2422,3.827,2442,3.354,2443,3.827,2445,4.545,2446,4.545,2447,5.985,2448,4.545,2449,4.092,2450,4.545,2451,4.545,2452,4.545,2453,4.545,2454,4.545,2455,4.545]],["title/coverage.html",[2456,3.835]],["body/coverage.html",[0,0.205,1,1.072,8,0.263,9,3.252,25,0.378,26,0.029,42,0.681,48,0.86,51,0.927,53,1.151,56,0.86,59,0.927,62,1.072,65,1.033,67,1.072,69,0.927,71,0.927,73,1.072,75,1.072,78,1.151,81,0.86,84,0.86,86,1.072,88,0.86,90,1.151,92,0.86,94,0.927,96,1.151,101,0.021,102,0.021,103,1.433,104,2.31,106,3.252,113,0.997,114,1.329,174,2.555,194,2.11,195,3.252,298,0.927,354,1.892,355,2.31,357,3.515,358,3.64,370,2.31,376,2.31,382,2.31,420,2.994,421,3.305,422,4.215,430,2.55,447,2.85,487,3.252,612,1.939,774,4.215,782,2.735,851,5.012,933,4.215,1333,3.252,1414,2.31,1415,3.694,1420,2.55,1446,3.252,1447,2.55,1448,3.252,1512,3.252,1513,3.252,1514,3.252,1604,3.252,1727,3.252,1738,3.252,1837,3.252,1975,3.252,1981,2.55,1988,3.252,2003,3.694,2004,3.694,2033,2.85,2045,3.252,2088,3.252,2089,3.252,2090,3.252,2102,3.252,2103,2.55,2104,3.694,2139,3.252,2201,3.252,2245,2.85,2246,3.252,2298,3.252,2299,2.55,2362,2.55,2378,2.85,2390,2.85,2442,2.85,2449,2.85,2456,3.252,2457,3.863,2458,3.863,2459,3.863,2460,4.215,2461,3.252,2462,6.824,2463,3.252,2464,3.252,2465,3.252,2466,3.863,2467,3.863,2468,5.006,2469,3.863,2470,3.863,2471,5.876,2472,5.006,2473,3.863,2474,3.863,2475,3.863,2476,3.863,2477,3.863,2478,3.863,2479,3.863,2480,3.863,2481,3.863,2482,3.863,2483,5.006,2484,3.863,2485,3.863,2486,3.863,2487,3.863,2488,3.863,2489,3.863,2490,3.863,2491,3.863,2492,5.876,2493,3.863,2494,3.863,2495,3.863,2496,5.554,2497,3.863,2498,3.863,2499,3.863,2500,5.006,2501,5.006,2502,5.475,2503,3.863,2504,3.863,2505,3.863,2506,5.418,2507,3.252,2508,3.252,2509,3.252,2510,3.252,2511,3.252,2512,3.252,2513,3.252,2514,3.252,2515,3.863,2516,3.863,2517,3.863,2518,3.863,2519,3.863,2520,3.863,2521,3.863,2522,3.863,2523,3.863,2524,3.863,2525,3.863,2526,3.863,2527,3.863,2528,3.863,2529,3.252,2530,3.252,2531,3.252,2532,3.252,2533,3.252,2534,3.863,2535,5.006,2536,3.863,2537,3.863,2538,3.863,2539,3.863,2540,3.863,2541,3.863,2542,3.863,2543,3.863,2544,3.863,2545,3.863,2546,3.863,2547,3.863,2548,3.252,2549,3.252,2550,3.252,2551,3.863]],["title/dependencies.html",[2360,2.407,2552,2.071]],["body/dependencies.html",[26,0.029,36,0.503,37,1.498,101,0.024,102,0.024,398,1.297,426,4.232,556,3.318,627,3.318,676,2.957,779,2.329,781,4.609,788,3.708,789,3.708,972,2,1054,3.318,1570,2.329,1765,4.232,2360,3.006,2394,4.232,2553,5.026,2554,6.827,2555,5.026,2556,5.889,2557,5.026,2558,5.026,2559,5.026,2560,5.026,2561,5.026,2562,5.026,2563,5.026,2564,5.026,2565,5.026,2566,5.026,2567,5.026,2568,5.026,2569,5.026,2570,5.026,2571,5.026,2572,5.026,2573,5.026,2574,5.026,2575,5.026,2576,5.026,2577,5.026,2578,5.026]],["title/index.html",[22,0.191,2579,2.807,2580,2.807]],["body/index.html",[0,0.185,4,0.335,26,0.024,46,0.493,76,1.181,101,0.024,102,0.024,138,2.944,218,2.944,298,1.181,369,2.944,389,2.472,407,1.577,445,2.281,463,2.281,486,4.145,493,2.944,509,3.633,515,2.472,516,4.088,642,2.112,669,5.215,909,4.293,959,2.472,972,2.315,1233,2.944,1310,3.25,1352,4.145,1475,3.25,1706,4.088,1955,4.145,2018,4.145,2135,4.145,2221,4.899,2552,3.633,2581,5.818,2582,6.194,2583,4.924,2584,4.924,2585,6.531,2586,6.686,2587,4.924,2588,4.924,2589,4.145,2590,4.924,2591,4.924,2592,4.924,2593,6.4,2594,4.924,2595,4.924,2596,4.924,2597,5.818,2598,6.4,2599,4.924,2600,5.818,2601,4.924,2602,6.621,2603,4.924,2604,5.818,2605,4.924,2606,4.924,2607,4.924,2608,6.194,2609,3.633,2610,4.924]],["title/modules.html",[2359,2.724]],["body/modules.html",[26,0.025,101,0.025,102,0.025,676,2.702,1628,3.552,1722,4.531,2271,4.531,2358,3.552,2359,3.218,2369,3.218,2611,5.381,2612,6.126]],["title/overview.html",[2609,3.361]],["body/overview.html",[2,1.249,26,0.028,40,1.342,48,1.369,51,1.475,56,1.369,59,1.475,65,1.269,69,1.475,71,1.475,81,1.369,84,1.369,88,1.369,92,1.369,94,1.475,101,0.024,102,0.024,105,2.075,138,2.894,176,2.242,301,3.194,356,2.429,1174,2.894,1515,2.643,2067,2.894,2241,4.074,2358,4.63,2359,2.894,2360,2.894,2361,4.074,2362,3.194,2363,3.57,2364,4.074,2365,4.074,2366,4.074,2367,5.177,2368,5.177,2369,3.677,2370,5.177,2371,4.849,2609,3.57,2613,4.839]],["title/properties.html",[23,0.497,2552,2.071]],["body/properties.html",[23,0.668,26,0.026,101,0.025,102,0.025,1233,3.238,2614,5.414]],["title/miscellaneous/typealiases.html",[2615,1.853,2616,4.025]],["body/miscellaneous/typealiases.html",[22,0.354,25,0.354,26,0.028,42,1.058,101,0.025,102,0.025,257,1.664,357,2.84,358,3.108,359,2.84,360,3.108,361,3.591,362,2.609,363,3.431,364,3.108,365,2.84,366,3.431,367,3.964,368,3.108,369,3.108,370,3.591,371,3.431,372,2.408,373,3.108,374,3.431,375,2.609,2615,3.431,2617,5.198,2618,6.005]],["title/miscellaneous/variables.html",[1573,2.407,2615,1.853]],["body/miscellaneous/variables.html",[13,1.134,15,1.37,22,0.209,25,0.445,26,0.029,27,0.54,28,1.265,29,0.774,33,0.497,54,0.683,76,1.185,79,0.914,89,0.54,98,0.792,101,0.018,102,0.018,104,2.954,109,0.851,114,1.699,120,1.191,122,2.954,126,1.189,128,1.22,134,1.838,148,1.134,154,2.954,165,1.22,169,1.333,172,1.184,174,1.134,180,0.914,181,2.151,186,0.851,190,2.954,191,2.478,212,3.162,276,2.151,277,2.549,287,1.834,298,0.736,375,2.927,390,1.675,407,1.867,425,1.936,525,1.838,556,2.024,575,2.829,782,2.922,828,2.151,862,1.838,913,2.829,960,2.263,965,2.024,970,1.675,1123,2.582,1135,3.53,1262,3.162,1467,2.263,1505,4.908,1515,2.341,1573,1.834,1636,3.162,1645,2.263,1774,2.582,1780,2.582,1800,1.834,1856,2.263,1875,2.582,1876,3.608,1933,2.582,2003,2.263,2004,3.162,2033,3.162,2034,2.582,2035,2.582,2036,2.582,2070,3.608,2360,1.834,2362,2.829,2390,3.162,2444,2.582,2449,3.162,2460,2.582,2461,4.159,2463,4.159,2464,2.582,2465,3.608,2502,2.582,2506,2.582,2507,3.608,2508,3.608,2509,3.608,2510,3.608,2511,3.608,2512,3.608,2513,3.608,2514,3.608,2529,2.582,2530,3.608,2531,2.582,2532,3.608,2533,2.582,2548,2.582,2549,2.582,2550,2.582,2589,2.582,2615,2.024,2619,3.067,2620,3.067,2621,3.067,2622,3.067,2623,4.285,2624,6.104,2625,3.067,2626,3.067,2627,3.067,2628,3.067,2629,4.285,2630,3.067,2631,3.067,2632,3.067,2633,3.067,2634,3.067,2635,3.067,2636,3.067,2637,3.067,2638,4.285,2639,4.285,2640,4.285,2641,4.939,2642,4.285,2643,3.067,2644,3.067,2645,3.067,2646,3.067,2647,4.285,2648,4.285,2649,4.285,2650,4.285,2651,4.285,2652,4.285,2653,4.285,2654,4.285,2655,4.285,2656,4.285,2657,4.285,2658,4.285,2659,4.285,2660,4.285,2661,4.285,2662,4.285,2663,3.067,2664,3.067,2665,4.285,2666,3.067,2667,3.067,2668,4.285,2669,4.285,2670,3.067,2671,3.067,2672,3.067,2673,3.067,2674,3.067,2675,3.067,2676,3.067,2677,3.067,2678,4.285,2679,4.285,2680,4.285,2681,4.285,2682,4.285,2683,4.285,2684,3.067,2685,3.067,2686,3.067,2687,3.067,2688,3.067,2689,3.067,2690,3.067,2691,3.067,2692,3.067,2693,3.067,2694,3.067,2695,3.067,2696,4.285,2697,3.067,2698,3.067,2699,4.285,2700,4.285,2701,4.285,2702,3.067,2703,4.285,2704,4.285,2705,4.285,2706,4.285,2707,4.285,2708,4.285,2709,4.285,2710,4.285,2711,4.285,2712,4.285,2713,4.285,2714,4.285,2715,4.285,2716,4.285,2717,4.285,2718,4.285,2719,4.285,2720,4.285,2721,4.285,2722,4.285,2723,3.067,2724,4.285,2725,3.067,2726,3.067,2727,3.067,2728,3.067,2729,3.067,2730,3.067,2731,3.067,2732,3.067,2733,3.067,2734,3.067,2735,4.285,2736,3.067,2737,4.285,2738,3.067,2739,4.285,2740,3.067,2741,4.285,2742,3.067,2743,3.067,2744,3.067,2745,3.067,2746,3.067,2747,3.067,2748,3.067,2749,3.067,2750,4.285,2751,3.067,2752,3.067,2753,3.067,2754,3.067]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.0.0",{"_index":2614,"title":{},"body":{"properties.html":{}}}],["0.14.8",{"_index":2578,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":2462,"title":{},"body":{"coverage.html":{}}}],["0/18",{"_index":2487,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":2459,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2492,"title":{},"body":{"coverage.html":{}}}],["0/31",{"_index":2499,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2498,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2539,"title":{},"body":{"coverage.html":{}}}],["09:00",{"_index":1271,"title":{},"body":{"interfaces/Column-1.html":{}}}],["1",{"_index":175,"title":{"interfaces/Column-1.html":{},"components/HomeComponent-1.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["1.11.12",{"_index":2561,"title":{},"body":{"dependencies.html":{}}}],["1/3",{"_index":2476,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2516,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":467,"title":{},"body":{"interfaces/Column.html":{},"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["1000",{"_index":1510,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["1000).tostring(16",{"_index":1408,"title":{},"body":{"injectables/CommonService.html":{}}}],["11.4.8",{"_index":2567,"title":{},"body":{"dependencies.html":{}}}],["11/14",{"_index":2541,"title":{},"body":{"coverage.html":{}}}],["11/25",{"_index":2505,"title":{},"body":{"coverage.html":{}}}],["11/26",{"_index":2494,"title":{},"body":{"coverage.html":{}}}],["12/23",{"_index":2519,"title":{},"body":{"coverage.html":{}}}],["13/43",{"_index":2480,"title":{},"body":{"coverage.html":{}}}],["16",{"_index":1343,"title":{},"body":{"injectables/CommonService.html":{}}}],["16).tostring(16",{"_index":1412,"title":{},"body":{"injectables/CommonService.html":{}}}],["16/39",{"_index":2491,"title":{},"body":{"coverage.html":{}}}],["17.18.8",{"_index":2573,"title":{},"body":{"dependencies.html":{}}}],["17.3.7",{"_index":2583,"title":{},"body":{"index.html":{}}}],["18.0.1",{"_index":2559,"title":{},"body":{"dependencies.html":{}}}],["18.2.12",{"_index":2554,"title":{},"body":{"dependencies.html":{}}}],["18.2.13",{"_index":2556,"title":{},"body":{"dependencies.html":{}}}],["18:00",{"_index":1272,"title":{},"body":{"interfaces/Column-1.html":{}}}],["1:387300066487:web:0b11d650d75f6aedd13932",{"_index":2718,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":2576,"title":{},"body":{"dependencies.html":{}}}],["2/4",{"_index":2534,"title":{},"body":{"coverage.html":{}}}],["2/5",{"_index":2543,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":2475,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":1190,"title":{},"body":{"interfaces/Column-1.html":{}}}],["2000",{"_index":1148,"title":{},"body":{"interfaces/Column-1.html":{}}}],["205",{"_index":1189,"title":{},"body":{"interfaces/Column-1.html":{}}}],["23",{"_index":2613,"title":{},"body":{"overview.html":{}}}],["23/59",{"_index":2525,"title":{},"body":{"coverage.html":{}}}],["24",{"_index":1603,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["24/48",{"_index":2497,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":2515,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":2481,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["3.3.1",{"_index":2570,"title":{},"body":{"dependencies.html":{}}}],["3.3.4",{"_index":2565,"title":{},"body":{"dependencies.html":{}}}],["3/4",{"_index":2538,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2537,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":487,"title":{},"body":{"interfaces/Column.html":{},"coverage.html":{}}}],["30/56",{"_index":2485,"title":{},"body":{"coverage.html":{}}}],["307",{"_index":2751,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31",{"_index":2469,"title":{},"body":{"coverage.html":{}}}],["33",{"_index":2471,"title":{},"body":{"coverage.html":{}}}],["34",{"_index":2527,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":2473,"title":{},"body":{"coverage.html":{}}}],["36",{"_index":2520,"title":{},"body":{"coverage.html":{}}}],["38",{"_index":2524,"title":{},"body":{"coverage.html":{}}}],["387300066487",{"_index":2716,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4",{"_index":707,"title":{},"body":{"interfaces/Column.html":{},"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["4.18.2",{"_index":2563,"title":{},"body":{"dependencies.html":{}}}],["4/11",{"_index":2521,"title":{},"body":{"coverage.html":{}}}],["4/12",{"_index":2472,"title":{},"body":{"coverage.html":{}}}],["4/14",{"_index":2482,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":2501,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":2542,"title":{},"body":{"coverage.html":{}}}],["401",{"_index":2739,"title":{},"body":{"miscellaneous/variables.html":{}}}],["41",{"_index":2490,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":2493,"title":{},"body":{"coverage.html":{}}}],["43.769757",{"_index":1138,"title":{},"body":{"interfaces/Column-1.html":{}}}],["44",{"_index":2504,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":709,"title":{},"body":{"interfaces/Column.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["5/14",{"_index":2474,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":2547,"title":{},"body":{"coverage.html":{}}}],["5/9",{"_index":2523,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2496,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":1151,"title":{},"body":{"interfaces/Column-1.html":{}}}],["52",{"_index":2518,"title":{},"body":{"coverage.html":{}}}],["53",{"_index":2484,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":2522,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":2500,"title":{},"body":{"coverage.html":{}}}],["599px",{"_index":1904,"title":{},"body":{"components/IndexComponent.html":{}}}],["6",{"_index":1351,"title":{},"body":{"injectables/CommonService.html":{},"components/RegisterComponent.html":{}}}],["6/8",{"_index":2536,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":1227,"title":{},"body":{"interfaces/Column-1.html":{}}}],["7",{"_index":2241,"title":{},"body":{"components/RegisterComponent.html":{},"overview.html":{}}}],["7.0.0",{"_index":2572,"title":{},"body":{"dependencies.html":{}}}],["7.8.0",{"_index":2574,"title":{},"body":{"dependencies.html":{}}}],["7/22",{"_index":2470,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":2546,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":2544,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":2535,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":2540,"title":{},"body":{"coverage.html":{}}}],["79.5449069",{"_index":1137,"title":{},"body":{"interfaces/Column-1.html":{}}}],["8",{"_index":301,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{},"components/LoginComponent.html":{},"overview.html":{}}}],["8.0.0",{"_index":2568,"title":{},"body":{"dependencies.html":{}}}],["8/11",{"_index":2545,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":1226,"title":{},"body":{"interfaces/Column-1.html":{}}}],["9/26",{"_index":2528,"title":{},"body":{"coverage.html":{}}}],["_').replace",{"_index":1396,"title":{},"body":{"injectables/CommonService.html":{}}}],["_blank",{"_index":314,"title":{},"body":{"injectables/CSVService.html":{}}}],["_id",{"_index":582,"title":{},"body":{"interfaces/Column.html":{}}}],["a.value",{"_index":1657,"title":{},"body":{"components/HomeComponent.html":{}}}],["a[field",{"_index":1402,"title":{},"body":{"injectables/CommonService.html":{}}}],["a[field].tolowercase",{"_index":1400,"title":{},"body":{"injectables/CommonService.html":{}}}],["ab",{"_index":798,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["accept",{"_index":384,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["accessed",{"_index":2263,"title":{},"body":{"injectables/SEOService.html":{}}}],["accessible",{"_index":492,"title":{},"body":{"interfaces/Column.html":{}}}],["according",{"_index":247,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"injectables/CommonService.html":{}}}],["accordingly",{"_index":1110,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/HttpService.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["account",{"_index":1942,"title":{},"body":{"components/IndexComponent.html":{},"components/RegisterComponent.html":{}}}],["action",{"_index":840,"title":{},"body":{"interfaces/Column-1.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["action_required",{"_index":841,"title":{},"body":{"interfaces/Column-1.html":{}}}],["action_required'].includes(status",{"_index":1305,"title":{},"body":{"interfaces/Column-1.html":{}}}],["actions",{"_index":1260,"title":{},"body":{"interfaces/Column-1.html":{}}}],["active",{"_index":283,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{}}}],["activestatuscar(event",{"_index":615,"title":{},"body":{"interfaces/Column.html":{}}}],["actual_component",{"_index":100,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["ad",{"_index":713,"title":{},"body":{"interfaces/Column.html":{}}}],["add",{"_index":389,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"injectables/SEOService.html":{},"index.html":{}}}],["added",{"_index":1144,"title":{},"body":{"interfaces/Column-1.html":{}}}],["additional",{"_index":705,"title":{},"body":{"interfaces/Column.html":{}}}],["additional_photos",{"_index":719,"title":{},"body":{"interfaces/Column.html":{}}}],["additional_photos_date",{"_index":720,"title":{},"body":{"interfaces/Column.html":{}}}],["address",{"_index":744,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["address?.city",{"_index":1064,"title":{},"body":{"interfaces/Column-1.html":{}}}],["address?.postal_code",{"_index":1066,"title":{},"body":{"interfaces/Column-1.html":{}}}],["address?.state",{"_index":1065,"title":{},"body":{"interfaces/Column-1.html":{}}}],["address?.street",{"_index":1063,"title":{},"body":{"interfaces/Column-1.html":{}}}],["address?.unit",{"_index":1062,"title":{},"body":{"interfaces/Column-1.html":{}}}],["addresslines",{"_index":1061,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["addressuser",{"_index":767,"title":{},"body":{"interfaces/Column.html":{}}}],["adds",{"_index":2261,"title":{},"body":{"injectables/SEOService.html":{}}}],["advertisement",{"_index":762,"title":{},"body":{"interfaces/Column.html":{}}}],["again",{"_index":1173,"title":{},"body":{"interfaces/Column-1.html":{}}}],["against",{"_index":1554,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["age",{"_index":290,"title":{},"body":{"injectables/CSVService.html":{}}}],["agent",{"_index":984,"title":{},"body":{"interfaces/Column-1.html":{}}}],["aizasyantukhyzcpguwr9jzl7ajd_f57u5knmni",{"_index":2704,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aizasydevklbudp4ihj",{"_index":2707,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alberta",{"_index":797,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["alert",{"_index":1940,"title":{},"body":{"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserRoutingModule.html":{}}}],["alert'},{'name",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["alert.component",{"_index":2383,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["alert.component.html",{"_index":2105,"title":{},"body":{"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["alert.component.scss",{"_index":2106,"title":{},"body":{"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["alert.component.ts",{"_index":2104,"title":{},"body":{"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["alert.component.ts:105",{"_index":2308,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["alert.component.ts:18",{"_index":2111,"title":{},"body":{"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["alert.component.ts:20",{"_index":2306,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["alert.component.ts:34",{"_index":2318,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["alert.component.ts:35",{"_index":2115,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["alert.component.ts:51",{"_index":2315,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["alert.component.ts:52",{"_index":2112,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["alert.component.ts:67",{"_index":2320,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["alert.component.ts:68",{"_index":2120,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["alert.component.ts:81",{"_index":2326,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["alert.component.ts:84",{"_index":2117,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["alert/price",{"_index":2103,"title":{},"body":{"components/PriceAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["alert/search",{"_index":2299,"title":{},"body":{"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["alertnotification",{"_index":1416,"title":{},"body":{"injectables/EventService.html":{}}}],["alertnotification(data",{"_index":1419,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["alerts",{"_index":2113,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["alias",{"_index":933,"title":{},"body":{"interfaces/Column-1.html":{},"coverage.html":{}}}],["aliases",{"_index":2617,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alphabetically",{"_index":1386,"title":{},"body":{"injectables/CommonService.html":{}}}],["alphanum",{"_index":400,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["already",{"_index":1645,"title":{},"body":{"components/HomeComponent.html":{},"components/IndexComponent.html":{},"miscellaneous/variables.html":{}}}],["alteration",{"_index":1696,"title":{},"body":{"components/HomeComponent.html":{}}}],["angular",{"_index":516,"title":{},"body":{"interfaces/Column.html":{},"components/IndexComponent.html":{},"components/SearchAlertComponent.html":{},"index.html":{}}}],["angular's",{"_index":1468,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{}}}],["angular/animations",{"_index":2553,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2555,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/drag",{"_index":2388,"title":{},"body":{"modules/UserModule.html":{}}}],["angular/cdk/layout",{"_index":1920,"title":{},"body":{"components/IndexComponent.html":{}}}],["angular/common",{"_index":1570,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"injectables/LocalStorageService.html":{},"components/PageNotFoundComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":1799,"title":{},"body":{"injectables/HttpService.html":{},"modules/UserModule.html":{}}}],["angular/compiler",{"_index":2557,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"dependencies.html":{}}}],["angular/fire",{"_index":2558,"title":{},"body":{"dependencies.html":{}}}],["angular/fire/messaging",{"_index":1914,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["angular/forms",{"_index":779,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/google",{"_index":2394,"title":{},"body":{"modules/UserModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":781,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/SEOService.html":{},"dependencies.html":{}}}],["angular/router",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserRoutingModule.html":{},"dependencies.html":{}}}],["angular/ssr",{"_index":2560,"title":{},"body":{"dependencies.html":{}}}],["animateonscrollmodule",{"_index":1520,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["animation",{"_index":2632,"title":{},"body":{"miscellaneous/variables.html":{}}}],["any).data",{"_index":555,"title":{},"body":{"interfaces/Column.html":{},"components/HomeComponent.html":{},"components/SearchAlertComponent.html":{}}}],["any).store",{"_index":1733,"title":{},"body":{"components/HomeComponent-1.html":{}}}],["anything",{"_index":1710,"title":{},"body":{"components/HomeComponent.html":{}}}],["api",{"_index":450,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["apikey",{"_index":2706,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["app.component.html",{"_index":19,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":21,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2465,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appended",{"_index":1756,"title":{},"body":{"injectables/HttpService.html":{}}}],["appending",{"_index":1751,"title":{},"body":{"injectables/HttpService.html":{}}}],["appid",{"_index":2717,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicable",{"_index":1104,"title":{},"body":{"interfaces/Column-1.html":{}}}],["application",{"_index":1310,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/LoaderService.html":{},"modules/UserRoutingModule.html":{},"index.html":{}}}],["application'},{'name",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["application.component",{"_index":2443,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["application.component.ts",{"_index":2503,"title":{},"body":{"coverage.html":{}}}],["application/finance",{"_index":2442,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["application/finance.data.ts",{"_index":2506,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["application/json",{"_index":1818,"title":{},"body":{"injectables/HttpService.html":{}}}],["applicationconfig",{"_index":2629,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appropriate",{"_index":1326,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["appropriately",{"_index":267,"title":{},"body":{"injectables/CSVService.html":{}}}],["argumanet",{"_index":295,"title":{},"body":{"injectables/CSVService.html":{}}}],["arralertsubscribe",{"_index":2300,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["arralertsubscribe.length",{"_index":2347,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["array",{"_index":203,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"interfaces/LabelValueData.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["array.isarray",{"_index":653,"title":{},"body":{"interfaces/Column.html":{}}}],["array.isarray(data",{"_index":344,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{}}}],["array.isarray(error.error.message",{"_index":1834,"title":{},"body":{"injectables/HttpService.html":{}}}],["arrays",{"_index":273,"title":{},"body":{"injectables/CSVService.html":{}}}],["arrbodytype",{"_index":1610,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrcarlist",{"_index":448,"title":{},"body":{"interfaces/Column.html":{}}}],["arrcarlistcopy",{"_index":473,"title":{},"body":{"interfaces/Column.html":{}}}],["arrcity",{"_index":829,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["arrcustomservice",{"_index":898,"title":{},"body":{"interfaces/Column-1.html":{}}}],["arrfavouritevehicle",{"_index":1451,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["arrfavouritevehicle.length",{"_index":1495,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["arrfilterlist",{"_index":451,"title":{},"body":{"interfaces/Column.html":{}}}],["arrfilters",{"_index":2301,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["arrheader",{"_index":289,"title":{},"body":{"injectables/CSVService.html":{}}}],["arrlistingstatus",{"_index":474,"title":{},"body":{"interfaces/Column.html":{}}}],["arrmake",{"_index":1611,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrmodel",{"_index":1612,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrmodelcopy",{"_index":1613,"title":{},"body":{"components/HomeComponent.html":{}}}],["arrotherimages",{"_index":724,"title":{},"body":{"interfaces/Column.html":{}}}],["arrotherimages.map((image",{"_index":737,"title":{},"body":{"interfaces/Column.html":{}}}],["arrpricealert",{"_index":2107,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["arrpricealert.length",{"_index":2131,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["arrremoteservice",{"_index":793,"title":{},"body":{"interfaces/Column-1.html":{}}}],["arrstate",{"_index":796,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["arrstorestatus",{"_index":832,"title":{},"body":{"interfaces/Column-1.html":{}}}],["arrtablecontenttitle",{"_index":458,"title":{},"body":{"interfaces/Column.html":{}}}],["arrtemp",{"_index":721,"title":{},"body":{"interfaces/Column.html":{}}}],["arrtemp.push",{"_index":726,"title":{},"body":{"interfaces/Column.html":{}}}],["arrtempsequence",{"_index":564,"title":{},"body":{"interfaces/Column.html":{}}}],["arrtempsequence.map((key",{"_index":571,"title":{},"body":{"interfaces/Column.html":{}}}],["arruserstores",{"_index":792,"title":{},"body":{"interfaces/Column-1.html":{}}}],["artifacts",{"_index":2594,"title":{},"body":{"index.html":{}}}],["asking_price",{"_index":569,"title":{},"body":{"interfaces/Column.html":{}}}],["assign",{"_index":843,"title":{},"body":{"interfaces/Column-1.html":{}}}],["assigns",{"_index":1277,"title":{},"body":{"interfaces/Column-1.html":{}}}],["associated",{"_index":1323,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{}}}],["association",{"_index":1153,"title":{},"body":{"interfaces/Column-1.html":{}}}],["assumed",{"_index":241,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["async",{"_index":109,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["async/await",{"_index":1773,"title":{},"body":{"injectables/HttpService.html":{}}}],["asynchronous",{"_index":605,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["asynchronously",{"_index":518,"title":{},"body":{"interfaces/Column.html":{}}}],["attempts",{"_index":2327,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["auth",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{},"components/IndexComponent.html":{}}}],["authdomain",{"_index":2709,"title":{},"body":{"miscellaneous/variables.html":{}}}],["authentication",{"_index":140,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["authentication/change",{"_index":1549,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["authentication/forget",{"_index":1551,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["authguard",{"_index":2530,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice",{"_index":104,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthService.html":{},"components/IndexComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["authservice.onlogout",{"_index":2744,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auto",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{}}}],["auto_delete",{"_index":501,"title":{},"body":{"interfaces/Column.html":{}}}],["autocompletemodule",{"_index":2416,"title":{},"body":{"modules/UserModule.html":{}}}],["automatically",{"_index":515,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{},"index.html":{}}}],["autotrader",{"_index":684,"title":{},"body":{"interfaces/Column.html":{}}}],["autotrader's",{"_index":685,"title":{},"body":{"interfaces/Column.html":{}}}],["autotrader.csv",{"_index":710,"title":{},"body":{"interfaces/Column.html":{}}}],["autotronic",{"_index":2135,"title":{},"body":{"components/PriceAlertComponent.html":{},"index.html":{}}}],["availability",{"_index":1901,"title":{},"body":{"components/IndexComponent.html":{}}}],["available",{"_index":1628,"title":{},"body":{"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"modules.html":{}}}],["avatarmodule",{"_index":2428,"title":{},"body":{"modules/UserModule.html":{}}}],["await",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":1118,"title":{},"body":{"interfaces/Column-1.html":{}}}],["az",{"_index":2652,"title":{},"body":{"miscellaneous/variables.html":{}}}],["b",{"_index":1399,"title":{},"body":{"injectables/CommonService.html":{},"components/HomeComponent.html":{}}}],["b)(\\w)/g",{"_index":1392,"title":{},"body":{"injectables/CommonService.html":{}}}],["b.value",{"_index":1658,"title":{},"body":{"components/HomeComponent.html":{}}}],["b[field",{"_index":1403,"title":{},"body":{"injectables/CommonService.html":{}}}],["b[field].tolowercase",{"_index":1401,"title":{},"body":{"injectables/CommonService.html":{}}}],["back",{"_index":1507,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PageNotFoundComponent.html":{},"components/SearchAlertComponent.html":{}}}],["backend",{"_index":1828,"title":{},"body":{"injectables/HttpService.html":{}}}],["backend_url",{"_index":2701,"title":{},"body":{"miscellaneous/variables.html":{}}}],["badgemodule",{"_index":2430,"title":{},"body":{"modules/UserModule.html":{}}}],["bag",{"_index":1932,"title":{},"body":{"components/IndexComponent.html":{}}}],["base",{"_index":1752,"title":{},"body":{"injectables/HttpService.html":{},"injectables/SEOService.html":{}}}],["base64",{"_index":849,"title":{},"body":{"interfaces/Column-1.html":{}}}],["based",{"_index":221,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["bc",{"_index":801,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["before",{"_index":746,"title":{},"body":{"interfaces/Column.html":{}}}],["behavior",{"_index":2329,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["being",{"_index":1328,"title":{},"body":{"interfaces/Column-1.html":{}}}],["believable",{"_index":1704,"title":{},"body":{"components/HomeComponent.html":{}}}],["below",{"_index":1601,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["best",{"_index":1713,"title":{},"body":{"components/HomeComponent.html":{}}}],["beyfku1lfh_rnrtvjxdw2u3uwmn7wrlft8c5sqk56cbjisd4n2wu6zg",{"_index":2721,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bill",{"_index":1934,"title":{},"body":{"components/IndexComponent.html":{}}}],["blob",{"_index":297,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{}}}],["blob(['\\ufeff",{"_index":299,"title":{},"body":{"injectables/CSVService.html":{}}}],["blue",{"_index":846,"title":{},"body":{"interfaces/Column-1.html":{}}}],["bluegray",{"_index":835,"title":{},"body":{"interfaces/Column-1.html":{}}}],["body",{"_index":1632,"title":{},"body":{"components/HomeComponent.html":{},"injectables/HttpService.html":{}}}],["body_type",{"_index":1685,"title":{},"body":{"components/HomeComponent.html":{}}}],["body_type').data",{"_index":1662,"title":{},"body":{"components/HomeComponent.html":{}}}],["body_type.label",{"_index":1687,"title":{},"body":{"components/HomeComponent.html":{}}}],["body_type.value",{"_index":1686,"title":{},"body":{"components/HomeComponent.html":{}}}],["boolean",{"_index":135,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/EventService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/RegisterComponent.html":{}}}],["booleans",{"_index":282,"title":{},"body":{"injectables/CSVService.html":{}}}],["bootstrap",{"_index":2362,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["bootstrapapplication(appcomponent",{"_index":2644,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":1879,"title":{},"body":{"components/IndexComponent.html":{},"components/ProfileComponent.html":{}}}],["bound",{"_index":1466,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{}}}],["brand",{"_index":1682,"title":{},"body":{"components/HomeComponent.html":{}}}],["breakpointobserver",{"_index":1852,"title":{},"body":{"components/IndexComponent.html":{}}}],["brief",{"_index":2276,"title":{},"body":{"injectables/SEOService.html":{}}}],["british",{"_index":799,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["browse",{"_index":2612,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":676,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/SEOService.html":{},"dependencies.html":{},"modules.html":{}}}],["browser's",{"_index":2098,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["browser_storage",{"_index":2033,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["brunswick",{"_index":802,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["btngotoback",{"_index":2093,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["build",{"_index":2593,"title":{},"body":{"index.html":{}}}],["button",{"_index":362,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"components/PageNotFoundComponent.html":{},"miscellaneous/typealiases.html":{}}}],["buttonmodule",{"_index":1527,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["buy",{"_index":905,"title":{},"body":{"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{}}}],["ca",{"_index":1060,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["cache",{"_index":1037,"title":{},"body":{"interfaces/Column-1.html":{}}}],["cached",{"_index":2019,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["calendarmodule",{"_index":2406,"title":{},"body":{"modules/UserModule.html":{}}}],["call",{"_index":1067,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/ProfileComponent.html":{}}}],["called",{"_index":514,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["calling",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["calls",{"_index":1623,"title":{},"body":{"components/HomeComponent.html":{}}}],["canactivate",{"_index":2453,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["canactivatefn",{"_index":2638,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canada",{"_index":1270,"title":{},"body":{"interfaces/Column-1.html":{}}}],["canadian",{"_index":2672,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canadian_citizen",{"_index":2674,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cancels",{"_index":1208,"title":{},"body":{"interfaces/Column-1.html":{}}}],["canonical",{"_index":2259,"title":{},"body":{"injectables/SEOService.html":{}}}],["canonicaltag",{"_index":2291,"title":{},"body":{"injectables/SEOService.html":{}}}],["canvas",{"_index":1234,"title":{},"body":{"interfaces/Column-1.html":{}}}],["capabilities",{"_index":2606,"title":{},"body":{"index.html":{}}}],["capitalizing",{"_index":1357,"title":{},"body":{"injectables/CommonService.html":{}}}],["car",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["car's",{"_index":449,"title":{},"body":{"interfaces/Column.html":{}}}],["car.condition",{"_index":732,"title":{},"body":{"interfaces/Column.html":{}}}],["car.find((image",{"_index":634,"title":{},"body":{"interfaces/Column.html":{}}}],["car.images.filter((image",{"_index":725,"title":{},"body":{"interfaces/Column.html":{}}}],["car.make",{"_index":728,"title":{},"body":{"interfaces/Column.html":{}}}],["car.model",{"_index":729,"title":{},"body":{"interfaces/Column.html":{}}}],["car.stock_number",{"_index":730,"title":{},"body":{"interfaces/Column.html":{}}}],["car.vin_number",{"_index":731,"title":{},"body":{"interfaces/Column.html":{}}}],["car.year",{"_index":727,"title":{},"body":{"interfaces/Column.html":{}}}],["car[key",{"_index":602,"title":{},"body":{"interfaces/Column.html":{}}}],["car_tag",{"_index":479,"title":{},"body":{"interfaces/Column.html":{}}}],["carform",{"_index":355,"title":{"interfaces/CarForm.html":{}},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"coverage.html":{}}}],["carlistcomponent",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["carmanagecomponent",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["cars",{"_index":529,"title":{},"body":{"interfaces/Column.html":{},"components/HomeComponent.html":{}}}],["cars.csv",{"_index":671,"title":{},"body":{"interfaces/Column.html":{}}}],["case",{"_index":465,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{}}}],["cases",{"_index":1327,"title":{},"body":{"interfaces/Column-1.html":{},"components/SearchAlertComponent.html":{}}}],["catch",{"_index":1582,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["catch((error",{"_index":1149,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/ProfileComponent.html":{}}}],["catcherror",{"_index":1802,"title":{},"body":{"injectables/HttpService.html":{}}}],["catcherror(this.handleerror",{"_index":1810,"title":{},"body":{"injectables/HttpService.html":{}}}],["category",{"_index":459,"title":{},"body":{"interfaces/Column.html":{}}}],["category'].includes(col.field",{"_index":598,"title":{},"body":{"interfaces/Column.html":{}}}],["caution",{"_index":763,"title":{},"body":{"interfaces/Column.html":{}}}],["cd645",{"_index":2712,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cd645.appspot.com",{"_index":2714,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cd645.firebaseapp.com",{"_index":2710,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cdk",{"_index":1919,"title":{},"body":{"components/IndexComponent.html":{},"modules/UserModule.html":{}}}],["cdkdragdrop",{"_index":2370,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["change",{"_index":463,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/INotification.html":{},"components/ProfileComponent.html":{},"index.html":{}}}],["changed",{"_index":882,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["changefield",{"_index":414,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["changenavuserloginoroption",{"_index":1417,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["changes",{"_index":945,"title":{},"body":{"interfaces/Column-1.html":{},"components/RegisterComponent.html":{}}}],["character",{"_index":248,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["characters",{"_index":1347,"title":{},"body":{"injectables/CommonService.html":{},"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{}}}],["check",{"_index":407,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkaddressgroupisvalid",{"_index":1049,"title":{},"body":{"interfaces/Column-1.html":{}}}],["checkbox",{"_index":365,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/typealiases.html":{}}}],["checkboxmodule",{"_index":2414,"title":{},"body":{"modules/UserModule.html":{}}}],["checked",{"_index":655,"title":{},"body":{"interfaces/Column.html":{}}}],["checkfieldisarray(data",{"_index":656,"title":{},"body":{"interfaces/Column.html":{}}}],["checkfieldisfromfilter(field",{"_index":649,"title":{},"body":{"interfaces/Column.html":{}}}],["checkfiltertitlefromfilterlist(filter",{"_index":662,"title":{},"body":{"interfaces/Column.html":{}}}],["checking",{"_index":648,"title":{},"body":{"interfaces/Column.html":{}}}],["checks",{"_index":119,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{}}}],["checktitleshouldtochange(header",{"_index":644,"title":{},"body":{"interfaces/Column.html":{}}}],["children",{"_index":2452,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["choice",{"_index":369,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"index.html":{},"miscellaneous/typealiases.html":{}}}],["cities.city_ascii",{"_index":964,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["citizen",{"_index":2673,"title":{},"body":{"miscellaneous/variables.html":{}}}],["city",{"_index":830,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["class",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["clear",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{}}}],["cleared",{"_index":1893,"title":{},"body":{"components/IndexComponent.html":{}}}],["clearing",{"_index":142,"title":{},"body":{"injectables/AuthService.html":{}}}],["clears",{"_index":1261,"title":{},"body":{"interfaces/Column-1.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["cli",{"_index":2582,"title":{},"body":{"index.html":{}}}],["click",{"_index":1479,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["clicked",{"_index":2118,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["clicks",{"_index":1474,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/SearchAlertComponent.html":{}}}],["client",{"_index":1823,"title":{},"body":{"injectables/HttpService.html":{},"components/RegisterComponent.html":{}}}],["close",{"_index":917,"title":{},"body":{"interfaces/Column-1.html":{}}}],["closecropimage",{"_index":1211,"title":{},"body":{"interfaces/Column-1.html":{}}}],["closes",{"_index":1092,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["closing",{"_index":1545,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["cloud",{"_index":1857,"title":{},"body":{"components/IndexComponent.html":{}}}],["clues",{"_index":1830,"title":{},"body":{"injectables/HttpService.html":{}}}],["cluster_usermodule",{"_index":2364,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_declarations",{"_index":2366,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":2365,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["co",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{}}}],["code",{"_index":959,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"index.html":{}}}],["color",{"_index":834,"title":{},"body":{"interfaces/Column-1.html":{}}}],["cols",{"_index":446,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["colscsvselected",{"_index":472,"title":{},"body":{"interfaces/Column.html":{}}}],["columbia",{"_index":800,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["column",{"_index":420,"title":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"coverage.html":{}}}],["columns",{"_index":574,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["comma",{"_index":211,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["command",{"_index":2604,"title":{},"body":{"index.html":{}}}],["commas",{"_index":280,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["common",{"_index":2659,"title":{},"body":{"miscellaneous/variables.html":{}}}],["common_law",{"_index":2661,"title":{},"body":{"miscellaneous/variables.html":{}}}],["commonelement",{"_index":376,"title":{"interfaces/CommonElement.html":{}},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"coverage.html":{}}}],["commonmodule",{"_index":1519,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoaderComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["commonservice",{"_index":430,"title":{"injectables/CommonService.html":{}},"body":{"interfaces/Column.html":{},"injectables/CommonService.html":{},"coverage.html":{}}}],["company",{"_index":888,"title":{},"body":{"interfaces/Column-1.html":{}}}],["compare",{"_index":2198,"title":{},"body":{"components/ProfileComponent.html":{}}}],["compare_password",{"_index":2166,"title":{},"body":{"components/ProfileComponent.html":{}}}],["comparison",{"_index":1384,"title":{},"body":{"injectables/CommonService.html":{}}}],["complete",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["completely",{"_index":489,"title":{},"body":{"interfaces/Column.html":{}}}],["completing",{"_index":1547,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"index.html":{}}}],["component's",{"_index":646,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/PriceAlertComponent.html":{}}}],["component_template",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["composed",{"_index":1345,"title":{},"body":{"injectables/CommonService.html":{}}}],["compressed",{"_index":1232,"title":{},"body":{"interfaces/Column-1.html":{}}}],["compresses",{"_index":1220,"title":{},"body":{"interfaces/Column-1.html":{}}}],["compressimage(src",{"_index":1242,"title":{},"body":{"interfaces/Column-1.html":{}}}],["compression",{"_index":1215,"title":{},"body":{"interfaces/Column-1.html":{}}}],["concierge",{"_index":907,"title":{},"body":{"interfaces/Column-1.html":{}}}],["concise",{"_index":2268,"title":{},"body":{"injectables/SEOService.html":{}}}],["condition",{"_index":460,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["conditions",{"_index":1897,"title":{},"body":{"components/IndexComponent.html":{}}}],["config",{"_index":2461,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["confirm",{"_index":2200,"title":{},"body":{"components/ProfileComponent.html":{}}}],["confirmation",{"_index":750,"title":{},"body":{"interfaces/Column.html":{}}}],["confirmationservice",{"_index":434,"title":{},"body":{"interfaces/Column.html":{},"modules/UserModule.html":{}}}],["confirmdialogmodule",{"_index":2397,"title":{},"body":{"modules/UserModule.html":{}}}],["connect",{"_index":899,"title":{},"body":{"interfaces/Column-1.html":{}}}],["considered",{"_index":631,"title":{},"body":{"interfaces/Column.html":{}}}],["consists",{"_index":1368,"title":{},"body":{"injectables/CommonService.html":{}}}],["console.error",{"_index":1833,"title":{},"body":{"injectables/HttpService.html":{}}}],["console.error('an",{"_index":1826,"title":{},"body":{"injectables/HttpService.html":{}}}],["console.error(error",{"_index":1968,"title":{},"body":{"components/IndexComponent.html":{}}}],["console.log('geolocation",{"_index":1969,"title":{},"body":{"components/IndexComponent.html":{}}}],["console.log(csvdata",{"_index":296,"title":{},"body":{"injectables/CSVService.html":{}}}],["const",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"modules/UserRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["constraints",{"_index":1177,"title":{},"body":{"interfaces/Column-1.html":{}}}],["constructor",{"_index":111,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["constructor(csvservice",{"_index":2148,"title":{},"body":{"components/ProfileComponent.html":{}}}],["constructor(httpservice",{"_index":112,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["constructor(loader",{"_index":1980,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(location",{"_index":2094,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["constructor(metaservice",{"_index":2252,"title":{},"body":{"injectables/SEOService.html":{}}}],["constructor(private",{"_index":2100,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["constructor(public",{"_index":1987,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(router",{"_index":1455,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["constructor(storage",{"_index":2009,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["consultation",{"_index":901,"title":{},"body":{"interfaces/Column-1.html":{}}}],["contactless",{"_index":903,"title":{},"body":{"interfaces/Column-1.html":{}}}],["contain",{"_index":1181,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{},"components/SearchAlertComponent.html":{}}}],["containing",{"_index":532,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/SearchAlertComponent.html":{}}}],["content",{"_index":464,"title":{},"body":{"interfaces/Column.html":{},"injectables/HttpService.html":{},"injectables/SEOService.html":{}}}],["contract",{"_index":2684,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":1998,"title":{},"body":{"injectables/LoaderService.html":{}}}],["controls",{"_index":1555,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["conversion",{"_index":643,"title":{},"body":{"interfaces/Column.html":{}}}],["convert",{"_index":1132,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/HttpService.html":{}}}],["converted",{"_index":226,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{}}}],["converting",{"_index":1105,"title":{},"body":{"interfaces/Column-1.html":{}}}],["converts",{"_index":206,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{}}}],["converttocsv",{"_index":196,"title":{},"body":{"injectables/CSVService.html":{}}}],["converttocsv(objdata",{"_index":201,"title":{},"body":{"injectables/CSVService.html":{}}}],["coordinates",{"_index":926,"title":{},"body":{"interfaces/Column-1.html":{}}}],["copy",{"_index":560,"title":{},"body":{"interfaces/Column.html":{}}}],["correct",{"_index":1069,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["corresponding",{"_index":658,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["count",{"_index":1731,"title":{},"body":{"components/HomeComponent-1.html":{}}}],["country",{"_index":291,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["coverage",{"_index":2456,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":242,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{},"components/RegisterComponent.html":{}}}],["created",{"_index":1469,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/RegisterComponent.html":{}}}],["createdat",{"_index":1440,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["createdby",{"_index":597,"title":{},"body":{"interfaces/Column.html":{}}}],["creates",{"_index":1216,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/IndexComponent.html":{}}}],["creation",{"_index":1101,"title":{},"body":{"interfaces/Column-1.html":{}}}],["credentials",{"_index":1753,"title":{},"body":{"injectables/HttpService.html":{}}}],["credit",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{}}}],["crop",{"_index":784,"title":{},"body":{"interfaces/Column-1.html":{},"modules/UserModule.html":{}}}],["cropped",{"_index":1156,"title":{},"body":{"interfaces/Column-1.html":{}}}],["cropper",{"_index":789,"title":{},"body":{"interfaces/Column-1.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["cropperlogo",{"_index":894,"title":{},"body":{"interfaces/Column-1.html":{}}}],["cropping",{"_index":1178,"title":{},"body":{"interfaces/Column-1.html":{}}}],["csv",{"_index":208,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{},"components/ProfileComponent.html":{}}}],["csvdata",{"_index":293,"title":{},"body":{"injectables/CSVService.html":{}}}],["csvservice",{"_index":194,"title":{"injectables/CSVService.html":{}},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ProfileComponent.html":{},"coverage.html":{}}}],["csvtojson",{"_index":197,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["csvtojson(data",{"_index":236,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["ctx",{"_index":1252,"title":{},"body":{"interfaces/Column-1.html":{}}}],["ctx!.canvas.todataurl",{"_index":1255,"title":{},"body":{"interfaces/Column-1.html":{}}}],["ctx!.drawimage(img",{"_index":1254,"title":{},"body":{"interfaces/Column-1.html":{}}}],["currency",{"_index":374,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{}}}],["currency:'usd':'symbol':'2.0",{"_index":1500,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{}}}],["currency:\\'usd\\':\\'symbol\\':\\'2.0",{"_index":1511,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{}}}],["current",{"_index":125,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["currently",{"_index":121,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventService.html":{},"interfaces/INotification.html":{},"injectables/LoaderService.html":{}}}],["currentrecordtoview",{"_index":860,"title":{},"body":{"interfaces/Column-1.html":{}}}],["currentuser",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{},"components/IndexComponent.html":{}}}],["custom",{"_index":427,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["custom_services",{"_index":935,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data",{"_index":225,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["data).pipe",{"_index":1816,"title":{},"body":{"injectables/HttpService.html":{}}}],["data).then((response",{"_index":2185,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data).then(async",{"_index":1140,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data._id",{"_index":1293,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data.custom_service",{"_index":1281,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data.custom_services?.join",{"_index":1282,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data.email",{"_index":1584,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["data.indexof('\\n')).split(delimiter",{"_index":325,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["data.join",{"_index":353,"title":{},"body":{"injectables/CSVService.html":{}}}],["data.label",{"_index":665,"title":{},"body":{"interfaces/Column.html":{},"components/SearchAlertComponent.html":{}}}],["data.location.coordinates",{"_index":1136,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data.logo",{"_index":1117,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data.make",{"_index":1676,"title":{},"body":{"components/HomeComponent.html":{}}}],["data.map((element",{"_index":1404,"title":{},"body":{"injectables/CommonService.html":{}}}],["data.map((obj",{"_index":347,"title":{},"body":{"injectables/CSVService.html":{}}}],["data.model",{"_index":1677,"title":{},"body":{"components/HomeComponent.html":{}}}],["data.name",{"_index":1288,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data.need_response",{"_index":1290,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data.phone",{"_index":1133,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["data.postal_code",{"_index":1678,"title":{},"body":{"components/HomeComponent.html":{}}}],["data.slice(0",{"_index":324,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["data.sort((a",{"_index":1398,"title":{},"body":{"injectables/CommonService.html":{}}}],["data.status",{"_index":1289,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data.timeline",{"_index":1292,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data.type",{"_index":1041,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data.user",{"_index":1169,"title":{},"body":{"interfaces/Column-1.html":{}}}],["data.value",{"_index":664,"title":{},"body":{"interfaces/Column.html":{},"components/SearchAlertComponent.html":{}}}],["data?.city",{"_index":2189,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data?.postal_code",{"_index":2191,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data?.state",{"_index":2190,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data?.street",{"_index":2188,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data?.unit",{"_index":2187,"title":{},"body":{"components/ProfileComponent.html":{}}}],["data[0",{"_index":345,"title":{},"body":{"injectables/CSVService.html":{}}}],["data_driving_class",{"_index":2507,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data_marital",{"_index":2508,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data_relationship",{"_index":2509,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data_residence",{"_index":2510,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data_residency_status",{"_index":2511,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data_self_employed",{"_index":2512,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data_subject",{"_index":2513,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["data_work_type",{"_index":2514,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":141,"title":{},"body":{"injectables/AuthService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["dataimage",{"_index":1162,"title":{},"body":{"interfaces/Column-1.html":{}}}],["dataimage.type",{"_index":1165,"title":{},"body":{"interfaces/Column-1.html":{}}}],["datatype",{"_index":377,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["date",{"_index":372,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/EventService.html":{},"interfaces/INotification.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{}}}],["date().gettime",{"_index":1407,"title":{},"body":{"injectables/CommonService.html":{}}}],["dateformat",{"_index":393,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["dates",{"_index":697,"title":{},"body":{"interfaces/Column.html":{}}}],["day",{"_index":1266,"title":{},"body":{"interfaces/Column-1.html":{}}}],["dayjs",{"_index":426,"title":{},"body":{"interfaces/Column.html":{},"dependencies.html":{}}}],["dayjs(car.images[minposition].date).format('mm/dd/yyyy",{"_index":736,"title":{},"body":{"interfaces/Column.html":{}}}],["dayjs(car.updatedat).format('mm/dd/yyyy",{"_index":733,"title":{},"body":{"interfaces/Column.html":{}}}],["dayjs(image.date).format('mm/dd/yyyy",{"_index":739,"title":{},"body":{"interfaces/Column.html":{}}}],["days",{"_index":488,"title":{},"body":{"interfaces/Column.html":{}}}],["db",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"components/IndexComponent.html":{}}}],["deactive",{"_index":617,"title":{},"body":{"interfaces/Column.html":{}}}],["deal",{"_index":1504,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["dealer",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["dealerdetailcomponent",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["dealers",{"_index":1724,"title":{},"body":{"components/HomeComponent.html":{}}}],["dealertypeguard",{"_index":2449,"title":{},"body":{"modules/UserRoutingModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":2361,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["decorators",{"_index":2029,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["default",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["defaults",{"_index":250,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["defer",{"_index":1494,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["defined",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["defines",{"_index":698,"title":{},"body":{"interfaces/Column.html":{},"injectables/CommonService.html":{}}}],["delaer",{"_index":1330,"title":{},"body":{"interfaces/Column-1.html":{}}}],["delete",{"_index":147,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CarForm.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["delete(url",{"_index":1749,"title":{},"body":{"injectables/HttpService.html":{}}}],["deleted",{"_index":1870,"title":{},"body":{"components/IndexComponent.html":{}}}],["deletefcmtoken",{"_index":1848,"title":{},"body":{"components/IndexComponent.html":{}}}],["deletes",{"_index":1855,"title":{},"body":{"components/IndexComponent.html":{}}}],["deletetoken",{"_index":1913,"title":{},"body":{"components/IndexComponent.html":{}}}],["deletetoken(this.messaging",{"_index":1971,"title":{},"body":{"components/IndexComponent.html":{}}}],["deleting",{"_index":139,"title":{},"body":{"injectables/AuthService.html":{},"components/IndexComponent.html":{}}}],["deletion",{"_index":1869,"title":{},"body":{"components/IndexComponent.html":{}}}],["delimiter",{"_index":237,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["delivery",{"_index":904,"title":{},"body":{"interfaces/Column-1.html":{}}}],["dependant",{"_index":406,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["dependant_field",{"_index":408,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["dependantdata",{"_index":1665,"title":{},"body":{"components/HomeComponent.html":{}}}],["dependantdata.sort((a",{"_index":1670,"title":{},"body":{"components/HomeComponent.html":{}}}],["dependencies",{"_index":2360,"title":{"dependencies.html":{}},"body":{"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["description",{"_index":223,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"injectables/LoaderService.html":{},"components/PriceAlertComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["descriptive",{"_index":2275,"title":{},"body":{"injectables/SEOService.html":{}}}],["desired",{"_index":1230,"title":{},"body":{"interfaces/Column-1.html":{}}}],["destroyed",{"_index":1432,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["detail",{"_index":98,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["detail'].includes(router.routerstate.snapshot.url",{"_index":2748,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detail'},{'name",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["detail.component.ts",{"_index":2468,"title":{},"body":{"coverage.html":{}}}],["detail/dealer",{"_index":2467,"title":{},"body":{"coverage.html":{}}}],["detail/vehicle",{"_index":2489,"title":{},"body":{"coverage.html":{}}}],["details",{"_index":690,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/HttpService.html":{}}}],["determine",{"_index":654,"title":{},"body":{"interfaces/Column.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/SearchAlertComponent.html":{}}}],["determines",{"_index":638,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/LocalStorageService.html":{}}}],["dev",{"_index":2588,"title":{},"body":{"index.html":{}}}],["development",{"_index":2584,"title":{},"body":{"index.html":{}}}],["device",{"_index":1860,"title":{},"body":{"components/IndexComponent.html":{}}}],["devices",{"_index":1886,"title":{},"body":{"components/IndexComponent.html":{}}}],["dialog",{"_index":751,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["dialogmodule",{"_index":1528,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["dialogs",{"_index":1312,"title":{},"body":{"interfaces/Column-1.html":{}}}],["different",{"_index":265,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{}}}],["differently",{"_index":2311,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["digits",{"_index":1353,"title":{},"body":{"injectables/CommonService.html":{}}}],["dimensions",{"_index":1231,"title":{},"body":{"interfaces/Column-1.html":{}}}],["directive",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["directives",{"_index":99,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2592,"title":{},"body":{"index.html":{}}}],["directly",{"_index":2114,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["directory",{"_index":2596,"title":{},"body":{"index.html":{}}}],["disable",{"_index":415,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["disables",{"_index":1633,"title":{},"body":{"components/HomeComponent.html":{}}}],["disbale",{"_index":1663,"title":{},"body":{"components/HomeComponent.html":{}}}],["display",{"_index":528,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"injectables/LoaderService.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["displayed",{"_index":1279,"title":{},"body":{"interfaces/Column-1.html":{},"components/LoginComponent.html":{}}}],["displaying",{"_index":2160,"title":{},"body":{"components/ProfileComponent.html":{}}}],["displays",{"_index":607,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["dist",{"_index":2595,"title":{},"body":{"index.html":{}}}],["distance",{"_index":2310,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["dividermodule",{"_index":1524,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["divorced",{"_index":2657,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dlr",{"_index":2028,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["document.body.appendchild(dwldlink",{"_index":319,"title":{},"body":{"injectables/CSVService.html":{}}}],["document.body.removechild(dwldlink",{"_index":321,"title":{},"body":{"injectables/CSVService.html":{}}}],["document.createelement(\"a",{"_index":303,"title":{},"body":{"injectables/CSVService.html":{}}}],["document.createelement('canvas",{"_index":1249,"title":{},"body":{"interfaces/Column-1.html":{}}}],["documentation",{"_index":2457,"title":{},"body":{"coverage.html":{}}}],["doesn't",{"_index":673,"title":{},"body":{"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/LocalStorageService.html":{},"components/PriceAlertComponent.html":{},"injectables/SEOService.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["domsanitizer",{"_index":780,"title":{},"body":{"interfaces/Column-1.html":{}}}],["don't",{"_index":1701,"title":{},"body":{"components/HomeComponent.html":{},"components/PriceAlertComponent.html":{}}}],["don\\'t",{"_index":1725,"title":{},"body":{"components/HomeComponent.html":{},"components/PriceAlertComponent.html":{}}}],["done",{"_index":1143,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["don’t",{"_index":1501,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/SearchAlertComponent.html":{}}}],["down",{"_index":2754,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":670,"title":{},"body":{"interfaces/Column.html":{}}}],["downloadautotradercsv",{"_index":711,"title":{},"body":{"interfaces/Column.html":{}}}],["downloadcsv",{"_index":677,"title":{},"body":{"interfaces/Column.html":{}}}],["downloadfile",{"_index":198,"title":{},"body":{"injectables/CSVService.html":{}}}],["downloadfile(data",{"_index":252,"title":{},"body":{"injectables/CSVService.html":{}}}],["downloading",{"_index":505,"title":{},"body":{"interfaces/Column.html":{}}}],["downloads",{"_index":666,"title":{},"body":{"interfaces/Column.html":{}}}],["dr",{"_index":2682,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drag",{"_index":2385,"title":{},"body":{"modules/UserModule.html":{}}}],["dragdropmodule",{"_index":2387,"title":{},"body":{"modules/UserModule.html":{}}}],["draggable",{"_index":886,"title":{},"body":{"interfaces/Column-1.html":{}}}],["drop",{"_index":2386,"title":{},"body":{"modules/UserModule.html":{}}}],["dropdown",{"_index":360,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"components/HomeComponent.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{}}}],["dropdownmodule",{"_index":1607,"title":{},"body":{"components/HomeComponent.html":{},"modules/UserModule.html":{}}}],["drops",{"_index":2138,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["dummy",{"_index":1715,"title":{},"body":{"components/HomeComponent.html":{}}}],["duplicate",{"_index":1078,"title":{},"body":{"interfaces/Column-1.html":{}}}],["duplication",{"_index":588,"title":{},"body":{"interfaces/Column.html":{}}}],["during",{"_index":1314,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/RegisterComponent.html":{}}}],["dwldlink",{"_index":302,"title":{},"body":{"injectables/CSVService.html":{}}}],["dwldlink.click",{"_index":320,"title":{},"body":{"injectables/CSVService.html":{}}}],["dwldlink.setattribute(\"download",{"_index":316,"title":{},"body":{"injectables/CSVService.html":{}}}],["dwldlink.setattribute(\"href",{"_index":315,"title":{},"body":{"injectables/CSVService.html":{}}}],["dwldlink.setattribute(\"target",{"_index":313,"title":{},"body":{"injectables/CSVService.html":{}}}],["dwldlink.style.visibility",{"_index":317,"title":{},"body":{"injectables/CSVService.html":{}}}],["dynamic",{"_index":556,"title":{},"body":{"interfaces/Column.html":{},"components/IndexComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dynamically",{"_index":1985,"title":{},"body":{"components/LoaderComponent.html":{}}}],["dz",{"_index":2653,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e",{"_index":1224,"title":{},"body":{"interfaces/Column-1.html":{}}}],["e.g",{"_index":531,"title":{},"body":{"interfaces/Column.html":{}}}],["e2e",{"_index":2603,"title":{},"body":{"index.html":{}}}],["each",{"_index":244,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/LoginComponent.html":{}}}],["earliest",{"_index":563,"title":{},"body":{"interfaces/Column.html":{}}}],["earlist",{"_index":577,"title":{},"body":{"interfaces/Column.html":{}}}],["early",{"_index":537,"title":{},"body":{"interfaces/Column.html":{}}}],["easier",{"_index":1772,"title":{},"body":{"injectables/HttpService.html":{}}}],["easily",{"_index":1506,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["edit",{"_index":1263,"title":{},"body":{"interfaces/Column-1.html":{}}}],["edited",{"_index":989,"title":{},"body":{"interfaces/Column-1.html":{}}}],["editing",{"_index":987,"title":{},"body":{"interfaces/Column-1.html":{}}}],["editor",{"_index":366,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{}}}],["edward",{"_index":821,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["ele.name.value",{"_index":1655,"title":{},"body":{"components/HomeComponent.html":{}}}],["elem",{"_index":1248,"title":{},"body":{"interfaces/Column-1.html":{}}}],["elem.getcontext('2d",{"_index":1253,"title":{},"body":{"interfaces/Column-1.html":{}}}],["elem.height",{"_index":1251,"title":{},"body":{"interfaces/Column-1.html":{}}}],["elem.width",{"_index":1250,"title":{},"body":{"interfaces/Column-1.html":{}}}],["element",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["element.field",{"_index":581,"title":{},"body":{"interfaces/Column.html":{}}}],["element.join",{"_index":1667,"title":{},"body":{"components/HomeComponent.html":{}}}],["element.name.value",{"_index":651,"title":{},"body":{"interfaces/Column.html":{}}}],["element[field]).join",{"_index":1405,"title":{},"body":{"injectables/CommonService.html":{}}}],["email",{"_index":931,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["embarrassing",{"_index":1711,"title":{},"body":{"components/HomeComponent.html":{}}}],["emit",{"_index":1767,"title":{},"body":{"injectables/HttpService.html":{}}}],["emits",{"_index":1422,"title":{},"body":{"injectables/EventService.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{}}}],["emitting",{"_index":1426,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["empty",{"_index":1076,"title":{},"body":{"interfaces/Column-1.html":{}}}],["enable",{"_index":1671,"title":{},"body":{"components/HomeComponent.html":{}}}],["enables",{"_index":1629,"title":{},"body":{"components/HomeComponent.html":{}}}],["encapsulation",{"_index":443,"title":{},"body":{"interfaces/Column.html":{},"components/ForgetPasswordComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["end",{"_index":2602,"title":{},"body":{"index.html":{}}}],["endpoint",{"_index":149,"title":{},"body":{"injectables/AuthService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/SearchAlertComponent.html":{}}}],["ensure",{"_index":1892,"title":{},"body":{"components/IndexComponent.html":{}}}],["enter",{"_index":397,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["entered",{"_index":1052,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["entirely",{"_index":1369,"title":{},"body":{"injectables/CommonService.html":{}}}],["entry",{"_index":1324,"title":{},"body":{"interfaces/Column-1.html":{}}}],["environment",{"_index":782,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["environment.backend_url",{"_index":1797,"title":{},"body":{"injectables/HttpService.html":{}}}],["environment.google_key",{"_index":870,"title":{},"body":{"interfaces/Column-1.html":{}}}],["environment.vapidkey",{"_index":2071,"title":{},"body":{"components/LoginComponent.html":{}}}],["environments",{"_index":1899,"title":{},"body":{"components/IndexComponent.html":{}}}],["environments/environment",{"_index":783,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["epoch",{"_index":1350,"title":{},"body":{"injectables/CommonService.html":{}}}],["error",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CarForm.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["error.error",{"_index":1827,"title":{},"body":{"injectables/HttpService.html":{}}}],["error.error.message",{"_index":1836,"title":{},"body":{"injectables/HttpService.html":{}}}],["error.error.message[0",{"_index":1835,"title":{},"body":{"injectables/HttpService.html":{}}}],["error.status",{"_index":1822,"title":{},"body":{"injectables/HttpService.html":{}}}],["errorinterceptor",{"_index":2390,"title":{},"body":{"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["errors",{"_index":1262,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["especially",{"_index":2262,"title":{},"body":{"injectables/SEOService.html":{}}}],["euroexoticar",{"_index":1599,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["even",{"_index":1702,"title":{},"body":{"components/HomeComponent.html":{}}}],["event",{"_index":525,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"interfaces/INotification.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["event.checked",{"_index":619,"title":{},"body":{"interfaces/Column.html":{}}}],["event.first",{"_index":548,"title":{},"body":{"interfaces/Column.html":{}}}],["event.preventdefault",{"_index":2335,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["event.rows",{"_index":549,"title":{},"body":{"interfaces/Column.html":{}}}],["event.status",{"_index":2740,"title":{},"body":{"miscellaneous/variables.html":{}}}],["event.stoppropagation",{"_index":1487,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["event.target",{"_index":759,"title":{},"body":{"interfaces/Column.html":{}}}],["event.target.files[0",{"_index":1182,"title":{},"body":{"interfaces/Column-1.html":{}}}],["event.value",{"_index":1668,"title":{},"body":{"components/HomeComponent.html":{}}}],["eventemitter",{"_index":1438,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["events",{"_index":1876,"title":{},"body":{"components/IndexComponent.html":{},"miscellaneous/variables.html":{}}}],["eventservice",{"_index":1414,"title":{"injectables/EventService.html":{}},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"coverage.html":{}}}],["eventtarget",{"_index":760,"title":{},"body":{"interfaces/Column.html":{}}}],["example",{"_index":245,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/SEOService.html":{}}}],["exclamation",{"_index":765,"title":{},"body":{"interfaces/Column.html":{}}}],["execute",{"_index":2600,"title":{},"body":{"index.html":{}}}],["executes",{"_index":1898,"title":{},"body":{"components/IndexComponent.html":{}}}],["exist",{"_index":586,"title":{},"body":{"interfaces/Column.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"injectables/SEOService.html":{}}}],["existing",{"_index":1098,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/SEOService.html":{}}}],["exists",{"_index":129,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["expected",{"_index":630,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{}}}],["expects",{"_index":1777,"title":{},"body":{"injectables/HttpService.html":{}}}],["explicitly",{"_index":753,"title":{},"body":{"interfaces/Column.html":{}}}],["explore",{"_index":1681,"title":{},"body":{"components/HomeComponent.html":{}}}],["export",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["exports",{"_index":2363,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"overview.html":{}}}],["express",{"_index":2562,"title":{},"body":{"dependencies.html":{}}}],["extentions",{"_index":385,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["external",{"_index":1770,"title":{},"body":{"injectables/HttpService.html":{}}}],["extract",{"_index":1376,"title":{},"body":{"injectables/CommonService.html":{}}}],["extracted",{"_index":1378,"title":{},"body":{"injectables/CommonService.html":{}}}],["extracting",{"_index":701,"title":{},"body":{"interfaces/Column.html":{}}}],["extraction",{"_index":233,"title":{},"body":{"injectables/CSVService.html":{}}}],["extracts",{"_index":220,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"components/ProfileComponent.html":{}}}],["facing",{"_index":1784,"title":{},"body":{"injectables/HttpService.html":{}}}],["factory",{"_index":2035,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["fail",{"_index":1083,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["fails",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{}}}],["false",{"_index":134,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["falsy",{"_index":1367,"title":{},"body":{"injectables/CommonService.html":{}}}],["family",{"_index":2665,"title":{},"body":{"miscellaneous/variables.html":{}}}],["family_member",{"_index":2667,"title":{},"body":{"miscellaneous/variables.html":{}}}],["faster",{"_index":1719,"title":{},"body":{"components/HomeComponent.html":{}}}],["favorite",{"_index":1458,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["favorites",{"_index":1478,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["favourite",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["favourite.asking_price",{"_index":1499,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["favourite.name",{"_index":1497,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["favourite.vin_number",{"_index":1498,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["favourites",{"_index":1488,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["favouritevehiclecomponent",{"_index":56,"title":{"components/FavouriteVehicleComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["fcm",{"_index":1858,"title":{},"body":{"components/IndexComponent.html":{}}}],["fetch",{"_index":2330,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["fetch(store.logo.url",{"_index":1036,"title":{},"body":{"interfaces/Column-1.html":{}}}],["fetch(this.strstorepatchurl.changingthisbreaksapplicationsecurity",{"_index":1161,"title":{},"body":{"interfaces/Column-1.html":{}}}],["fetched",{"_index":974,"title":{},"body":{"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["fetches",{"_index":526,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["fetching",{"_index":512,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["field",{"_index":222,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"components/HomeComponent.html":{},"interfaces/LabelValueData.html":{},"components/RegisterComponent.html":{}}}],["field's",{"_index":552,"title":{},"body":{"interfaces/Column.html":{}}}],["fieldlist",{"_index":204,"title":{},"body":{"injectables/CSVService.html":{}}}],["fieldlist[index",{"_index":341,"title":{},"body":{"injectables/CSVService.html":{}}}],["fields",{"_index":668,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["fieldsetmodule",{"_index":2423,"title":{},"body":{"modules/UserModule.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["file([data",{"_index":1039,"title":{},"body":{"interfaces/Column-1.html":{}}}],["file([dataimage",{"_index":1163,"title":{},"body":{"interfaces/Column-1.html":{}}}],["file.type",{"_index":1167,"title":{},"body":{"interfaces/Column-1.html":{}}}],["filechangeevent(event",{"_index":1202,"title":{},"body":{"interfaces/Column-1.html":{}}}],["filename",{"_index":253,"title":{},"body":{"injectables/CSVService.html":{}}}],["filereader",{"_index":1217,"title":{},"body":{"interfaces/Column-1.html":{}}}],["files",{"_index":2590,"title":{},"body":{"index.html":{}}}],["fill",{"_index":977,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["filter",{"_index":452,"title":{},"body":{"interfaces/Column.html":{},"components/SearchAlertComponent.html":{}}}],["filter's",{"_index":551,"title":{},"body":{"interfaces/Column.html":{}}}],["filter).data.find((data",{"_index":663,"title":{},"body":{"interfaces/Column.html":{}}}],["filter.name",{"_index":2337,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["filter.type",{"_index":652,"title":{},"body":{"interfaces/Column.html":{}}}],["filter.value",{"_index":2338,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["filter.value.includes(data.value",{"_index":2344,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["filtered",{"_index":672,"title":{},"body":{"interfaces/Column.html":{}}}],["filterformdata",{"_index":2486,"title":{},"body":{"coverage.html":{}}}],["filters",{"_index":667,"title":{},"body":{"interfaces/Column.html":{},"components/HomeComponent.html":{},"components/SearchAlertComponent.html":{}}}],["filters.find((ele",{"_index":1654,"title":{},"body":{"components/HomeComponent.html":{}}}],["finally",{"_index":1152,"title":{},"body":{"interfaces/Column-1.html":{},"components/RegisterComponent.html":{}}}],["finance",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["finance_apr",{"_index":929,"title":{},"body":{"interfaces/Column-1.html":{}}}],["financeapplicationcomponent",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["find",{"_index":957,"title":{},"body":{"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["findcarprimaryimage(car",{"_index":633,"title":{},"body":{"interfaces/Column.html":{}}}],["findfilter",{"_index":2339,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["findfilter.data.foreach((data",{"_index":2343,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["findfilter.name.label",{"_index":2346,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["findfilter.type",{"_index":2342,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["finds",{"_index":625,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/SearchAlertComponent.html":{}}}],["findsearchlabelbyvalue",{"_index":2302,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["findsearchlabelbyvalue(filter",{"_index":2307,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["findsearchlabelbyvalue(filter).label",{"_index":2350,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["findsearchlabelbyvalue(filter).value",{"_index":2351,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["firebase",{"_index":1856,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["firebaseconfig",{"_index":2705,"title":{},"body":{"miscellaneous/variables.html":{}}}],["firestore",{"_index":1867,"title":{},"body":{"components/IndexComponent.html":{}}}],["first",{"_index":218,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"injectables/CommonService.html":{},"components/PriceAlertComponent.html":{},"index.html":{}}}],["flag",{"_index":1306,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["flags",{"_index":1090,"title":{},"body":{"interfaces/Column-1.html":{}}}],["floatlabelmodule",{"_index":2440,"title":{},"body":{"modules/UserModule.html":{}}}],["flr.name.value",{"_index":2341,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["folder",{"_index":504,"title":{},"body":{"interfaces/Column.html":{}}}],["folders",{"_index":490,"title":{},"body":{"interfaces/Column.html":{}}}],["followed",{"_index":234,"title":{},"body":{"injectables/CSVService.html":{}}}],["following",{"_index":144,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["foprm",{"_index":853,"title":{},"body":{"interfaces/Column-1.html":{}}}],["force",{"_index":951,"title":{},"body":{"interfaces/Column-1.html":{}}}],["forcefully",{"_index":883,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{}}}],["forget",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["forgetpasswordcomponent",{"_index":62,"title":{"components/ForgetPasswordComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["form",{"_index":419,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["form's",{"_index":1085,"title":{},"body":{"interfaces/Column-1.html":{}}}],["formaddress",{"_index":2142,"title":{},"body":{"components/ProfileComponent.html":{}}}],["format",{"_index":209,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{},"interfaces/LabelValueData.html":{}}}],["formats",{"_index":266,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"components/SearchAlertComponent.html":{}}}],["formatted",{"_index":239,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"injectables/CommonService.html":{},"components/SearchAlertComponent.html":{}}}],["formatting",{"_index":702,"title":{},"body":{"interfaces/Column.html":{}}}],["formcontrol",{"_index":777,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol('09:00",{"_index":915,"title":{},"body":{"interfaces/Column-1.html":{}}}],["formcontrol('18:00",{"_index":916,"title":{},"body":{"interfaces/Column-1.html":{}}}],["formcontrol('canada",{"_index":911,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["formcontrol('point",{"_index":925,"title":{},"body":{"interfaces/Column-1.html":{}}}],["formcontrol(false",{"_index":918,"title":{},"body":{"interfaces/Column-1.html":{}}}],["formcontrol(null",{"_index":865,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["formcontrol(this.strotp",{"_index":1588,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["formforgetpassword",{"_index":1532,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["formforgetpassword.value.email",{"_index":1600,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["formgroup",{"_index":776,"title":{},"body":{"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["formgroup).valid",{"_index":1050,"title":{},"body":{"interfaces/Column-1.html":{}}}],["formgroup).valuechanges.subscribe",{"_index":955,"title":{},"body":{"interfaces/Column-1.html":{}}}],["formlogin",{"_index":2048,"title":{},"body":{"components/LoginComponent.html":{}}}],["formpassword",{"_index":2143,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formregister",{"_index":2206,"title":{},"body":{"components/RegisterComponent.html":{}}}],["formregister.value.email",{"_index":2244,"title":{},"body":{"components/RegisterComponent.html":{}}}],["forms",{"_index":2151,"title":{},"body":{"components/ProfileComponent.html":{}}}],["formsearchvehicle",{"_index":1614,"title":{},"body":{"components/HomeComponent.html":{}}}],["formsmodule",{"_index":1518,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["formstore",{"_index":908,"title":{},"body":{"interfaces/Column-1.html":{}}}],["formtimelineresponse",{"_index":864,"title":{},"body":{"interfaces/Column-1.html":{}}}],["formuserinfo",{"_index":2144,"title":{},"body":{"components/ProfileComponent.html":{}}}],["found",{"_index":632,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{}}}],["found'},{'name",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["found.component.html",{"_index":2091,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.scss",{"_index":2092,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts",{"_index":2090,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["found.component.ts:11",{"_index":2095,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found.component.ts:21",{"_index":2096,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["found/page",{"_index":2089,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["free",{"_index":1721,"title":{},"body":{"components/HomeComponent.html":{}}}],["friday",{"_index":922,"title":{},"body":{"interfaces/Column-1.html":{}}}],["friend",{"_index":2668,"title":{},"body":{"miscellaneous/variables.html":{}}}],["friendly",{"_index":1755,"title":{},"body":{"injectables/HttpService.html":{}}}],["front_url",{"_index":2700,"title":{},"body":{"miscellaneous/variables.html":{}}}],["full",{"_index":1774,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["full_time",{"_index":2686,"title":{},"body":{"miscellaneous/variables.html":{}}}],["function",{"_index":123,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["functionality",{"_index":1201,"title":{},"body":{"interfaces/Column-1.html":{},"components/PageNotFoundComponent.html":{}}}],["further",{"_index":2607,"title":{},"body":{"index.html":{}}}],["future",{"_index":2020,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["g",{"_index":1135,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["g1",{"_index":2647,"title":{},"body":{"miscellaneous/variables.html":{}}}],["g2",{"_index":2648,"title":{},"body":{"miscellaneous/variables.html":{}}}],["galleriamodule",{"_index":2399,"title":{},"body":{"modules/UserModule.html":{}}}],["generate",{"_index":669,"title":{},"body":{"interfaces/Column.html":{},"index.html":{}}}],["generated",{"_index":1352,"title":{},"body":{"injectables/CommonService.html":{},"index.html":{}}}],["generates",{"_index":683,"title":{},"body":{"interfaces/Column.html":{},"injectables/CommonService.html":{}}}],["geolib",{"_index":2564,"title":{},"body":{"dependencies.html":{}}}],["geolocation",{"_index":1895,"title":{},"body":{"components/IndexComponent.html":{}}}],["geolocationposition",{"_index":1963,"title":{},"body":{"components/IndexComponent.html":{}}}],["geolocationpositionerror",{"_index":1956,"title":{},"body":{"components/IndexComponent.html":{}}}],["get(key",{"_index":2012,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["get(url",{"_index":1759,"title":{},"body":{"injectables/HttpService.html":{}}}],["getalertsubscribe",{"_index":2303,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["getcarlist(status",{"_index":538,"title":{},"body":{"interfaces/Column.html":{}}}],["getfavouritevahicle",{"_index":1452,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["getlastelementrolefromtimeline(store",{"_index":1325,"title":{},"body":{"interfaces/Column-1.html":{}}}],["getloading",{"_index":1989,"title":{},"body":{"injectables/LoaderService.html":{}}}],["getmessaging",{"_index":2637,"title":{},"body":{"miscellaneous/variables.html":{}}}],["getobject",{"_index":2005,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getobject(key",{"_index":2015,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["getpricealerts",{"_index":2108,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["getrolebyvalue(status",{"_index":1331,"title":{},"body":{"interfaces/Column-1.html":{}}}],["getrxjs",{"_index":1740,"title":{},"body":{"injectables/HttpService.html":{}}}],["getrxjs(url",{"_index":1763,"title":{},"body":{"injectables/HttpService.html":{}}}],["getstores",{"_index":975,"title":{},"body":{"interfaces/Column-1.html":{}}}],["getstorestatusbyvalue(status",{"_index":967,"title":{},"body":{"interfaces/Column-1.html":{}}}],["getting",{"_index":2579,"title":{"index.html":{}},"body":{}}],["gettoken",{"_index":2058,"title":{},"body":{"components/LoginComponent.html":{}}}],["gettoken(this.messaging",{"_index":2069,"title":{},"body":{"components/LoginComponent.html":{}}}],["getuser",{"_index":2145,"title":{},"body":{"components/ProfileComponent.html":{}}}],["getwithoutsideurl",{"_index":1741,"title":{},"body":{"injectables/HttpService.html":{}}}],["getwithoutsideurl(url",{"_index":1768,"title":{},"body":{"injectables/HttpService.html":{}}}],["getwithoutsideurlcsv",{"_index":1742,"title":{},"body":{"injectables/HttpService.html":{}}}],["getwithoutsideurlcsv(url",{"_index":1775,"title":{},"body":{"injectables/HttpService.html":{}}}],["given",{"_index":523,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/HttpService.html":{},"components/SearchAlertComponent.html":{}}}],["go",{"_index":509,"title":{},"body":{"interfaces/Column.html":{},"components/PageNotFoundComponent.html":{},"index.html":{}}}],["going",{"_index":1705,"title":{},"body":{"components/HomeComponent.html":{}}}],["good",{"_index":2074,"title":{},"body":{"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{}}}],["google",{"_index":871,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{},"modules/UserModule.html":{}}}],["google.maps.latlngliteral",{"_index":876,"title":{},"body":{"interfaces/Column-1.html":{}}}],["google.maps.markeroptions",{"_index":885,"title":{},"body":{"interfaces/Column-1.html":{}}}],["google_key",{"_index":2703,"title":{},"body":{"miscellaneous/variables.html":{}}}],["google_review",{"_index":928,"title":{},"body":{"interfaces/Column-1.html":{}}}],["googlemap",{"_index":2367,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["graph",{"_index":2271,"title":{},"body":{"injectables/SEOService.html":{},"modules.html":{}}}],["great",{"_index":1503,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["group",{"_index":375,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/FavouriteVehicleComponent.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["group.com",{"_index":2724,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group_left",{"_index":404,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["group_right",{"_index":403,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["group_string",{"_index":405,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["guard",{"_index":2448,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["handle",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["handled",{"_index":1787,"title":{},"body":{"injectables/HttpService.html":{}}}],["handleerror",{"_index":1743,"title":{},"body":{"injectables/HttpService.html":{}}}],["handleerror(error",{"_index":1779,"title":{},"body":{"injectables/HttpService.html":{}}}],["handles",{"_index":264,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["handling",{"_index":1103,"title":{},"body":{"interfaces/Column-1.html":{}}}],["haven’t",{"_index":2354,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["head",{"_index":340,"title":{},"body":{"injectables/CSVService.html":{}}}],["header",{"_index":216,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{}}}],["headerlist",{"_index":202,"title":{},"body":{"injectables/CSVService.html":{}}}],["headerlist[index",{"_index":337,"title":{},"body":{"injectables/CSVService.html":{}}}],["headers",{"_index":230,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{}}}],["height",{"_index":1240,"title":{},"body":{"interfaces/Column-1.html":{}}}],["help",{"_index":2608,"title":{},"body":{"index.html":{}}}],["hexadecimal",{"_index":1344,"title":{},"body":{"injectables/CommonService.html":{}}}],["hh:mm:ss",{"_index":734,"title":{},"body":{"interfaces/Column.html":{}}}],["hidden",{"_index":318,"title":{},"body":{"injectables/CSVService.html":{},"components/HomeComponent.html":{}}}],["highcharts",{"_index":2566,"title":{},"body":{"dependencies.html":{}}}],["history",{"_index":2099,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["home",{"_index":1605,"title":{},"body":{"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"modules/UserRoutingModule.html":{}}}],["home'},{'name",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["home.component.html",{"_index":1608,"title":{},"body":{"components/HomeComponent.html":{},"components/HomeComponent-1.html":{}}}],["home.component.scss",{"_index":1609,"title":{},"body":{"components/HomeComponent.html":{},"components/HomeComponent-1.html":{}}}],["home/home.component",{"_index":2380,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["homecomponent",{"_index":65,"title":{"components/HomeComponent.html":{},"components/HomeComponent-1.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["hook",{"_index":1465,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{}}}],["hours",{"_index":1265,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["href",{"_index":2294,"title":{},"body":{"injectables/SEOService.html":{}}}],["html",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["http",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column-1.html":{},"injectables/HttpService.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["http.service",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["http://localhost:4200",{"_index":2589,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["http://localhost:9876",{"_index":2702,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpclient",{"_index":1747,"title":{},"body":{"injectables/HttpService.html":{}}}],["httperrorresponse",{"_index":1780,"title":{},"body":{"injectables/HttpService.html":{},"miscellaneous/variables.html":{}}}],["httpevent",{"_index":2733,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpheaders",{"_index":1798,"title":{},"body":{"injectables/HttpService.html":{}}}],["httpinterceptorfn",{"_index":2726,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpresponse",{"_index":2735,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://addressvalidation.googleapis.com/v1:validateaddress?key=${environment.google_key",{"_index":1057,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["https://api.mechatronic",{"_index":2725,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://auto.mechatronic",{"_index":2723,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpservice",{"_index":113,"title":{"injectables/HttpService.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["humour",{"_index":1698,"title":{},"body":{"components/HomeComponent.html":{}}}],["hyphens",{"_index":2216,"title":{},"body":{"components/RegisterComponent.html":{}}}],["icon",{"_index":476,"title":{},"body":{"interfaces/Column.html":{},"components/IndexComponent.html":{}}}],["id",{"_index":589,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["identifier",{"_index":612,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["identifies",{"_index":704,"title":{},"body":{"interfaces/Column.html":{}}}],["if('/detail'.indexof(router.routerstate.snapshot.url",{"_index":2745,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(['/prequalify",{"_index":2746,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(authservice.isloggedin",{"_index":2642,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(currentuser",{"_index":1974,"title":{},"body":{"components/IndexComponent.html":{}}}],["if(data[0].label",{"_index":350,"title":{},"body":{"injectables/CSVService.html":{}}}],["if(data[0].url",{"_index":346,"title":{},"body":{"injectables/CSVService.html":{}}}],["if(event",{"_index":2736,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(event.status",{"_index":2750,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(findfilter",{"_index":2345,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["if(formaddress.valid",{"_index":2197,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(formuserinfo.valid",{"_index":2196,"title":{},"body":{"components/ProfileComponent.html":{}}}],["if(localstorageservice.userisdealer",{"_index":2697,"title":{},"body":{"miscellaneous/variables.html":{}}}],["if(response.success",{"_index":2130,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["if(user.address",{"_index":2175,"title":{},"body":{"components/ProfileComponent.html":{}}}],["imaage",{"_index":1157,"title":{},"body":{"interfaces/Column-1.html":{}}}],["image",{"_index":627,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["image.position",{"_index":635,"title":{},"body":{"interfaces/Column.html":{}}}],["image.url",{"_index":738,"title":{},"body":{"interfaces/Column.html":{}}}],["image/jpeg",{"_index":1193,"title":{},"body":{"interfaces/Column-1.html":{}}}],["image/jpg'].includes(file.type",{"_index":1194,"title":{},"body":{"interfaces/Column-1.html":{}}}],["imagechangedevent",{"_index":891,"title":{},"body":{"interfaces/Column-1.html":{}}}],["imagecroppedevent",{"_index":786,"title":{},"body":{"interfaces/Column-1.html":{}}}],["imagecroppercomponent",{"_index":787,"title":{},"body":{"interfaces/Column-1.html":{},"modules/UserModule.html":{}}}],["images",{"_index":565,"title":{},"body":{"interfaces/Column.html":{},"modules/UserModule.html":{}}}],["img",{"_index":1245,"title":{},"body":{"interfaces/Column-1.html":{}}}],["img.onerror",{"_index":1257,"title":{},"body":{"interfaces/Column-1.html":{}}}],["img.onload",{"_index":1247,"title":{},"body":{"interfaces/Column-1.html":{}}}],["img.position",{"_index":637,"title":{},"body":{"interfaces/Column.html":{}}}],["img.src",{"_index":1246,"title":{},"body":{"interfaces/Column-1.html":{}}}],["implements",{"_index":445,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"interfaces/INotification.html":{},"components/ProfileComponent.html":{},"index.html":{}}}],["implicitly",{"_index":1183,"title":{},"body":{"interfaces/Column-1.html":{}}}],["import",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["important",{"_index":1863,"title":{},"body":{"components/IndexComponent.html":{}}}],["imports",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["in_process",{"_index":833,"title":{},"body":{"interfaces/Column-1.html":{}}}],["inactive",{"_index":284,"title":{},"body":{"injectables/CSVService.html":{}}}],["include",{"_index":576,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["includes",{"_index":689,"title":{},"body":{"interfaces/Column.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"injectables/SEOService.html":{}}}],["including",{"_index":287,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{},"injectables/HttpService.html":{},"components/PriceAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":22,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index'},{'name",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["index.component.html",{"_index":1840,"title":{},"body":{"components/IndexComponent.html":{}}}],["index.component.scss",{"_index":1841,"title":{},"body":{"components/IndexComponent.html":{}}}],["indexcomponent",{"_index":67,"title":{"components/IndexComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["indicate",{"_index":1091,"title":{},"body":{"interfaces/Column-1.html":{},"components/RegisterComponent.html":{}}}],["indicates",{"_index":1291,"title":{},"body":{"interfaces/Column-1.html":{}}}],["indicating",{"_index":1303,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/LoaderService.html":{}}}],["indicators",{"_index":2000,"title":{},"body":{"injectables/LoaderService.html":{}}}],["industry",{"_index":1718,"title":{},"body":{"components/HomeComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["information",{"_index":533,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["init",{"_index":1648,"title":{},"body":{"components/HomeComponent.html":{}}}],["initial",{"_index":1259,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["initialization",{"_index":519,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["initialize",{"_index":1624,"title":{},"body":{"components/HomeComponent.html":{}}}],["initializeapp(environment.firebaseconfig",{"_index":2635,"title":{},"body":{"miscellaneous/variables.html":{}}}],["initialized",{"_index":517,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["initializes",{"_index":511,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["initializing",{"_index":1621,"title":{},"body":{"components/HomeComponent.html":{}}}],["initiates",{"_index":687,"title":{},"body":{"interfaces/Column.html":{},"components/ForgetPasswordComponent.html":{}}}],["inject",{"_index":1800,"title":{},"body":{"injectables/HttpService.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["inject(authservice",{"_index":2640,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(browser_storage",{"_index":2030,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["inject(localstorageservice",{"_index":2696,"title":{},"body":{"miscellaneous/variables.html":{}}}],["inject(messaging",{"_index":1910,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["inject(platform_id",{"_index":1922,"title":{},"body":{"components/IndexComponent.html":{}}}],["inject(router",{"_index":2641,"title":{},"body":{"miscellaneous/variables.html":{}}}],["injectable",{"_index":103,"title":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"injectables/SEOService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"injectables/SEOService.html":{},"coverage.html":{}}}],["injectables",{"_index":105,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"injectables/SEOService.html":{},"overview.html":{}}}],["injected",{"_index":1697,"title":{},"body":{"components/HomeComponent.html":{}}}],["injectiontoken",{"_index":2032,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["injectiontoken('browser",{"_index":2034,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["inotification",{"_index":1420,"title":{"interfaces/INotification.html":{}},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{},"coverage.html":{}}}],["input",{"_index":286,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"interfaces/LabelValueData.html":{}}}],["inputgroupaddonmodule",{"_index":2412,"title":{},"body":{"modules/UserModule.html":{}}}],["inputgroupmodule",{"_index":2410,"title":{},"body":{"modules/UserModule.html":{}}}],["inputmaskmodule",{"_index":2203,"title":{},"body":{"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["inputnumbermodule",{"_index":2426,"title":{},"body":{"modules/UserModule.html":{}}}],["inputotpmodule",{"_index":1529,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["inputs",{"_index":1364,"title":{},"body":{"injectables/CommonService.html":{}}}],["inputswitchchangeevent",{"_index":439,"title":{},"body":{"interfaces/Column.html":{}}}],["inputswitchmodule",{"_index":2425,"title":{},"body":{"modules/UserModule.html":{}}}],["inputtextareamodule",{"_index":2418,"title":{},"body":{"modules/UserModule.html":{}}}],["inputtextmodule",{"_index":1523,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["inquiry",{"_index":2454,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["inquiry'},{'name",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["inquiry/inquiry.component",{"_index":2382,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["inquirycomponent",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["insensitive",{"_index":1387,"title":{},"body":{"injectables/CommonService.html":{}}}],["instance",{"_index":2734,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instanceof",{"_index":2737,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instances",{"_index":2639,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instead",{"_index":1203,"title":{},"body":{"interfaces/Column-1.html":{}}}],["int",{"_index":399,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["interaction",{"_index":2122,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["intercept",{"_index":2729,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interceptor",{"_index":2389,"title":{},"body":{"modules/UserModule.html":{}}}],["interface",{"_index":354,"title":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"interfaces/INotification.html":{},"interfaces/LabelValueData.html":{}},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/EventService.html":{},"interfaces/INotification.html":{},"interfaces/LabelValueData.html":{},"coverage.html":{}}}],["interfaces",{"_index":356,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"interfaces/INotification.html":{},"interfaces/LabelValueData.html":{},"overview.html":{}}}],["internal",{"_index":1993,"title":{},"body":{"injectables/LoaderService.html":{}}}],["invalid",{"_index":1048,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["iphiudhq7ljb0r9taa2isemtv0livxc",{"_index":2722,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ipsum",{"_index":1693,"title":{},"body":{"components/HomeComponent.html":{}}}],["isaddresschanged",{"_index":881,"title":{},"body":{"interfaces/Column-1.html":{}}}],["isaddressvefied",{"_index":879,"title":{},"body":{"interfaces/Column-1.html":{}}}],["iscreatestoredialogopen",{"_index":831,"title":{},"body":{"interfaces/Column-1.html":{}}}],["iscropdialogopen",{"_index":890,"title":{},"body":{"interfaces/Column-1.html":{}}}],["isexist",{"_index":579,"title":{},"body":{"interfaces/Column.html":{}}}],["isexportcsvdialogopen",{"_index":471,"title":{},"body":{"interfaces/Column.html":{}}}],["island",{"_index":822,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["isloggedin",{"_index":108,"title":{},"body":{"injectables/AuthService.html":{}}}],["islogochanged",{"_index":855,"title":{},"body":{"interfaces/Column-1.html":{}}}],["islogochangeonupdate",{"_index":892,"title":{},"body":{"interfaces/Column-1.html":{}}}],["ismobilescreen",{"_index":1842,"title":{},"body":{"components/IndexComponent.html":{}}}],["isn't",{"_index":1709,"title":{},"body":{"components/HomeComponent.html":{}}}],["isn\\'t",{"_index":1726,"title":{},"body":{"components/HomeComponent.html":{}}}],["isotpsent",{"_index":1533,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["isotpvalid",{"_index":1534,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["isplateformbrowser",{"_index":2006,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["isplatformbrowser",{"_index":1912,"title":{},"body":{"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{}}}],["isplatformbrowser(this.platformid",{"_index":1958,"title":{},"body":{"components/IndexComponent.html":{}}}],["isregisterloading",{"_index":2207,"title":{},"body":{"components/RegisterComponent.html":{}}}],["issafaribrowser",{"_index":305,"title":{},"body":{"injectables/CSVService.html":{}}}],["isstoreoperationloading",{"_index":897,"title":{},"body":{"interfaces/Column-1.html":{}}}],["isstoretimelinedialogopen",{"_index":936,"title":{},"body":{"interfaces/Column-1.html":{}}}],["issue",{"_index":1577,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{}}}],["istimelineresponsedialogopen",{"_index":863,"title":{},"body":{"interfaces/Column-1.html":{}}}],["istimelineresponseloading",{"_index":867,"title":{},"body":{"interfaces/Column-1.html":{}}}],["isuserdealer",{"_index":539,"title":{},"body":{"interfaces/Column.html":{},"components/HomeComponent-1.html":{}}}],["isvalidationmapmodalopen",{"_index":872,"title":{},"body":{"interfaces/Column-1.html":{}}}],["isviewdialogopen",{"_index":859,"title":{},"body":{"interfaces/Column-1.html":{}}}],["it's",{"_index":965,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["item",{"_index":2321,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["item.auth",{"_index":1973,"title":{},"body":{"components/IndexComponent.html":{}}}],["item.icon",{"_index":1950,"title":{},"body":{"components/IndexComponent.html":{}}}],["item.label",{"_index":1949,"title":{},"body":{"components/IndexComponent.html":{}}}],["item.routerlink",{"_index":1951,"title":{},"body":{"components/IndexComponent.html":{}}}],["items",{"_index":153,"title":{},"body":{"injectables/AuthService.html":{},"components/IndexComponent.html":{}}}],["iterates",{"_index":699,"title":{},"body":{"interfaces/Column.html":{}}}],["javascript",{"_index":1341,"title":{},"body":{"injectables/CommonService.html":{}}}],["join",{"_index":349,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{}}}],["joined",{"_index":279,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["joining",{"_index":1276,"title":{},"body":{"interfaces/Column-1.html":{}}}],["jpeg",{"_index":1195,"title":{},"body":{"interfaces/Column-1.html":{}}}],["jpg",{"_index":1196,"title":{},"body":{"interfaces/Column-1.html":{}}}],["json",{"_index":227,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{}}}],["json.parse(json.stringify(this.arrcarlist.data",{"_index":562,"title":{},"body":{"interfaces/Column.html":{}}}],["json.parse(json.stringify(this.cols",{"_index":594,"title":{},"body":{"interfaces/Column.html":{}}}],["json.parse(objdata",{"_index":335,"title":{},"body":{"injectables/CSVService.html":{}}}],["json.parse(this.storage.getitem(key",{"_index":2041,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["json.stringify(value",{"_index":2040,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["jump",{"_index":2357,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["karma",{"_index":2601,"title":{},"body":{"index.html":{}}}],["kb",{"_index":1192,"title":{},"body":{"interfaces/Column-1.html":{}}}],["keep",{"_index":494,"title":{},"body":{"interfaces/Column.html":{}}}],["key",{"_index":572,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"interfaces/INotification.html":{},"injectables/LocalStorageService.html":{}}}],["key.tolowercase",{"_index":1397,"title":{},"body":{"injectables/CommonService.html":{}}}],["key.tolowercase().replace",{"_index":1395,"title":{},"body":{"injectables/CommonService.html":{}}}],["key.tolowercase().replace(/_/g",{"_index":1390,"title":{},"body":{"injectables/CommonService.html":{}}}],["key.touppercase",{"_index":1394,"title":{},"body":{"injectables/CommonService.html":{}}}],["keyfilter",{"_index":396,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["keyfiltermodule",{"_index":2408,"title":{},"body":{"modules/UserModule.html":{}}}],["keys",{"_index":231,"title":{},"body":{"injectables/CSVService.html":{}}}],["kindly",{"_index":761,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["km",{"_index":2313,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["know",{"_index":2137,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["label",{"_index":277,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["labelvaluedata",{"_index":382,"title":{"interfaces/LabelValueData.html":{}},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"coverage.html":{}}}],["lable",{"_index":454,"title":{},"body":{"interfaces/Column.html":{}}}],["labrador",{"_index":807,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["large",{"_index":1880,"title":{},"body":{"components/IndexComponent.html":{}}}],["last",{"_index":695,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{}}}],["lastindex",{"_index":981,"title":{},"body":{"interfaces/Column-1.html":{}}}],["lastvaluefrom",{"_index":1761,"title":{},"body":{"injectables/HttpService.html":{}}}],["lastvaluefrom(this.httpservice.delete(this.server_url",{"_index":1821,"title":{},"body":{"injectables/HttpService.html":{}}}],["lastvaluefrom(this.httpservice.get(this.server_url",{"_index":1806,"title":{},"body":{"injectables/HttpService.html":{}}}],["lastvaluefrom(this.httpservice.get(url",{"_index":1811,"title":{},"body":{"injectables/HttpService.html":{}}}],["lastvaluefrom(this.httpservice.patch(this.server_url",{"_index":1820,"title":{},"body":{"injectables/HttpService.html":{}}}],["lastvaluefrom(this.httpservice.post(this.server_url",{"_index":1813,"title":{},"body":{"injectables/HttpService.html":{}}}],["lastvaluefrom(this.httpservice.post(url",{"_index":1817,"title":{},"body":{"injectables/HttpService.html":{}}}],["lastvaluefrom(this.httpservice.put(url",{"_index":1819,"title":{},"body":{"injectables/HttpService.html":{}}}],["lat",{"_index":877,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/ProfileComponent.html":{}}}],["latitude",{"_index":1086,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/ProfileComponent.html":{}}}],["law",{"_index":2660,"title":{},"body":{"miscellaneous/variables.html":{}}}],["layouts",{"_index":1883,"title":{},"body":{"components/IndexComponent.html":{}}}],["leaks",{"_index":1437,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["legend",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["less",{"_index":1191,"title":{},"body":{"interfaces/Column-1.html":{}}}],["letter",{"_index":1358,"title":{},"body":{"injectables/CommonService.html":{}}}],["letters",{"_index":1371,"title":{},"body":{"injectables/CommonService.html":{}}}],["license_number",{"_index":930,"title":{},"body":{"interfaces/Column-1.html":{}}}],["life",{"_index":1150,"title":{},"body":{"interfaces/Column-1.html":{}}}],["lifecycle",{"_index":1464,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{}}}],["limit",{"_index":466,"title":{},"body":{"interfaces/Column.html":{}}}],["line",{"_index":240,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["line}\\r\\n",{"_index":343,"title":{},"body":{"injectables/CSVService.html":{}}}],["link",{"_index":1936,"title":{},"body":{"components/IndexComponent.html":{}}}],["list",{"_index":217,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/IndexComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserRoutingModule.html":{}}}],["list').then((response",{"_index":1484,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["list'},{'name",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["list.component",{"_index":2377,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["list.component.html",{"_index":441,"title":{},"body":{"interfaces/Column.html":{}}}],["list.component.scss",{"_index":442,"title":{},"body":{"interfaces/Column.html":{}}}],["list.component.ts",{"_index":422,"title":{},"body":{"interfaces/Column.html":{},"coverage.html":{}}}],["list/car",{"_index":421,"title":{},"body":{"interfaces/Column.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["listing",{"_index":480,"title":{},"body":{"interfaces/Column.html":{}}}],["literal",{"_index":1332,"title":{},"body":{"interfaces/CommonElement.html":{},"components/SearchAlertComponent.html":{}}}],["live",{"_index":475,"title":{},"body":{"interfaces/Column.html":{}}}],["living",{"_index":2670,"title":{},"body":{"miscellaneous/variables.html":{}}}],["living_with_family",{"_index":2671,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lng",{"_index":878,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/ProfileComponent.html":{}}}],["load",{"_index":850,"title":{},"body":{"interfaces/Column-1.html":{}}}],["loaded",{"_index":990,"title":{},"body":{"interfaces/Column-1.html":{}}}],["loader",{"_index":1976,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["loader.component.html",{"_index":1977,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.component.scss",{"_index":1978,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader/loader.component",{"_index":2376,"title":{},"body":{"modules/UserModule.html":{}}}],["loadercomponent",{"_index":71,"title":{"components/LoaderComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"coverage.html":{},"overview.html":{}}}],["loaderservice",{"_index":1981,"title":{"injectables/LoaderService.html":{}},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["loading",{"_index":896,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/LoaderService.html":{},"components/RegisterComponent.html":{}}}],["loads",{"_index":2155,"title":{},"body":{"components/ProfileComponent.html":{}}}],["loan",{"_index":1933,"title":{},"body":{"components/IndexComponent.html":{},"miscellaneous/variables.html":{}}}],["loan'},{'name",{"_index":80,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["loan.component.ts",{"_index":2479,"title":{},"body":{"coverage.html":{}}}],["loan/prequalify",{"_index":2478,"title":{},"body":{"coverage.html":{}}}],["loan?isloginsetup=true",{"_index":2747,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loca",{"_index":2014,"title":{},"body":{"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{}}}],["local",{"_index":127,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventService.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{}}}],["local_shipping",{"_index":477,"title":{},"body":{"interfaces/Column.html":{}}}],["localstorage",{"_index":2036,"title":{},"body":{"injectables/LocalStorageService.html":{},"miscellaneous/variables.html":{}}}],["localstorageservice",{"_index":114,"title":{"injectables/LocalStorageService.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["localstorageservice.remove('ne",{"_index":2743,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorageservice.remove('store",{"_index":2742,"title":{},"body":{"miscellaneous/variables.html":{}}}],["localstorageservice.remove('user",{"_index":2741,"title":{},"body":{"miscellaneous/variables.html":{}}}],["location",{"_index":596,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/PageNotFoundComponent.html":{},"components/ProfileComponent.html":{}}}],["location.lat",{"_index":2194,"title":{},"body":{"components/ProfileComponent.html":{}}}],["location.lng",{"_index":2195,"title":{},"body":{"components/ProfileComponent.html":{}}}],["location.reload",{"_index":1147,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{}}}],["logged",{"_index":122,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"miscellaneous/variables.html":{}}}],["login",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EventService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["login'},{'name",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["login.component.html",{"_index":2046,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.scss",{"_index":2047,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":73,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["logo",{"_index":785,"title":{},"body":{"interfaces/Column-1.html":{}}}],["logo.jpg",{"_index":1164,"title":{},"body":{"interfaces/Column-1.html":{}}}],["logout",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{},"components/IndexComponent.html":{}}}],["logs",{"_index":137,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{}}}],["longer",{"_index":491,"title":{},"body":{"interfaces/Column.html":{}}}],["longitude",{"_index":1087,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/ProfileComponent.html":{}}}],["look",{"_index":952,"title":{},"body":{"interfaces/Column-1.html":{},"components/HomeComponent.html":{}}}],["looking",{"_index":2352,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["lorem",{"_index":1692,"title":{},"body":{"components/HomeComponent.html":{}}}],["lowercase",{"_index":1354,"title":{},"body":{"injectables/CommonService.html":{},"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{}}}],["lowest",{"_index":628,"title":{},"body":{"interfaces/Column.html":{}}}],["m",{"_index":2651,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m1",{"_index":2649,"title":{},"body":{"miscellaneous/variables.html":{}}}],["m2",{"_index":2650,"title":{},"body":{"miscellaneous/variables.html":{}}}],["main",{"_index":416,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/ProfileComponent.html":{}}}],["majority",{"_index":1694,"title":{},"body":{"components/HomeComponent.html":{}}}],["make",{"_index":381,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/CommonElement.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{}}}],["make').data.sort((a",{"_index":1656,"title":{},"body":{"components/HomeComponent.html":{}}}],["make.label",{"_index":1684,"title":{},"body":{"components/HomeComponent.html":{}}}],["make.value",{"_index":1683,"title":{},"body":{"components/HomeComponent.html":{}}}],["maker",{"_index":1070,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["makes",{"_index":1459,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{}}}],["making",{"_index":1771,"title":{},"body":{"injectables/HttpService.html":{},"components/IndexComponent.html":{}}}],["manage",{"_index":773,"title":{},"body":{"interfaces/Column.html":{},"modules/UserRoutingModule.html":{}}}],["manage'},{'name",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["manage.component",{"_index":2379,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["manage.component.ts",{"_index":2495,"title":{},"body":{"coverage.html":{}}}],["manage/car",{"_index":2378,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["manage/car.interface.ts",{"_index":358,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["managed",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["management",{"_index":742,"title":{},"body":{"interfaces/Column.html":{}}}],["manages",{"_index":1179,"title":{},"body":{"interfaces/Column-1.html":{}}}],["manitoba",{"_index":804,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["many",{"_index":1689,"title":{},"body":{"components/HomeComponent.html":{}}}],["map",{"_index":868,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{},"modules/UserModule.html":{}}}],["map((v",{"_index":328,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["mapmarker",{"_index":2368,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["maps",{"_index":1054,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["mark",{"_index":889,"title":{},"body":{"interfaces/Column-1.html":{}}}],["marker",{"_index":953,"title":{},"body":{"interfaces/Column-1.html":{}}}],["markeroptions",{"_index":884,"title":{},"body":{"interfaces/Column-1.html":{}}}],["markerpositions",{"_index":887,"title":{},"body":{"interfaces/Column-1.html":{}}}],["marketplace",{"_index":481,"title":{},"body":{"interfaces/Column.html":{}}}],["married",{"_index":2656,"title":{},"body":{"miscellaneous/variables.html":{}}}],["match",{"_index":659,"title":{},"body":{"interfaces/Column.html":{}}}],["matched",{"_index":661,"title":{},"body":{"interfaces/Column.html":{}}}],["matching",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.floor(math.random",{"_index":1411,"title":{},"body":{"injectables/CommonService.html":{}}}],["math.floor(new",{"_index":1406,"title":{},"body":{"injectables/CommonService.html":{}}}],["math.min(...car.images.map((image",{"_index":723,"title":{},"body":{"interfaces/Column.html":{}}}],["math.min(...car.map((img",{"_index":636,"title":{},"body":{"interfaces/Column.html":{}}}],["math.round(file.size",{"_index":1188,"title":{},"body":{"interfaces/Column-1.html":{}}}],["maxsize",{"_index":401,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["mb",{"_index":805,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["mdcajzvuyt2uwgqkl74",{"_index":2708,"title":{},"body":{"miscellaneous/variables.html":{}}}],["measurementid",{"_index":2719,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mechatronic",{"_index":1505,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"miscellaneous/variables.html":{}}}],["media",{"_index":388,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["member",{"_index":2666,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memory",{"_index":1436,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["menu",{"_index":1878,"title":{},"body":{"components/IndexComponent.html":{}}}],["menu.label",{"_index":1972,"title":{},"body":{"components/IndexComponent.html":{}}}],["menuitem",{"_index":1905,"title":{},"body":{"components/IndexComponent.html":{}}}],["menulanguage",{"_index":1843,"title":{},"body":{"components/IndexComponent.html":{}}}],["menuloginuser",{"_index":1844,"title":{},"body":{"components/IndexComponent.html":{}}}],["menumainnavigation",{"_index":1845,"title":{},"body":{"components/IndexComponent.html":{}}}],["menumainnavigationresponsive",{"_index":1846,"title":{},"body":{"components/IndexComponent.html":{}}}],["menumodule",{"_index":1838,"title":{},"body":{"components/IndexComponent.html":{},"modules/UserModule.html":{}}}],["mergeapplicationconfig(appconfig",{"_index":2645,"title":{},"body":{"miscellaneous/variables.html":{}}}],["message",{"_index":609,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["messages",{"_index":1783,"title":{},"body":{"injectables/HttpService.html":{},"components/ProfileComponent.html":{}}}],["messageservice",{"_index":435,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{}}}],["messaging",{"_index":1847,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["messagingsenderid",{"_index":2715,"title":{},"body":{"miscellaneous/variables.html":{}}}],["met",{"_index":1184,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{}}}],["meta",{"_index":2253,"title":{},"body":{"injectables/SEOService.html":{}}}],["metadata",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["metaservice",{"_index":2256,"title":{},"body":{"injectables/SEOService.html":{}}}],["method",{"_index":513,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["methods",{"_index":107,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["middle",{"_index":1712,"title":{},"body":{"components/HomeComponent.html":{}}}],["min",{"_index":395,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["mindate",{"_index":394,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["minimum",{"_index":1598,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{}}}],["minposition",{"_index":722,"title":{},"body":{"interfaces/Column.html":{}}}],["miscellaneous",{"_index":2615,"title":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":2680,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modal",{"_index":874,"title":{},"body":{"interfaces/Column-1.html":{}}}],["mode",{"_index":387,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/FavouriteVehicleComponent.html":{},"interfaces/LabelValueData.html":{}}}],["model",{"_index":566,"title":{},"body":{"interfaces/Column.html":{},"components/HomeComponent.html":{}}}],["model').data",{"_index":1660,"title":{},"body":{"components/HomeComponent.html":{}}}],["models",{"_index":1627,"title":{},"body":{"components/HomeComponent.html":{}}}],["modified",{"_index":696,"title":{},"body":{"interfaces/Column.html":{}}}],["modify",{"_index":410,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["module",{"_index":2067,"title":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}},"body":{"components/LoginComponent.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["modules",{"_index":2359,"title":{"modules.html":{}},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["monday",{"_index":914,"title":{},"body":{"interfaces/Column-1.html":{}}}],["money",{"_index":373,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{}}}],["monitor",{"_index":944,"title":{},"body":{"interfaces/Column-1.html":{}}}],["more",{"_index":486,"title":{},"body":{"interfaces/Column.html":{},"index.html":{}}}],["move",{"_index":497,"title":{},"body":{"interfaces/Column.html":{},"components/LoginComponent.html":{}}}],["moveto",{"_index":2081,"title":{},"body":{"components/LoginComponent.html":{}}}],["mr",{"_index":2678,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mrs",{"_index":2679,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ms",{"_index":2681,"title":{},"body":{"miscellaneous/variables.html":{}}}],["multi",{"_index":367,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{}}}],["multiple",{"_index":386,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"injectables/SEOService.html":{}}}],["multiselectmodule",{"_index":2402,"title":{},"body":{"modules/UserModule.html":{}}}],["n/a",{"_index":270,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{}}}],["name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"index.html":{}}}],["named",{"_index":246,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"injectables/CommonService.html":{}}}],["names",{"_index":243,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"injectables/CommonService.html":{}}}],["national",{"_index":2312,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["navigate",{"_index":1475,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/SearchAlertComponent.html":{},"index.html":{}}}],["navigates",{"_index":1473,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["navigation",{"_index":1427,"title":{},"body":{"injectables/EventService.html":{},"components/HomeComponent.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["navigator.geolocation",{"_index":1961,"title":{},"body":{"components/IndexComponent.html":{}}}],["navigator.geolocation.getcurrentposition((position",{"_index":1962,"title":{},"body":{"components/IndexComponent.html":{}}}],["navigator.serviceworker",{"_index":2064,"title":{},"body":{"components/LoginComponent.html":{}}}],["navigator.useragent.indexof('chrome",{"_index":307,"title":{},"body":{"injectables/CSVService.html":{}}}],["navigator.useragent.indexof('safari",{"_index":306,"title":{},"body":{"injectables/CSVService.html":{}}}],["navuseroptionevent",{"_index":1434,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["nb",{"_index":803,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["necessaery",{"_index":1649,"title":{},"body":{"components/HomeComponent.html":{}}}],["necessary",{"_index":1622,"title":{},"body":{"components/HomeComponent.html":{}}}],["need",{"_index":493,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"index.html":{}}}],["need_response",{"_index":938,"title":{},"body":{"interfaces/Column-1.html":{}}}],["needed",{"_index":1287,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["network",{"_index":1805,"title":{},"body":{"injectables/HttpService.html":{}}}],["new",{"_index":298,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["new_password",{"_index":2165,"title":{},"body":{"components/ProfileComponent.html":{}}}],["newfoundland",{"_index":806,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["newlocation",{"_index":1966,"title":{},"body":{"components/IndexComponent.html":{}}}],["newobjectid",{"_index":1334,"title":{},"body":{"injectables/CommonService.html":{}}}],["newx",{"_index":1236,"title":{},"body":{"interfaces/Column-1.html":{}}}],["newy",{"_index":1239,"title":{},"body":{"interfaces/Column-1.html":{}}}],["next",{"_index":2728,"title":{},"body":{"miscellaneous/variables.html":{}}}],["next(req).pipe",{"_index":2730,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ng",{"_index":2586,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":2373,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["ngondestroy",{"_index":1418,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["ngoninit",{"_index":520,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["ngx",{"_index":788,"title":{},"body":{"interfaces/Column-1.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["nl",{"_index":808,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["non",{"_index":1363,"title":{},"body":{"injectables/CommonService.html":{}}}],["none",{"_index":2654,"title":{},"body":{"miscellaneous/variables.html":{}}}],["normal",{"_index":371,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{}}}],["northwest",{"_index":809,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["not_assign",{"_index":844,"title":{},"body":{"interfaces/Column-1.html":{}}}],["note",{"_index":402,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/RegisterComponent.html":{}}}],["notification",{"_index":1423,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["notificationevent",{"_index":1435,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["notifications",{"_index":1862,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["nova",{"_index":812,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["now",{"_index":1594,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["ns",{"_index":814,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["nt",{"_index":811,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["nu",{"_index":816,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["null",{"_index":269,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{},"injectables/LocalStorageService.html":{},"components/RegisterComponent.html":{}}}],["number",{"_index":257,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/typealiases.html":{}}}],["number(data.phone!.replace",{"_index":1134,"title":{},"body":{"interfaces/Column-1.html":{}}}],["number(data.phone.replace",{"_index":2242,"title":{},"body":{"components/RegisterComponent.html":{}}}],["numbers",{"_index":281,"title":{},"body":{"injectables/CSVService.html":{}}}],["numeric",{"_index":1385,"title":{},"body":{"injectables/CommonService.html":{},"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{}}}],["numerically",{"_index":1388,"title":{},"body":{"injectables/CommonService.html":{}}}],["nunavut",{"_index":815,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["obj",{"_index":331,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["obj.header",{"_index":352,"title":{},"body":{"injectables/CSVService.html":{}}}],["obj.label",{"_index":351,"title":{},"body":{"injectables/CSVService.html":{}}}],["obj.url",{"_index":348,"title":{},"body":{"injectables/CSVService.html":{}}}],["obj[title",{"_index":332,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["objdata",{"_index":224,"title":{},"body":{"injectables/CSVService.html":{}}}],["objdb",{"_index":1127,"title":{},"body":{"interfaces/Column-1.html":{}}}],["object",{"_index":126,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["object.keys(car).foreach((key",{"_index":600,"title":{},"body":{"interfaces/Column.html":{}}}],["object.keys(currentuser).length",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(this.arrcarlist?.data[0]).map((key",{"_index":578,"title":{},"body":{"interfaces/Column.html":{}}}],["objectid",{"_index":1409,"title":{},"body":{"injectables/CommonService.html":{}}}],["objects",{"_index":207,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"injectables/CommonService.html":{},"injectables/HttpService.html":{}}}],["objstoretimelinedetail",{"_index":937,"title":{},"body":{"interfaces/Column-1.html":{}}}],["observable",{"_index":1762,"title":{},"body":{"injectables/HttpService.html":{}}}],["obtained",{"_index":1088,"title":{},"body":{"interfaces/Column-1.html":{}}}],["obtaining",{"_index":1957,"title":{},"body":{"components/IndexComponent.html":{}}}],["occur",{"_index":1754,"title":{},"body":{"injectables/HttpService.html":{}}}],["occurred",{"_index":1825,"title":{},"body":{"injectables/HttpService.html":{}}}],["occurs",{"_index":1313,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/RegisterComponent.html":{}}}],["offline",{"_index":495,"title":{},"body":{"interfaces/Column.html":{}}}],["og",{"_index":2272,"title":{},"body":{"injectables/SEOService.html":{}}}],["og:description",{"_index":2278,"title":{},"body":{"injectables/SEOService.html":{}}}],["og:site_name",{"_index":2279,"title":{},"body":{"injectables/SEOService.html":{}}}],["og:title",{"_index":2277,"title":{},"body":{"injectables/SEOService.html":{}}}],["og:type",{"_index":2296,"title":{},"body":{"injectables/SEOService.html":{}}}],["old",{"_index":1115,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["old_password",{"_index":2164,"title":{},"body":{"components/ProfileComponent.html":{}}}],["once",{"_index":1219,"title":{},"body":{"interfaces/Column-1.html":{}}}],["onchange",{"_index":409,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["onchangemake",{"_index":1616,"title":{},"body":{"components/HomeComponent.html":{}}}],["onchangemake(event",{"_index":1625,"title":{},"body":{"components/HomeComponent.html":{}}}],["onclearform",{"_index":2049,"title":{},"body":{"components/LoginComponent.html":{}}}],["onclickalert",{"_index":2109,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["onclickalert(id",{"_index":2116,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["onclickalertsubscribe",{"_index":2304,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["onclickalertsubscribe(id",{"_index":2319,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["onclickfavouritevehicle",{"_index":1453,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["onclickfavouritevehicle(id",{"_index":1471,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["oncloseotppopup",{"_index":1538,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["ondestroy",{"_index":1439,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["one",{"_index":130,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/INotification.html":{},"components/ProfileComponent.html":{},"injectables/SEOService.html":{}}}],["onforgetpasswordsubmit",{"_index":1539,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["oninit",{"_index":423,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/ProfileComponent.html":{}}}],["oninitvalues",{"_index":1617,"title":{},"body":{"components/HomeComponent.html":{},"components/IndexComponent.html":{}}}],["online",{"_index":900,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{}}}],["onloginsubmit",{"_index":2050,"title":{},"body":{"components/LoginComponent.html":{}}}],["onlogout",{"_index":110,"title":{},"body":{"injectables/AuthService.html":{}}}],["onlogoutuser",{"_index":1849,"title":{},"body":{"components/IndexComponent.html":{}}}],["onregistersubmit",{"_index":2209,"title":{},"body":{"components/RegisterComponent.html":{}}}],["onremovealert",{"_index":2110,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["onremovealert(event",{"_index":2119,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["onremovealertsubscribe",{"_index":2305,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["onremovealertsubscribe(event",{"_index":2325,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["onremovefavourite",{"_index":1454,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["onremovefavourite(event",{"_index":1476,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["onsentotpemail",{"_index":1540,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["onsubmittimelineresponse",{"_index":1315,"title":{},"body":{"interfaces/Column-1.html":{}}}],["ontario",{"_index":817,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["onupload(event",{"_index":1185,"title":{},"body":{"interfaces/Column-1.html":{}}}],["onverifyotp",{"_index":1541,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["open",{"_index":309,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{},"injectables/SEOService.html":{}}}],["openforeditstore(id",{"_index":991,"title":{},"body":{"interfaces/Column-1.html":{}}}],["opening",{"_index":1100,"title":{},"body":{"interfaces/Column-1.html":{}}}],["opens",{"_index":986,"title":{},"body":{"interfaces/Column-1.html":{}}}],["openstoretimelinedetail(data",{"_index":1294,"title":{},"body":{"interfaces/Column-1.html":{}}}],["opentimelineresposedialog",{"_index":1308,"title":{},"body":{"interfaces/Column-1.html":{}}}],["openviewdialog(data",{"_index":1280,"title":{},"body":{"interfaces/Column-1.html":{}}}],["operating",{"_index":1264,"title":{},"body":{"interfaces/Column-1.html":{}}}],["operation",{"_index":895,"title":{},"body":{"interfaces/Column-1.html":{}}}],["operators",{"_index":1766,"title":{},"body":{"injectables/HttpService.html":{}}}],["option",{"_index":1428,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{}}}],["option(s",{"_index":2314,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["optional",{"_index":117,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["options",{"_index":1884,"title":{},"body":{"components/IndexComponent.html":{}}}],["orange",{"_index":842,"title":{},"body":{"interfaces/Column-1.html":{}}}],["original",{"_index":1210,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/CommonService.html":{}}}],["otherwise",{"_index":133,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{}}}],["otp",{"_index":1544,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["out",{"_index":138,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column-1.html":{},"modules/UserModule.html":{},"index.html":{},"overview.html":{}}}],["output",{"_index":268,"title":{},"body":{"injectables/CSVService.html":{},"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["overridden",{"_index":1804,"title":{},"body":{"injectables/HttpService.html":{}}}],["overview",{"_index":2609,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":769,"title":{},"body":{"interfaces/Column.html":{}}}],["p1",{"_index":1393,"title":{},"body":{"injectables/CommonService.html":{}}}],["package",{"_index":2552,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["page",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["page's",{"_index":2265,"title":{},"body":{"injectables/SEOService.html":{}}}],["pagenotfoundcomponent",{"_index":75,"title":{"components/PageNotFoundComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["pages",{"_index":754,"title":{},"body":{"interfaces/Column.html":{}}}],["paginate",{"_index":545,"title":{},"body":{"interfaces/Column.html":{}}}],["pagination",{"_index":524,"title":{},"body":{"interfaces/Column.html":{}}}],["paginatormodule",{"_index":2432,"title":{},"body":{"modules/UserModule.html":{}}}],["pair",{"_index":1430,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["panel",{"_index":2086,"title":{},"body":{"components/LoginComponent.html":{}}}],["panelmenumodule",{"_index":2438,"title":{},"body":{"modules/UserModule.html":{}}}],["panelmodule",{"_index":2404,"title":{},"body":{"modules/UserModule.html":{}}}],["param",{"_index":322,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/PriceAlertComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["parameter",{"_index":2324,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["parameters",{"_index":116,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["part",{"_index":1467,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["part_time",{"_index":2687,"title":{},"body":{"miscellaneous/variables.html":{}}}],["passage",{"_index":1707,"title":{},"body":{"components/HomeComponent.html":{}}}],["passages",{"_index":1691,"title":{},"body":{"components/HomeComponent.html":{}}}],["passed",{"_index":1637,"title":{},"body":{"components/HomeComponent.html":{}}}],["passing",{"_index":2322,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["password",{"_index":1516,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["password'},{'name",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["password.component.html",{"_index":1530,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.scss",{"_index":1531,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts",{"_index":1514,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["password.component.ts:103",{"_index":1552,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:141",{"_index":1548,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:33",{"_index":1562,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:34",{"_index":1558,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:35",{"_index":1560,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:36",{"_index":1561,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:37",{"_index":1559,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:40",{"_index":1557,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:42",{"_index":1542,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:59",{"_index":1543,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password.component.ts:77",{"_index":1550,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["password/forget",{"_index":1513,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["passwordmodule",{"_index":1522,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["patch",{"_index":1214,"title":{},"body":{"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"injectables/HttpService.html":{}}}],["patch(url",{"_index":1785,"title":{},"body":{"injectables/HttpService.html":{}}}],["path",{"_index":1129,"title":{},"body":{"interfaces/Column-1.html":{},"modules/UserRoutingModule.html":{}}}],["pattern",{"_index":391,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["pe",{"_index":823,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["pending",{"_index":2080,"title":{},"body":{"components/LoginComponent.html":{}}}],["per",{"_index":412,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"components/ProfileComponent.html":{}}}],["perfect",{"_index":2355,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["performance",{"_index":906,"title":{},"body":{"interfaces/Column-1.html":{}}}],["performing",{"_index":1872,"title":{},"body":{"components/IndexComponent.html":{}}}],["performs",{"_index":143,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["permanent",{"_index":2675,"title":{},"body":{"miscellaneous/variables.html":{}}}],["permenent_resident",{"_index":2677,"title":{},"body":{"miscellaneous/variables.html":{}}}],["person",{"_index":2229,"title":{},"body":{"components/RegisterComponent.html":{},"modules/UserRoutingModule.html":{}}}],["perticular",{"_index":455,"title":{},"body":{"interfaces/Column.html":{}}}],["phone",{"_index":292,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["photo",{"_index":693,"title":{},"body":{"interfaces/Column.html":{}}}],["photo_date",{"_index":718,"title":{},"body":{"interfaces/Column.html":{}}}],["photos",{"_index":706,"title":{},"body":{"interfaces/Column.html":{}}}],["pi",{"_index":764,"title":{},"body":{"interfaces/Column.html":{},"components/IndexComponent.html":{}}}],["pin",{"_index":1079,"title":{},"body":{"interfaces/Column-1.html":{}}}],["pipe",{"_index":1814,"title":{},"body":{"injectables/HttpService.html":{}}}],["pixels",{"_index":1238,"title":{},"body":{"interfaces/Column-1.html":{}}}],["place",{"_index":2075,"title":{},"body":{"components/LoginComponent.html":{}}}],["placed",{"_index":484,"title":{},"body":{"interfaces/Column.html":{}}}],["placeholder",{"_index":379,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["placeholder(minimum",{"_index":1509,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["platform",{"_index":2018,"title":{},"body":{"injectables/LocalStorageService.html":{},"index.html":{}}}],["platform_id",{"_index":1801,"title":{},"body":{"injectables/HttpService.html":{},"components/IndexComponent.html":{}}}],["platformid",{"_index":1851,"title":{},"body":{"components/IndexComponent.html":{}}}],["point",{"_index":1002,"title":{},"body":{"interfaces/Column-1.html":{}}}],["pop",{"_index":2212,"title":{},"body":{"components/RegisterComponent.html":{}}}],["populates",{"_index":973,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["populating",{"_index":2153,"title":{},"body":{"components/ProfileComponent.html":{}}}],["popup",{"_index":1082,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{}}}],["position",{"_index":629,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/IndexComponent.html":{}}}],["position.coords.latitude",{"_index":1964,"title":{},"body":{"components/IndexComponent.html":{}}}],["position.coords.longitude",{"_index":1965,"title":{},"body":{"components/IndexComponent.html":{}}}],["possible",{"_index":1302,"title":{},"body":{"interfaces/Column-1.html":{}}}],["post",{"_index":1311,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["post(url",{"_index":1788,"title":{},"body":{"injectables/HttpService.html":{}}}],["postal",{"_index":958,"title":{},"body":{"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["postal_code",{"_index":912,"title":{},"body":{"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/ProfileComponent.html":{}}}],["postrxjs",{"_index":1744,"title":{},"body":{"injectables/HttpService.html":{}}}],["postrxjs(url",{"_index":1790,"title":{},"body":{"injectables/HttpService.html":{}}}],["postwithoutsideurl",{"_index":1745,"title":{},"body":{"injectables/HttpService.html":{}}}],["postwithoutsideurl(url",{"_index":1792,"title":{},"body":{"injectables/HttpService.html":{}}}],["pre",{"_index":1123,"title":{},"body":{"interfaces/Column-1.html":{},"miscellaneous/variables.html":{}}}],["predefined",{"_index":641,"title":{},"body":{"interfaces/Column.html":{}}}],["preferred",{"_index":2264,"title":{},"body":{"injectables/SEOService.html":{}}}],["prepares",{"_index":527,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["preparing",{"_index":506,"title":{},"body":{"interfaces/Column.html":{}}}],["prequalify",{"_index":79,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["prequalifyloancomponent",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["prevent",{"_index":587,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"interfaces/INotification.html":{}}}],["prevents",{"_index":2121,"title":{},"body":{"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["previous",{"_index":2097,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["previously",{"_index":1553,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["price",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["price.car[0].asking_price",{"_index":2134,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["price.car[0].name",{"_index":2132,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["price.car[0].vin_number",{"_index":2133,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["price/${id}`).then((response",{"_index":2129,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["price/user').then((response",{"_index":2126,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["pricealertcomponent",{"_index":81,"title":{"components/PriceAlertComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["primary",{"_index":626,"title":{},"body":{"interfaces/Column.html":{}}}],["primeflex",{"_index":2569,"title":{},"body":{"dependencies.html":{}}}],["primeicons",{"_index":2571,"title":{},"body":{"dependencies.html":{}}}],["primeng",{"_index":398,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"dependencies.html":{}}}],["primeng/animateonscroll",{"_index":1572,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["primeng/api",{"_index":436,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{}}}],["primeng/autocomplete",{"_index":2417,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/avatar",{"_index":2429,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/badge",{"_index":2431,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/button",{"_index":1567,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["primeng/calendar",{"_index":2407,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/checkbox",{"_index":2415,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/confirmdialog",{"_index":2398,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/dialog",{"_index":1568,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["primeng/divider",{"_index":1565,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["primeng/dropdown",{"_index":1643,"title":{},"body":{"components/HomeComponent.html":{},"modules/UserModule.html":{}}}],["primeng/fieldset",{"_index":2424,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/floatlabel",{"_index":2441,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/galleria",{"_index":2400,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/inputgroup",{"_index":2411,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/inputgroupaddon",{"_index":2413,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/inputmask",{"_index":2231,"title":{},"body":{"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["primeng/inputnumber",{"_index":2427,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/inputotp",{"_index":1569,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["primeng/inputswitch",{"_index":440,"title":{},"body":{"interfaces/Column.html":{},"modules/UserModule.html":{}}}],["primeng/inputtext",{"_index":1564,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["primeng/inputtextarea",{"_index":2419,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/keyfilter",{"_index":2409,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/menu",{"_index":1917,"title":{},"body":{"components/IndexComponent.html":{},"modules/UserModule.html":{}}}],["primeng/multiselect",{"_index":2403,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/paginator",{"_index":2433,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/panel",{"_index":2405,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/panelmenu",{"_index":2439,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/password",{"_index":1563,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["primeng/scroller",{"_index":2437,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/selectbutton",{"_index":1566,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["primeng/sidebar",{"_index":2396,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/skeleton",{"_index":2421,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/styleclass",{"_index":1918,"title":{},"body":{"components/IndexComponent.html":{},"modules/UserModule.html":{}}}],["primeng/table",{"_index":438,"title":{},"body":{"interfaces/Column.html":{},"modules/UserModule.html":{}}}],["primeng/tabview",{"_index":1644,"title":{},"body":{"components/HomeComponent.html":{},"modules/UserModule.html":{}}}],["primeng/timeline",{"_index":2435,"title":{},"body":{"modules/UserModule.html":{}}}],["primeng/toast",{"_index":1571,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["primng",{"_index":470,"title":{},"body":{"interfaces/Column.html":{}}}],["prince",{"_index":820,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["printing",{"_index":1716,"title":{},"body":{"components/HomeComponent.html":{}}}],["private",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["procedure",{"_index":1888,"title":{},"body":{"components/IndexComponent.html":{}}}],["proceeding",{"_index":747,"title":{},"body":{"interfaces/Column.html":{}}}],["process",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["processed",{"_index":274,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{}}}],["processes",{"_index":522,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/HttpService.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["processing",{"_index":1102,"title":{},"body":{"interfaces/Column-1.html":{},"components/PriceAlertComponent.html":{}}}],["produce",{"_index":1365,"title":{},"body":{"injectables/CommonService.html":{}}}],["product",{"_index":2297,"title":{},"body":{"injectables/SEOService.html":{}}}],["production",{"_index":2699,"title":{},"body":{"miscellaneous/variables.html":{}}}],["prof",{"_index":2683,"title":{},"body":{"miscellaneous/variables.html":{}}}],["professional",{"_index":1723,"title":{},"body":{"components/HomeComponent.html":{}}}],["profile",{"_index":743,"title":{},"body":{"interfaces/Column.html":{},"components/ProfileComponent.html":{},"modules/UserRoutingModule.html":{}}}],["profile'},{'name",{"_index":85,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["profile.component.html",{"_index":2140,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile.component.scss",{"_index":2141,"title":{},"body":{"components/ProfileComponent.html":{}}}],["profile/profile.component",{"_index":2422,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["profilecomponent",{"_index":84,"title":{"components/ProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["progress",{"_index":2215,"title":{},"body":{"components/RegisterComponent.html":{}}}],["project",{"_index":2581,"title":{},"body":{"index.html":{}}}],["projectid",{"_index":2711,"title":{},"body":{"miscellaneous/variables.html":{}}}],["promise",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["promise((res",{"_index":1243,"title":{},"body":{"interfaces/Column-1.html":{}}}],["prompts",{"_index":745,"title":{},"body":{"interfaces/Column.html":{}}}],["propagation",{"_index":1480,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{}}}],["properties",{"_index":23,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"properties.html":{}}}],["property",{"_index":131,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/HomeComponent.html":{},"injectables/LocalStorageService.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["provideanimations",{"_index":2633,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provideclienthydration",{"_index":2631,"title":{},"body":{"miscellaneous/variables.html":{}}}],["provided",{"_index":215,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"injectables/SEOService.html":{}}}],["providedin",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"injectables/SEOService.html":{},"miscellaneous/variables.html":{}}}],["providefirebaseapp",{"_index":2634,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providehttpclient",{"_index":2392,"title":{},"body":{"modules/UserModule.html":{}}}],["providehttpclient(withinterceptors([errorinterceptor",{"_index":2444,"title":{},"body":{"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["providemessaging",{"_index":2636,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":2630,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1515,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":1782,"title":{},"body":{"injectables/HttpService.html":{}}}],["provideserverrendering",{"_index":2646,"title":{},"body":{"miscellaneous/variables.html":{}}}],["public",{"_index":1979,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LocalStorageService.html":{}}}],["publish_to",{"_index":462,"title":{},"body":{"interfaces/Column.html":{}}}],["purple",{"_index":837,"title":{},"body":{"interfaces/Column-1.html":{}}}],["purposes.\\n\\ninventory",{"_index":483,"title":{},"body":{"interfaces/Column.html":{}}}],["push",{"_index":1861,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["put",{"_index":1796,"title":{},"body":{"injectables/HttpService.html":{}}}],["puturl",{"_index":1746,"title":{},"body":{"injectables/HttpService.html":{}}}],["puturl(url",{"_index":1794,"title":{},"body":{"injectables/HttpService.html":{}}}],["qc",{"_index":819,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["quebec",{"_index":818,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["query",{"_index":1635,"title":{},"body":{"components/HomeComponent.html":{}}}],["queryparams",{"_index":1675,"title":{},"body":{"components/HomeComponent.html":{}}}],["quickly",{"_index":2356,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["quite",{"_index":2136,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["quotes",{"_index":272,"title":{},"body":{"injectables/CSVService.html":{}}}],["random",{"_index":312,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["randomised",{"_index":1699,"title":{},"body":{"components/HomeComponent.html":{}}}],["raw",{"_index":1778,"title":{},"body":{"injectables/HttpService.html":{}}}],["react",{"_index":1995,"title":{},"body":{"injectables/LoaderService.html":{}}}],["reactiveformsmodule",{"_index":1517,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["read",{"_index":1218,"title":{},"body":{"interfaces/Column-1.html":{}}}],["reader",{"_index":1222,"title":{},"body":{"interfaces/Column-1.html":{}}}],["reader.onload",{"_index":1223,"title":{},"body":{"interfaces/Column-1.html":{}}}],["reader.readasdataurl(input",{"_index":1228,"title":{},"body":{"interfaces/Column-1.html":{}}}],["readonly",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["reads",{"_index":1209,"title":{},"body":{"interfaces/Column-1.html":{}}}],["readurl(input",{"_index":1221,"title":{},"body":{"interfaces/Column-1.html":{}}}],["ready",{"_index":508,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["receive",{"_index":902,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/HttpService.html":{}}}],["received",{"_index":2220,"title":{},"body":{"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["record",{"_index":858,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{}}}],["red",{"_index":839,"title":{},"body":{"interfaces/Column-1.html":{}}}],["redirect",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["redirected",{"_index":536,"title":{},"body":{"interfaces/Column.html":{}}}],["redirecting",{"_index":1890,"title":{},"body":{"components/IndexComponent.html":{}}}],["redirection",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"components/LoginComponent.html":{}}}],["redirects",{"_index":741,"title":{},"body":{"interfaces/Column.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{}}}],["redirecttoaddcar(event",{"_index":755,"title":{},"body":{"interfaces/Column.html":{}}}],["redirecvt",{"_index":2083,"title":{},"body":{"components/LoginComponent.html":{}}}],["reference",{"_index":2610,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":1868,"title":{},"body":{"components/IndexComponent.html":{}}}],["refresh",{"_index":1491,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/IndexComponent.html":{}}}],["refreshed",{"_index":614,"title":{},"body":{"interfaces/Column.html":{}}}],["refreshes",{"_index":610,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/IndexComponent.html":{}}}],["regex",{"_index":392,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["regioncode",{"_index":1059,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["register",{"_index":2202,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register'},{'name",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["register(\"/assets/firebase",{"_index":2065,"title":{},"body":{"components/LoginComponent.html":{}}}],["register.component.html",{"_index":2204,"title":{},"body":{"components/RegisterComponent.html":{}}}],["register.component.scss",{"_index":2205,"title":{},"body":{"components/RegisterComponent.html":{}}}],["registercomponent",{"_index":86,"title":{"components/RegisterComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["registers",{"_index":2055,"title":{},"body":{"components/LoginComponent.html":{}}}],["registration",{"_index":2214,"title":{},"body":{"components/RegisterComponent.html":{}}}],["rej",{"_index":1244,"title":{},"body":{"interfaces/Column-1.html":{}}}],["rej(error",{"_index":1258,"title":{},"body":{"interfaces/Column-1.html":{}}}],["reject",{"_index":771,"title":{},"body":{"interfaces/Column.html":{}}}],["rejectbuttonstyleclass",{"_index":768,"title":{},"body":{"interfaces/Column.html":{}}}],["rejected",{"_index":838,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/HttpService.html":{}}}],["rejects",{"_index":1241,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{}}}],["rel",{"_index":2293,"title":{},"body":{"injectables/SEOService.html":{}}}],["related",{"_index":970,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"miscellaneous/variables.html":{}}}],["relevant",{"_index":703,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["relies",{"_index":1900,"title":{},"body":{"components/IndexComponent.html":{}}}],["reload",{"_index":1955,"title":{},"body":{"components/IndexComponent.html":{},"index.html":{}}}],["reloading",{"_index":1891,"title":{},"body":{"components/IndexComponent.html":{}}}],["remains",{"_index":485,"title":{},"body":{"interfaces/Column.html":{}}}],["remarks",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{},"components/IndexComponent.html":{},"components/RegisterComponent.html":{}}}],["remote",{"_index":794,"title":{},"body":{"interfaces/Column-1.html":{}}}],["remote_services",{"_index":934,"title":{},"body":{"interfaces/Column-1.html":{}}}],["removal",{"_index":1481,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{}}}],["remove",{"_index":418,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/FavouriteVehicleComponent.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"injectables/LocalStorageService.html":{}}}],["remove(key",{"_index":2021,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["removed",{"_index":417,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/CommonElement.html":{},"components/FavouriteVehicleComponent.html":{},"interfaces/LabelValueData.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["removed.\\n\\ninventory",{"_index":503,"title":{},"body":{"interfaces/Column.html":{}}}],["removes",{"_index":151,"title":{},"body":{"injectables/AuthService.html":{},"components/FavouriteVehicleComponent.html":{},"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["removing",{"_index":1889,"title":{},"body":{"components/IndexComponent.html":{}}}],["rent",{"_index":2669,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replace",{"_index":1391,"title":{},"body":{"injectables/CommonService.html":{}}}],["replacestringtocapitalize",{"_index":1335,"title":{},"body":{"injectables/CommonService.html":{}}}],["replacestringtocapitalize(key",{"_index":1355,"title":{},"body":{"injectables/CommonService.html":{}}}],["replacestringtolowercase",{"_index":1336,"title":{},"body":{"injectables/CommonService.html":{}}}],["replacestringtolowercase(key",{"_index":1372,"title":{},"body":{"injectables/CommonService.html":{}}}],["replacing",{"_index":1360,"title":{},"body":{"injectables/CommonService.html":{}}}],["reporting",{"_index":482,"title":{},"body":{"interfaces/Column.html":{}}}],["representation",{"_index":288,"title":{},"body":{"injectables/CSVService.html":{},"components/SearchAlertComponent.html":{}}}],["representations",{"_index":262,"title":{},"body":{"injectables/CSVService.html":{}}}],["representing",{"_index":229,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["represents",{"_index":251,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{},"injectables/SEOService.html":{}}}],["req",{"_index":2727,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":148,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["requestbody",{"_index":1058,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["requestforuserlocation",{"_index":1850,"title":{},"body":{"components/IndexComponent.html":{}}}],["requests",{"_index":1875,"title":{},"body":{"components/IndexComponent.html":{},"miscellaneous/variables.html":{}}}],["required",{"_index":390,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["requirement",{"_index":1286,"title":{},"body":{"interfaces/Column-1.html":{}}}],["requirements",{"_index":708,"title":{},"body":{"interfaces/Column.html":{}}}],["res(data",{"_index":1256,"title":{},"body":{"interfaces/Column-1.html":{}}}],["reset",{"_index":1174,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["resetform",{"_index":1268,"title":{},"body":{"interfaces/Column-1.html":{}}}],["resets",{"_index":1207,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["resetting",{"_index":2053,"title":{},"body":{"components/LoginComponent.html":{}}}],["resident",{"_index":2676,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolves",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["response",{"_index":862,"title":{},"body":{"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["response.blob",{"_index":1038,"title":{},"body":{"interfaces/Column-1.html":{}}}],["response.result.address",{"_index":1071,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["response.result.geocode.location.latitude",{"_index":1073,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["response.result.geocode.location.longitude",{"_index":1074,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["response.success",{"_index":1141,"title":{},"body":{"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["response?.success",{"_index":1581,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["responses",{"_index":1307,"title":{},"body":{"interfaces/Column-1.html":{}}}],["responsetype",{"_index":1812,"title":{},"body":{"injectables/HttpService.html":{}}}],["responsible",{"_index":1425,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{},"components/RegisterComponent.html":{}}}],["responsive",{"_index":1882,"title":{},"body":{"components/IndexComponent.html":{}}}],["responsiveoptions",{"_index":468,"title":{},"body":{"interfaces/Column.html":{}}}],["respose",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["respose.success",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["resposive",{"_index":469,"title":{},"body":{"interfaces/Column.html":{}}}],["result",{"_index":383,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/ForgetPasswordComponent.html":{},"interfaces/LabelValueData.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["result.data",{"_index":2079,"title":{},"body":{"components/LoginComponent.html":{}}}],["result.success",{"_index":620,"title":{},"body":{"interfaces/Column.html":{},"components/LoginComponent.html":{}}}],["result?.success",{"_index":1593,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["resulting",{"_index":688,"title":{},"body":{"interfaces/Column.html":{},"injectables/CommonService.html":{}}}],["results",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retired",{"_index":2688,"title":{},"body":{"miscellaneous/variables.html":{}}}],["retrieval",{"_index":1462,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["retrieve",{"_index":530,"title":{},"body":{"interfaces/Column.html":{},"injectables/HttpService.html":{},"components/PriceAlertComponent.html":{}}}],["retrieved",{"_index":534,"title":{},"body":{"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{}}}],["retrieves",{"_index":124,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"injectables/LoaderService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["retrieving",{"_index":1429,"title":{},"body":{"injectables/EventService.html":{},"components/HomeComponent.html":{},"interfaces/INotification.html":{}}}],["return",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["returned",{"_index":285,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{},"injectables/HttpService.html":{}}}],["returns",{"_index":132,"title":{},"body":{"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["role",{"_index":1320,"title":{},"body":{"interfaces/Column-1.html":{}}}],["root",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"injectables/SEOService.html":{},"miscellaneous/variables.html":{}}}],["root'},{'name",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["route",{"_index":1636,"title":{},"body":{"components/HomeComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["router",{"_index":425,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["router.navigate(['/login",{"_index":2749,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigate(['/user/store",{"_index":2752,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.navigatebyurl('/server",{"_index":2753,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.parseurl('/error/400",{"_index":2698,"title":{},"body":{"miscellaneous/variables.html":{}}}],["router.parseurl('/login",{"_index":2643,"title":{},"body":{"miscellaneous/variables.html":{}}}],["routerlink",{"_index":1930,"title":{},"body":{"components/IndexComponent.html":{}}}],["routermodule",{"_index":1521,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserRoutingModule.html":{}}}],["routermodule.forchild(routes",{"_index":2455,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["routeroutlet",{"_index":17,"title":{},"body":{"components/AppComponent.html":{}}}],["routes",{"_index":2447,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["routing.module",{"_index":2374,"title":{},"body":{"modules/UserModule.html":{}}}],["routing.module.ts",{"_index":2446,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["row",{"_index":219,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["row.field",{"_index":681,"title":{},"body":{"interfaces/Column.html":{}}}],["row.header",{"_index":680,"title":{},"body":{"interfaces/Column.html":{}}}],["row.selected).map((row",{"_index":679,"title":{},"body":{"interfaces/Column.html":{}}}],["row.slice(0",{"_index":338,"title":{},"body":{"injectables/CSVService.html":{}}}],["rows",{"_index":235,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{}}}],["row}\\r\\n",{"_index":339,"title":{},"body":{"injectables/CSVService.html":{}}}],["run",{"_index":2585,"title":{},"body":{"index.html":{}}}],["running",{"_index":2597,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":1765,"title":{},"body":{"injectables/HttpService.html":{},"dependencies.html":{}}}],["s3",{"_index":1119,"title":{},"body":{"interfaces/Column-1.html":{}}}],["saervice",{"_index":1984,"title":{},"body":{"components/LoaderComponent.html":{}}}],["safari",{"_index":308,"title":{},"body":{"injectables/CSVService.html":{}}}],["same",{"_index":2199,"title":{},"body":{"components/ProfileComponent.html":{},"injectables/SEOService.html":{}}}],["sanitizer",{"_index":939,"title":{},"body":{"interfaces/Column-1.html":{}}}],["saskatchewan",{"_index":824,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["saturday",{"_index":923,"title":{},"body":{"interfaces/Column-1.html":{}}}],["save",{"_index":311,"title":{},"body":{"injectables/CSVService.html":{},"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["saved",{"_index":1493,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["saw",{"_index":1502,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["scaffolding",{"_index":2591,"title":{},"body":{"index.html":{}}}],["scotia",{"_index":813,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["screen",{"_index":1928,"title":{},"body":{"components/IndexComponent.html":{}}}],["screens",{"_index":1881,"title":{},"body":{"components/IndexComponent.html":{}}}],["scrollermodule",{"_index":2436,"title":{},"body":{"modules/UserModule.html":{}}}],["search",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"miscellaneous/variables.html":{}}}],["search'},{'name",{"_index":91,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["searchalertcomponent",{"_index":88,"title":{"components/SearchAlertComponent.html":{}},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["searchcomponent",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["searches",{"_index":657,"title":{},"body":{"interfaces/Column.html":{},"components/SearchAlertComponent.html":{}}}],["searching",{"_index":647,"title":{},"body":{"interfaces/Column.html":{}}}],["seasonal",{"_index":2692,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secondary",{"_index":623,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["seconds",{"_index":1348,"title":{},"body":{"injectables/CommonService.html":{}}}],["section",{"_index":500,"title":{},"body":{"interfaces/Column.html":{}}}],["select",{"_index":361,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{}}}],["selectbuttonmodule",{"_index":1525,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["selected",{"_index":457,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/SearchAlertComponent.html":{}}}],["selectedcolumns",{"_index":456,"title":{},"body":{"interfaces/Column.html":{}}}],["selection",{"_index":368,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"components/HomeComponent.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{}}}],["selector",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["sell",{"_index":1720,"title":{},"body":{"components/HomeComponent.html":{}}}],["send",{"_index":616,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["sending",{"_index":1107,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["sends",{"_index":146,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["sent",{"_index":1319,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/RegisterComponent.html":{}}}],["seo",{"_index":2282,"title":{},"body":{"injectables/SEOService.html":{}}}],["seoservice",{"_index":2245,"title":{"injectables/SEOService.html":{}},"body":{"injectables/SEOService.html":{},"coverage.html":{}}}],["separate",{"_index":249,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["separated",{"_index":212,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{},"miscellaneous/variables.html":{}}}],["serve",{"_index":2587,"title":{},"body":{"index.html":{}}}],["server",{"_index":972,"title":{},"body":{"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"dependencies.html":{},"index.html":{}}}],["server's",{"_index":1758,"title":{},"body":{"injectables/HttpService.html":{}}}],["server_url",{"_index":1739,"title":{},"body":{"injectables/HttpService.html":{}}}],["serverconfig",{"_index":2463,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["service",{"_index":428,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["service/select",{"_index":950,"title":{},"body":{"interfaces/Column-1.html":{}}}],["services",{"_index":795,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{}}}],["serviceworkerregistration",{"_index":2072,"title":{},"body":{"components/LoginComponent.html":{}}}],["session",{"_index":1921,"title":{},"body":{"components/IndexComponent.html":{}}}],["set",{"_index":380,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"injectables/SEOService.html":{}}}],["set(key",{"_index":2023,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setarraytostring",{"_index":1337,"title":{},"body":{"injectables/CommonService.html":{}}}],["setarraytostring(data",{"_index":1374,"title":{},"body":{"injectables/CommonService.html":{}}}],["setcanonicalurl",{"_index":2247,"title":{},"body":{"injectables/SEOService.html":{}}}],["setcanonicalurl(url",{"_index":2257,"title":{},"body":{"injectables/SEOService.html":{}}}],["setcropimage(event",{"_index":1204,"title":{},"body":{"interfaces/Column-1.html":{}}}],["setloading",{"_index":1990,"title":{},"body":{"injectables/LoaderService.html":{}}}],["setloading(loading",{"_index":1996,"title":{},"body":{"injectables/LoaderService.html":{}}}],["setmetadescription",{"_index":2248,"title":{},"body":{"injectables/SEOService.html":{}}}],["setmetadescription(content",{"_index":2266,"title":{},"body":{"injectables/SEOService.html":{}}}],["setobject",{"_index":2007,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setobject(key",{"_index":2025,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["setogcontent",{"_index":2249,"title":{},"body":{"injectables/SEOService.html":{}}}],["setogcontent(title",{"_index":2269,"title":{},"body":{"injectables/SEOService.html":{}}}],["sets",{"_index":941,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"injectables/LoaderService.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{}}}],["setseopage",{"_index":2250,"title":{},"body":{"injectables/SEOService.html":{}}}],["setseopage(title",{"_index":2280,"title":{},"body":{"injectables/SEOService.html":{}}}],["settimeout",{"_index":1146,"title":{},"body":{"interfaces/Column-1.html":{}}}],["setting",{"_index":1106,"title":{},"body":{"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"injectables/SEOService.html":{}}}],["settings",{"_index":1943,"title":{},"body":{"components/IndexComponent.html":{}}}],["settitle",{"_index":2251,"title":{},"body":{"injectables/SEOService.html":{}}}],["settitle(title",{"_index":2283,"title":{},"body":{"injectables/SEOService.html":{}}}],["setup",{"_index":1874,"title":{},"body":{"components/IndexComponent.html":{}}}],["several",{"_index":1873,"title":{},"body":{"components/IndexComponent.html":{}}}],["severity",{"_index":622,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["shopping",{"_index":1931,"title":{},"body":{"components/IndexComponent.html":{}}}],["show",{"_index":453,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["showactionontimelineresponse(status",{"_index":1304,"title":{},"body":{"interfaces/Column-1.html":{}}}],["showing",{"_index":1301,"title":{},"body":{"interfaces/Column-1.html":{}}}],["shown",{"_index":752,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["sibling",{"_index":2663,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1824,"title":{},"body":{"injectables/HttpService.html":{}}}],["sidebarmodule",{"_index":2395,"title":{},"body":{"modules/UserModule.html":{}}}],["sign",{"_index":2219,"title":{},"body":{"components/RegisterComponent.html":{}}}],["signed",{"_index":1124,"title":{},"body":{"interfaces/Column-1.html":{}}}],["signin",{"_index":2062,"title":{},"body":{"components/LoginComponent.html":{}}}],["signup",{"_index":2234,"title":{},"body":{"components/RegisterComponent.html":{}}}],["simple",{"_index":278,"title":{},"body":{"injectables/CSVService.html":{}}}],["simply",{"_index":1714,"title":{},"body":{"components/HomeComponent.html":{}}}],["single",{"_index":2655,"title":{},"body":{"miscellaneous/variables.html":{}}}],["site",{"_index":2274,"title":{},"body":{"injectables/SEOService.html":{}}}],["size",{"_index":1176,"title":{},"body":{"interfaces/Column-1.html":{}}}],["sk",{"_index":825,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["skeletonmodule",{"_index":2420,"title":{},"body":{"modules/UserModule.html":{}}}],["slice(data.indexof('\\n",{"_index":326,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["slightly",{"_index":1703,"title":{},"body":{"components/HomeComponent.html":{}}}],["small",{"_index":1945,"title":{},"body":{"components/IndexComponent.html":{}}}],["smaller",{"_index":1885,"title":{},"body":{"components/IndexComponent.html":{}}}],["sold",{"_index":478,"title":{},"body":{"interfaces/Column.html":{}}}],["sort",{"_index":1383,"title":{},"body":{"injectables/CommonService.html":{}}}],["sortarrayfield",{"_index":1338,"title":{},"body":{"injectables/CommonService.html":{}}}],["sortarrayfield(data",{"_index":1379,"title":{},"body":{"injectables/CommonService.html":{}}}],["sorted",{"_index":1382,"title":{},"body":{"injectables/CommonService.html":{}}}],["sorts",{"_index":1381,"title":{},"body":{"injectables/CommonService.html":{},"components/HomeComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"index.html":{}}}],["spaces",{"_index":1362,"title":{},"body":{"injectables/CommonService.html":{}}}],["special",{"_index":2309,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["specific",{"_index":275,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["specifically",{"_index":1470,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["specifications",{"_index":686,"title":{},"body":{"interfaces/Column.html":{}}}],["specified",{"_index":1229,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"injectables/HttpService.html":{}}}],["spinners",{"_index":2001,"title":{},"body":{"injectables/LoaderService.html":{}}}],["split('\\n",{"_index":327,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["spouse",{"_index":2662,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src",{"_index":1235,"title":{},"body":{"interfaces/Column-1.html":{}}}],["src/.../app.config.server.ts",{"_index":2623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../app.config.ts",{"_index":2619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../auth.guard.ts",{"_index":2620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../car.interface.ts",{"_index":2618,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../dealer",{"_index":2625,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.development.ts",{"_index":2626,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.ts",{"_index":2627,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../error.interceptor.ts",{"_index":2628,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../finance.data.ts",{"_index":2624,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../local",{"_index":2622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.server.ts",{"_index":2621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:12",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.server.ts",{"_index":2460,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.config.ts",{"_index":2464,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/dealer",{"_index":2466,"title":{},"body":{"coverage.html":{}}}],["src/app/components/forget",{"_index":1512,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1604,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:103",{"_index":1626,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:123",{"_index":1634,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:27",{"_index":1639,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:28",{"_index":1640,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:29",{"_index":1638,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:30",{"_index":1641,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:33",{"_index":1642,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:40",{"_index":1619,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:58",{"_index":1620,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:77",{"_index":1630,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/index/index.component.ts",{"_index":1837,"title":{},"body":{"components/IndexComponent.html":{},"coverage.html":{}}}],["src/app/components/index/index.component.ts:182",{"_index":1887,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:211",{"_index":1894,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:248",{"_index":1854,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:34",{"_index":1906,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:35",{"_index":1908,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:36",{"_index":1909,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:37",{"_index":1907,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:40",{"_index":1902,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:43",{"_index":1911,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:46",{"_index":1853,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:70",{"_index":1871,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/index/index.component.ts:96",{"_index":1877,"title":{},"body":{"components/IndexComponent.html":{}}}],["src/app/components/login/login.component.ts",{"_index":2045,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:111",{"_index":2052,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:34",{"_index":2057,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:40",{"_index":2051,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:62",{"_index":2054,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/page",{"_index":2088,"title":{},"body":{"components/PageNotFoundComponent.html":{},"coverage.html":{}}}],["src/app/components/prequalify",{"_index":2477,"title":{},"body":{"coverage.html":{}}}],["src/app/components/register/register.component.ts",{"_index":2201,"title":{},"body":{"components/RegisterComponent.html":{},"coverage.html":{}}}],["src/app/components/register/register.component.ts:113",{"_index":2218,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:162",{"_index":2213,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:33",{"_index":2228,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:34",{"_index":2223,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:35",{"_index":2226,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:36",{"_index":2227,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:37",{"_index":2224,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:38",{"_index":2225,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:40",{"_index":2230,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:46",{"_index":2222,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:48",{"_index":2210,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:64",{"_index":2211,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/register/register.component.ts:87",{"_index":2217,"title":{},"body":{"components/RegisterComponent.html":{}}}],["src/app/components/search/search.component.ts",{"_index":2483,"title":{},"body":{"coverage.html":{}}}],["src/app/components/vehicle",{"_index":2488,"title":{},"body":{"coverage.html":{}}}],["src/app/modules/loader/loader.component.ts",{"_index":1975,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["src/app/modules/loader/loader.component.ts:15",{"_index":1982,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/modules/loader/loader.component.ts:17",{"_index":1983,"title":{},"body":{"components/LoaderComponent.html":{}}}],["src/app/modules/user/car",{"_index":357,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/app/modules/user/favourite",{"_index":1446,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"coverage.html":{}}}],["src/app/modules/user/finance",{"_index":2502,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/modules/user/home/home.component.ts",{"_index":1727,"title":{},"body":{"components/HomeComponent-1.html":{},"coverage.html":{}}}],["src/app/modules/user/home/home.component.ts:16",{"_index":1729,"title":{},"body":{"components/HomeComponent-1.html":{}}}],["src/app/modules/user/home/home.component.ts:33",{"_index":1730,"title":{},"body":{"components/HomeComponent-1.html":{}}}],["src/app/modules/user/inquiry/inquiry.component.ts",{"_index":2517,"title":{},"body":{"coverage.html":{}}}],["src/app/modules/user/price",{"_index":2102,"title":{},"body":{"components/PriceAlertComponent.html":{},"coverage.html":{}}}],["src/app/modules/user/profile/profile.component.ts",{"_index":2139,"title":{},"body":{"components/ProfileComponent.html":{},"coverage.html":{}}}],["src/app/modules/user/profile/profile.component.ts:131",{"_index":2159,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile/profile.component.ts:156",{"_index":2156,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile/profile.component.ts:21",{"_index":2169,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile/profile.component.ts:28",{"_index":2167,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile/profile.component.ts:35",{"_index":2163,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile/profile.component.ts:43",{"_index":2161,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile/profile.component.ts:44",{"_index":2162,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile/profile.component.ts:58",{"_index":2149,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile/profile.component.ts:77",{"_index":2152,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/profile/profile.component.ts:97",{"_index":2150,"title":{},"body":{"components/ProfileComponent.html":{}}}],["src/app/modules/user/search",{"_index":2298,"title":{},"body":{"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["src/app/modules/user/store/store.component.ts",{"_index":774,"title":{},"body":{"interfaces/Column-1.html":{},"coverage.html":{}}}],["src/app/modules/user/user",{"_index":2445,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["src/app/modules/user/user.component.ts",{"_index":2526,"title":{},"body":{"coverage.html":{}}}],["src/app/modules/user/user.module.ts",{"_index":2372,"title":{},"body":{"modules/UserModule.html":{}}}],["src/app/utilities/guard/auth.guard.ts",{"_index":2529,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utilities/guard/dealer",{"_index":2531,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utilities/interceptor/error.interceptor.ts",{"_index":2533,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utilities/services/auth.service.ts",{"_index":106,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/app/utilities/services/auth.service.ts:25",{"_index":118,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/utilities/services/auth.service.ts:44",{"_index":136,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/utilities/services/auth.service.ts:8",{"_index":115,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/app/utilities/services/common.service.ts",{"_index":1333,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/app/utilities/services/common.service.ts:100",{"_index":1340,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/utilities/services/common.service.ts:20",{"_index":1356,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/utilities/services/common.service.ts:37",{"_index":1373,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/utilities/services/common.service.ts:52",{"_index":1380,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/utilities/services/common.service.ts:6",{"_index":1339,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/utilities/services/common.service.ts:66",{"_index":1375,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/utilities/services/common.service.ts:80",{"_index":1342,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/app/utilities/services/csv.service.ts",{"_index":195,"title":{},"body":{"injectables/CSVService.html":{},"coverage.html":{}}}],["src/app/utilities/services/csv.service.ts:10",{"_index":254,"title":{},"body":{"injectables/CSVService.html":{}}}],["src/app/utilities/services/csv.service.ts:105",{"_index":259,"title":{},"body":{"injectables/CSVService.html":{}}}],["src/app/utilities/services/csv.service.ts:42",{"_index":238,"title":{},"body":{"injectables/CSVService.html":{}}}],["src/app/utilities/services/csv.service.ts:6",{"_index":200,"title":{},"body":{"injectables/CSVService.html":{}}}],["src/app/utilities/services/csv.service.ts:68",{"_index":205,"title":{},"body":{"injectables/CSVService.html":{}}}],["src/app/utilities/services/event.service.ts",{"_index":1415,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{},"coverage.html":{}}}],["src/app/utilities/services/event.service.ts:26",{"_index":1421,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/utilities/services/event.service.ts:37",{"_index":1424,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/utilities/services/event.service.ts:47",{"_index":1431,"title":{},"body":{"injectables/EventService.html":{}}}],["src/app/utilities/services/http.service.ts",{"_index":1738,"title":{},"body":{"injectables/HttpService.html":{},"coverage.html":{}}}],["src/app/utilities/services/http.service.ts:110",{"_index":1791,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/http.service.ts:12",{"_index":1748,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/http.service.ts:130",{"_index":1793,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/http.service.ts:151",{"_index":1795,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/http.service.ts:173",{"_index":1786,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/http.service.ts:190",{"_index":1750,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/http.service.ts:205",{"_index":1781,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/http.service.ts:28",{"_index":1760,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/http.service.ts:42",{"_index":1764,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/http.service.ts:59",{"_index":1769,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/http.service.ts:76",{"_index":1776,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/http.service.ts:93",{"_index":1789,"title":{},"body":{"injectables/HttpService.html":{}}}],["src/app/utilities/services/loader.service.ts",{"_index":1988,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["src/app/utilities/services/loader.service.ts:23",{"_index":1997,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/utilities/services/loader.service.ts:38",{"_index":1992,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/utilities/services/loader.service.ts:9",{"_index":1991,"title":{},"body":{"injectables/LoaderService.html":{}}}],["src/app/utilities/services/local",{"_index":2003,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/utilities/services/seo.service.ts",{"_index":2246,"title":{},"body":{"injectables/SEOService.html":{},"coverage.html":{}}}],["src/app/utilities/services/seo.service.ts:24",{"_index":2281,"title":{},"body":{"injectables/SEOService.html":{}}}],["src/app/utilities/services/seo.service.ts:47",{"_index":2267,"title":{},"body":{"injectables/SEOService.html":{}}}],["src/app/utilities/services/seo.service.ts:64",{"_index":2284,"title":{},"body":{"injectables/SEOService.html":{}}}],["src/app/utilities/services/seo.service.ts:7",{"_index":2255,"title":{},"body":{"injectables/SEOService.html":{}}}],["src/app/utilities/services/seo.service.ts:77",{"_index":2258,"title":{},"body":{"injectables/SEOService.html":{}}}],["src/app/utilities/services/seo.service.ts:99",{"_index":2270,"title":{},"body":{"injectables/SEOService.html":{}}}],["src/environments/environment.development.ts",{"_index":2548,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.ts",{"_index":2549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/main.server.ts",{"_index":2550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staging",{"_index":499,"title":{},"body":{"interfaces/Column.html":{}}}],["standalone",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegisterComponent.html":{}}}],["start",{"_index":2235,"title":{},"body":{"components/RegisterComponent.html":{}}}],["started",{"_index":2580,"title":{"index.html":{}},"body":{}}],["state",{"_index":828,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":2458,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":1180,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["static",{"_index":960,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["status",{"_index":461,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"injectables/LoaderService.html":{}}}],["step",{"_index":1952,"title":{},"body":{"components/IndexComponent.html":{}}}],["steps",{"_index":145,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["still",{"_index":2353,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["stock",{"_index":712,"title":{},"body":{"interfaces/Column.html":{}}}],["stock_number",{"_index":714,"title":{},"body":{"interfaces/Column.html":{}}}],["stop",{"_index":2123,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["storage",{"_index":128,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["storage.service",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["storage.service.ts",{"_index":2004,"title":{},"body":{"injectables/LocalStorageService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["storage.service.ts:102",{"_index":2027,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:11",{"_index":2010,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:14",{"_index":2031,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:22",{"_index":2024,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:33",{"_index":2013,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:45",{"_index":2026,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:56",{"_index":2016,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:66",{"_index":2022,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:75",{"_index":2011,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storage.service.ts:89",{"_index":2017,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["storagebucket",{"_index":2713,"title":{},"body":{"miscellaneous/variables.html":{}}}],["store",{"_index":152,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserRoutingModule.html":{}}}],["store's",{"_index":988,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store'},{'name",{"_index":93,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["store._id",{"_index":993,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.address.city",{"_index":998,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.address.country",{"_index":1000,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.address.postal_code",{"_index":1001,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.address.state",{"_index":999,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.address.street",{"_index":997,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.address.unit",{"_index":996,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.alias",{"_index":1029,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.component.html",{"_index":790,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.component.scss",{"_index":791,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.custom_services",{"_index":1035,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.email",{"_index":1027,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.finance_apr",{"_index":1031,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.google_review",{"_index":1033,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.length",{"_index":978,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.license_number",{"_index":1032,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.location.coordinates[0",{"_index":1170,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.location.coordinates[1",{"_index":1171,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.location.lat",{"_index":1004,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.location.lng",{"_index":1003,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.logo",{"_index":1168,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.logo.name",{"_index":1040,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.name",{"_index":1026,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.need_response",{"_index":985,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.phone",{"_index":1028,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.remote_services",{"_index":1034,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.friday.close",{"_index":1019,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.friday.in",{"_index":1017,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.friday.out",{"_index":1018,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.monday.close",{"_index":1007,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.monday.in",{"_index":1005,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.monday.out",{"_index":1006,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.saturday.close",{"_index":1022,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.saturday.in",{"_index":1020,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.saturday.out",{"_index":1021,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.sunday.close",{"_index":1025,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.sunday.in",{"_index":1023,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.sunday.out",{"_index":1024,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.thusday.close",{"_index":1016,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.thusday.in",{"_index":1014,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.thusday.out",{"_index":1015,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.tuesday.close",{"_index":1010,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.tuesday.in",{"_index":1008,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.tuesday.out",{"_index":1009,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.wednesday.close",{"_index":1013,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.wednesday.in",{"_index":1011,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.time.wednesday.out",{"_index":1012,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.timeline",{"_index":1321,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.timeline.length",{"_index":982,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.timeline[].role",{"_index":1322,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.timeline[lastindex].role",{"_index":983,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.value",{"_index":969,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store.website",{"_index":1030,"title":{},"body":{"interfaces/Column-1.html":{}}}],["store/store.component",{"_index":2381,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["storecomponent",{"_index":92,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["stored",{"_index":642,"title":{},"body":{"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{},"index.html":{}}}],["storeoruser",{"_index":541,"title":{},"body":{"interfaces/Column.html":{}}}],["stores",{"_index":940,"title":{},"body":{"interfaces/Column-1.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["stores[0]._id",{"_index":1734,"title":{},"body":{"components/HomeComponent-1.html":{}}}],["storing",{"_index":1865,"title":{},"body":{"components/IndexComponent.html":{}}}],["str",{"_index":336,"title":{},"body":{"injectables/CSVService.html":{}}}],["strcountcar",{"_index":1728,"title":{},"body":{"components/HomeComponent-1.html":{}}}],["strcurrentaddresslatlng",{"_index":875,"title":{},"body":{"interfaces/Column-1.html":{}}}],["strcurrentcarstatuslist",{"_index":510,"title":{},"body":{"interfaces/Column.html":{}}}],["strcurrenteditstoreid",{"_index":856,"title":{},"body":{"interfaces/Column-1.html":{}}}],["street",{"_index":910,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["strformbuttontitle",{"_index":852,"title":{},"body":{"interfaces/Column-1.html":{}}}],["strgooglemapapikey",{"_index":869,"title":{},"body":{"interfaces/Column-1.html":{}}}],["string",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"interfaces/LabelValueData.html":{},"injectables/LocalStorageService.html":{},"components/PriceAlertComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["string(car.images[minposition].url",{"_index":735,"title":{},"body":{"interfaces/Column.html":{}}}],["strings",{"_index":228,"title":{},"body":{"injectables/CSVService.html":{}}}],["strotp",{"_index":1535,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["strotperror",{"_index":1536,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["strrep",{"_index":199,"title":{},"body":{"injectables/CSVService.html":{}}}],["strrep(data",{"_index":256,"title":{},"body":{"injectables/CSVService.html":{}}}],["strsignuptitle",{"_index":1537,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["strstorepatchurl",{"_index":848,"title":{},"body":{"interfaces/Column-1.html":{}}}],["strtotalcars",{"_index":1615,"title":{},"body":{"components/HomeComponent.html":{}}}],["structures",{"_index":971,"title":{},"body":{"interfaces/Column-1.html":{}}}],["struploaderror",{"_index":847,"title":{},"body":{"interfaces/Column-1.html":{}}}],["student",{"_index":2690,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleclassmodule",{"_index":1839,"title":{},"body":{"components/IndexComponent.html":{},"modules/UserModule.html":{}}}],["styleurl",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["submission",{"_index":1099,"title":{},"body":{"interfaces/Column-1.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["submit",{"_index":854,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["submitaddress",{"_index":2146,"title":{},"body":{"components/ProfileComponent.html":{}}}],["submitchangepassword",{"_index":2147,"title":{},"body":{"components/ProfileComponent.html":{}}}],["submits",{"_index":1097,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["submitsearchform",{"_index":1618,"title":{},"body":{"components/HomeComponent.html":{}}}],["submitstoreinformation",{"_index":1112,"title":{},"body":{"interfaces/Column-1.html":{}}}],["submitted",{"_index":1111,"title":{},"body":{"interfaces/Column-1.html":{}}}],["subscribe",{"_index":1927,"title":{},"body":{"components/IndexComponent.html":{},"components/SearchAlertComponent.html":{}}}],["subscribe.filter",{"_index":2349,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["subscribe.name",{"_index":2348,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["subscribe/${id",{"_index":2336,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["subscribe/user",{"_index":2317,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["subscribe/user').then((response",{"_index":2333,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["subscription",{"_index":943,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/SearchAlertComponent.html":{}}}],["subscription's",{"_index":2323,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["subscriptions",{"_index":2316,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["success",{"_index":608,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/PriceAlertComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["successful",{"_index":150,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["successfully",{"_index":1145,"title":{},"body":{"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["such",{"_index":691,"title":{},"body":{"interfaces/Column.html":{}}}],["suffered",{"_index":1695,"title":{},"body":{"components/HomeComponent.html":{}}}],["suggest",{"_index":496,"title":{},"body":{"interfaces/Column.html":{}}}],["suggestions",{"_index":1597,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{}}}],["suitable",{"_index":263,"title":{},"body":{"injectables/CSVService.html":{}}}],["summary",{"_index":624,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["sunday",{"_index":924,"title":{},"body":{"interfaces/Column-1.html":{}}}],["support",{"_index":1722,"title":{},"body":{"components/HomeComponent.html":{},"modules.html":{}}}],["supported",{"_index":1970,"title":{},"body":{"components/IndexComponent.html":{}}}],["supports",{"_index":1896,"title":{},"body":{"components/IndexComponent.html":{}}}],["sure",{"_index":1708,"title":{},"body":{"components/HomeComponent.html":{},"components/IndexComponent.html":{}}}],["suvs",{"_index":1680,"title":{},"body":{"components/HomeComponent.html":{}}}],["svg",{"_index":2611,"title":{},"body":{"modules.html":{}}}],["sw.js",{"_index":2066,"title":{},"body":{"components/LoginComponent.html":{}}}],["switch",{"_index":606,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["system",{"_index":2157,"title":{},"body":{"components/ProfileComponent.html":{}}}],["table",{"_index":447,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"coverage.html":{}}}],["tablemodule",{"_index":2401,"title":{},"body":{"modules/UserModule.html":{}}}],["tablepageevent",{"_index":437,"title":{},"body":{"interfaces/Column.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2551,"title":{},"body":{"coverage.html":{}}}],["tabviewmodule",{"_index":1606,"title":{},"body":{"components/HomeComponent.html":{},"modules/UserModule.html":{}}}],["tag",{"_index":2260,"title":{},"body":{"injectables/SEOService.html":{}}}],["tags",{"_index":2273,"title":{},"body":{"injectables/SEOService.html":{}}}],["takes",{"_index":210,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{}}}],["tap",{"_index":2731,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap(async",{"_index":2732,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":749,"title":{},"body":{"interfaces/Column.html":{}}}],["tasks",{"_index":946,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["teal",{"_index":845,"title":{},"body":{"interfaces/Column-1.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["templateurl",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["territories",{"_index":810,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["test",{"_index":2599,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2605,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2598,"title":{},"body":{"index.html":{}}}],["text",{"_index":378,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/CommonElement.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/LabelValueData.html":{},"injectables/SEOService.html":{}}}],["text/csv;charset=utf",{"_index":300,"title":{},"body":{"injectables/CSVService.html":{}}}],["textarea",{"_index":363,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{}}}],["textbox",{"_index":359,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/typealiases.html":{}}}],["textboxtype",{"_index":370,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["then((response",{"_index":1490,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/ProfileComponent.html":{},"components/SearchAlertComponent.html":{}}}],["then((serviceworkerregistration",{"_index":2068,"title":{},"body":{"components/LoginComponent.html":{}}}],["then((token",{"_index":2073,"title":{},"body":{"components/LoginComponent.html":{}}}],["there's",{"_index":535,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{}}}],["this.arralertsubscribe",{"_index":2334,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["this.arrbodytype",{"_index":1661,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.arrcarlist",{"_index":557,"title":{},"body":{"interfaces/Column.html":{}}}],["this.arrcarlist?.data.length",{"_index":559,"title":{},"body":{"interfaces/Column.html":{}}}],["this.arrcarlistcopy",{"_index":561,"title":{},"body":{"interfaces/Column.html":{}}}],["this.arrcarlistcopy.foreach((car",{"_index":599,"title":{},"body":{"interfaces/Column.html":{}}}],["this.arrcity",{"_index":962,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["this.arrfavouritevehicle",{"_index":1485,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["this.arrfilterlist",{"_index":553,"title":{},"body":{"interfaces/Column.html":{}}}],["this.arrfilterlist.find((element",{"_index":650,"title":{},"body":{"interfaces/Column.html":{}}}],["this.arrfilters",{"_index":2331,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["this.arrfilters.find((flr",{"_index":2340,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["this.arrmake",{"_index":1653,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.arrmodel",{"_index":1669,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.arrmodelcopy",{"_index":1659,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.arrmodelcopy.filter((element",{"_index":1666,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.arrpricealert",{"_index":2127,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["this.arrremoteservice",{"_index":948,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.arrstorestatus.find((store",{"_index":968,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.arrtablecontenttitle.find((search",{"_index":645,"title":{},"body":{"interfaces/Column.html":{}}}],["this.arruserstores",{"_index":979,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.arruserstores.find((store",{"_index":992,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.arruserstores.foreach((store",{"_index":980,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.authservice.onlogout",{"_index":1953,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.breakpointobserver.ismatched('(max",{"_index":1903,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.checkfieldisfromfilter(key",{"_index":601,"title":{},"body":{"interfaces/Column.html":{}}}],["this.checkfiltertitlefromfilterlist(key",{"_index":603,"title":{},"body":{"interfaces/Column.html":{}}}],["this.cols",{"_index":570,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["this.cols.find((element",{"_index":580,"title":{},"body":{"interfaces/Column.html":{}}}],["this.cols.push",{"_index":591,"title":{},"body":{"interfaces/Column.html":{}}}],["this.colscsvselected",{"_index":593,"title":{},"body":{"interfaces/Column.html":{}}}],["this.colscsvselected.filter((col",{"_index":595,"title":{},"body":{"interfaces/Column.html":{}}}],["this.colscsvselected.filter((row",{"_index":678,"title":{},"body":{"interfaces/Column.html":{}}}],["this.commonservice.replacestringtocapitalize(key",{"_index":573,"title":{},"body":{"interfaces/Column.html":{}}}],["this.compressimage(e.target!.result",{"_index":1225,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.confirmationservice.confirm",{"_index":758,"title":{},"body":{"interfaces/Column.html":{}}}],["this.converttocsv(data",{"_index":294,"title":{},"body":{"injectables/CSVService.html":{}}}],["this.cropperlogo.crop",{"_index":1206,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.csvservice.csvtojson(csv).map((cities",{"_index":963,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["this.csvservice.downloadfile(arrtemp",{"_index":740,"title":{},"body":{"interfaces/Column.html":{}}}],["this.csvservice.downloadfile(this.arrcarlistcopy",{"_index":682,"title":{},"body":{"interfaces/Column.html":{}}}],["this.currentrecordtoview",{"_index":1285,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.currentuser",{"_index":1925,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.deletefcmtoken",{"_index":1954,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.eventservice.navuseroptionevent",{"_index":1926,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.file",{"_index":1042,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.file!.type",{"_index":1160,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.file.type",{"_index":1126,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.formaddress.patchvalue",{"_index":2176,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.formaddress.value",{"_index":2186,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.formforgetpassword.addcontrol('otp",{"_index":1587,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.formforgetpassword.addcontrol('password",{"_index":1589,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.formforgetpassword.patchvalue",{"_index":1596,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.formforgetpassword.value",{"_index":1579,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.formlogin.reset",{"_index":2063,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formlogin.value",{"_index":2060,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.formpassword.value",{"_index":2183,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.formregister.addcontrol('otp",{"_index":2236,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formregister.addcontrol('password",{"_index":2239,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formregister.addcontrol('phone",{"_index":2240,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formregister.addcontrol('role",{"_index":2238,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formregister.addcontrol('username",{"_index":2237,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formregister.patchvalue",{"_index":2243,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formregister.value",{"_index":2233,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.formsearchvehicle.get('model')?.disable",{"_index":1664,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formsearchvehicle.get('model')?.enable",{"_index":1672,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formsearchvehicle.patchvalue",{"_index":1647,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formsearchvehicle.value",{"_index":1673,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.formstore.get('address",{"_index":954,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.formstore.get('address.city')?.seterrors(null",{"_index":1273,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.formstore.get('address.state')?.seterrors(null",{"_index":1274,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.formstore.patchvalue",{"_index":995,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.formstore.reset",{"_index":1269,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.formstore.value",{"_index":1114,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.formstore.value.address",{"_index":1056,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.formtimelineresponse.patchvalue",{"_index":1300,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.formtimelineresponse.value).then(async",{"_index":1318,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.formuserinfo.patchvalue",{"_index":2171,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.getalertsubscribe",{"_index":2332,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["this.getcarlist(this.strcurrentcarstatuslist",{"_index":521,"title":{},"body":{"interfaces/Column.html":{}}}],["this.getfavouritevahicle",{"_index":1482,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["this.getobject('user').type",{"_index":2044,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.getpricealerts",{"_index":2124,"title":{},"body":{"components/PriceAlertComponent.html":{}}}],["this.getstores",{"_index":947,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.getuser",{"_index":2170,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.httpservice.delete('authentication",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.httpservice.delete(`alert",{"_index":2128,"title":{},"body":{"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["this.httpservice.get('alert",{"_index":2125,"title":{},"body":{"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["this.httpservice.get('car/count",{"_index":1652,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.httpservice.get('filter",{"_index":554,"title":{},"body":{"interfaces/Column.html":{},"components/HomeComponent.html":{},"components/SearchAlertComponent.html":{}}}],["this.httpservice.get('remote",{"_index":949,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.httpservice.get('store/dealer",{"_index":976,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.httpservice.get('user/favourite",{"_index":1483,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["this.httpservice.get('user/identity').then(async",{"_index":1924,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.httpservice.get('user/profile",{"_index":756,"title":{},"body":{"interfaces/Column.html":{},"components/ProfileComponent.html":{}}}],["this.httpservice.get('user/store",{"_index":1732,"title":{},"body":{"components/HomeComponent-1.html":{}}}],["this.httpservice.get(`car/count/store/${store",{"_index":1736,"title":{},"body":{"components/HomeComponent-1.html":{}}}],["this.httpservice.get(`car/count/user/${user",{"_index":1737,"title":{},"body":{"components/HomeComponent-1.html":{}}}],["this.httpservice.get(`car/get",{"_index":1121,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.httpservice.get(`car/user/${storeoruser}/${status}?page=${this.page}&limit=${this.limit",{"_index":558,"title":{},"body":{"interfaces/Column.html":{}}}],["this.httpservice.get(this.server_url",{"_index":1808,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpservice.getwithoutsideurlcsv('assets/csv/canadacities.csv",{"_index":961,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["this.httpservice.patch('authentication/notification",{"_index":2076,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.httpservice.patch('car/status",{"_index":618,"title":{},"body":{"interfaces/Column.html":{}}}],["this.httpservice.patch('user/favourite",{"_index":1489,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["this.httpservice.patch(`store/${this.strcurrenteditstoreid",{"_index":1172,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.httpservice.patch(`user/address/${userid",{"_index":2193,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.httpservice.post('authentication/change",{"_index":1592,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.httpservice.post('authentication/client",{"_index":2061,"title":{},"body":{"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["this.httpservice.post('authentication/forget",{"_index":1580,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["this.httpservice.post('authentication/verify",{"_index":1583,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.httpservice.post('store",{"_index":1139,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.httpservice.post('user/change",{"_index":2184,"title":{},"body":{"components/ProfileComponent.html":{}}}],["this.httpservice.post(`store/dealer/status",{"_index":1317,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.httpservice.post(this.server_url",{"_index":1815,"title":{},"body":{"injectables/HttpService.html":{}}}],["this.httpservice.postwithoutsideurl(url",{"_index":1068,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["this.httpservice.puturl(urluploadresult.data.url",{"_index":1125,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.imagechangedevent",{"_index":1186,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.isaddresschanged",{"_index":956,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.isaddressvefied",{"_index":1096,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.iscreatestoredialogopen",{"_index":994,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.iscropdialogopen",{"_index":1213,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.islogochanged",{"_index":1155,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.islogochangeonupdate",{"_index":1198,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.isotpsent",{"_index":1575,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.isotpvalid",{"_index":1586,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.isregisterloading",{"_index":2232,"title":{},"body":{"components/RegisterComponent.html":{}}}],["this.isstoreoperationloading",{"_index":1113,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.isstoretimelinedialogopen",{"_index":1295,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.istimelineresponsedialogopen",{"_index":1309,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.istimelineresponseloading",{"_index":1316,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.isvalidationmapmodalopen",{"_index":1081,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.isviewdialogopen",{"_index":1284,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.limit",{"_index":550,"title":{},"body":{"interfaces/Column.html":{}}}],["this.loading",{"_index":2002,"title":{},"body":{"injectables/LoaderService.html":{}}}],["this.localstorageservice.get('code",{"_index":1646,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.localstorageservice.get('location",{"_index":1960,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.localstorageservice.get('moveto",{"_index":2082,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.localstorageservice.get('store",{"_index":542,"title":{},"body":{"interfaces/Column.html":{},"components/HomeComponent-1.html":{}}}],["this.localstorageservice.getobject('user",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.getobject('user').identifier",{"_index":544,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent-1.html":{},"components/ProfileComponent.html":{}}}],["this.localstorageservice.remove('moveto",{"_index":2084,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.localstorageservice.remove('store",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.remove('user",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.localstorageservice.set('ne",{"_index":2077,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.localstorageservice.setobject('location",{"_index":1967,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.localstorageservice.setobject('user",{"_index":2078,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.localstorageservice.userisdealer",{"_index":540,"title":{},"body":{"interfaces/Column.html":{},"components/HomeComponent-1.html":{}}}],["this.location.back",{"_index":2101,"title":{},"body":{"components/PageNotFoundComponent.html":{}}}],["this.markerpositions",{"_index":1075,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.markerpositions.push",{"_index":1080,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.menuloginuser",{"_index":1935,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.menumainnavigation",{"_index":1929,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.menumainnavigation.foreach((item",{"_index":1947,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.menumainnavigationresponsive",{"_index":1946,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.menumainnavigationresponsive.push",{"_index":1948,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.messageservice.add",{"_index":621,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["this.metaservice.addtag",{"_index":2295,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.metaservice.gettag('rel=\"canonical",{"_index":2292,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.metaservice.updatetag",{"_index":2289,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.navuseroptionevent.emit",{"_index":1443,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["this.navuseroptionevent.unsubscribe",{"_index":1444,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["this.notificationevent.emit(data",{"_index":1442,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["this.notificationevent.unsubscribe",{"_index":1445,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["this.objstoretimelinedetail.name",{"_index":1296,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.objstoretimelinedetail.need_response",{"_index":1298,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.objstoretimelinedetail.status",{"_index":1297,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.objstoretimelinedetail.timeline",{"_index":1299,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.oninitvalues",{"_index":1650,"title":{},"body":{"components/HomeComponent.html":{},"components/IndexComponent.html":{}}}],["this.page",{"_index":547,"title":{},"body":{"interfaces/Column.html":{}}}],["this.readurl(file",{"_index":1043,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.readurl(this.file",{"_index":1212,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.requestforuserlocation",{"_index":1923,"title":{},"body":{"components/IndexComponent.html":{}}}],["this.resetform",{"_index":1142,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.router.navigate(['/detail",{"_index":1486,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["this.router.navigate(['/search",{"_index":1674,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.router.navigate(['user/home",{"_index":2087,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.router.navigatebyurl('/login",{"_index":1595,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"components/RegisterComponent.html":{}}}],["this.router.navigatebyurl('/user/car",{"_index":772,"title":{},"body":{"interfaces/Column.html":{}}}],["this.router.navigatebyurl('/user/profile",{"_index":770,"title":{},"body":{"interfaces/Column.html":{}}}],["this.router.navigatebyurl('/user/store",{"_index":543,"title":{},"body":{"interfaces/Column.html":{}}}],["this.router.navigatebyurl(moveto",{"_index":2085,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.sanitizer.bypasssecuritytrusturl(event.objecturl",{"_index":1205,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.selectedcolumns",{"_index":592,"title":{},"body":{"interfaces/Column.html":{}}}],["this.setcanonicalurl(window.location.href",{"_index":2287,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.setmetadescription(content",{"_index":2286,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.setogcontent(title",{"_index":2288,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.settitle(title",{"_index":2285,"title":{},"body":{"injectables/SEOService.html":{}}}],["this.storage",{"_index":2037,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.clear",{"_index":2043,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.getitem(key",{"_index":2039,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.removeitem(key",{"_index":2042,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.storage.setitem(key",{"_index":2038,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["this.strcountcar",{"_index":1735,"title":{},"body":{"components/HomeComponent-1.html":{}}}],["this.strcurrentaddresslatlng",{"_index":1072,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.strcurrentaddresslatlng?.lat",{"_index":1095,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.strcurrentaddresslatlng?.lng",{"_index":1094,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.strcurrenteditstoreid",{"_index":1045,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.strformbuttontitle",{"_index":1044,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.strotp",{"_index":1574,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.strotp?.trim",{"_index":1585,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.strotperror",{"_index":1576,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.strrep(element[head",{"_index":342,"title":{},"body":{"injectables/CSVService.html":{}}}],["this.strsignuptitle",{"_index":1591,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["this.strstorepatchurl",{"_index":1116,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.strstorepatchurl.changingthisbreaksapplicationsecurity",{"_index":1158,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.strtotalcars",{"_index":1651,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.struploaderror",{"_index":1187,"title":{},"body":{"interfaces/Column-1.html":{}}}],["this.titleservice.settitle(title",{"_index":2290,"title":{},"body":{"injectables/SEOService.html":{}}}],["through",{"_index":700,"title":{},"body":{"interfaces/Column.html":{},"injectables/SEOService.html":{}}}],["throw",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{}}}],["throwerror",{"_index":1803,"title":{},"body":{"injectables/HttpService.html":{}}}],["throws",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{}}}],["thusday",{"_index":921,"title":{},"body":{"interfaces/Column-1.html":{}}}],["till",{"_index":1602,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["time",{"_index":913,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/ForgetPasswordComponent.html":{},"miscellaneous/variables.html":{}}}],["timeline",{"_index":861,"title":{},"body":{"interfaces/Column-1.html":{}}}],["timelinemodule",{"_index":2434,"title":{},"body":{"modules/UserModule.html":{}}}],["timestamp",{"_index":1346,"title":{},"body":{"injectables/CommonService.html":{}}}],["title",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"interfaces/INotification.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{}}}],["titles",{"_index":323,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["titles.reduce",{"_index":330,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["titleservice",{"_index":2254,"title":{},"body":{"injectables/SEOService.html":{}}}],["toast",{"_index":2059,"title":{},"body":{"components/LoginComponent.html":{}}}],["toastmodule",{"_index":1526,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{},"modules/UserModule.html":{}}}],["toggle",{"_index":411,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["token",{"_index":1859,"title":{},"body":{"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["tokens",{"_index":1866,"title":{},"body":{"components/IndexComponent.html":{}}}],["tolowercase",{"_index":1413,"title":{},"body":{"injectables/CommonService.html":{}}}],["total",{"_index":1631,"title":{},"body":{"components/HomeComponent.html":{},"components/HomeComponent-1.html":{}}}],["track",{"_index":1496,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["transformed",{"_index":640,"title":{},"body":{"interfaces/Column.html":{}}}],["treated",{"_index":966,"title":{},"body":{"interfaces/Column-1.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["triangle",{"_index":766,"title":{},"body":{"interfaces/Column.html":{}}}],["trigger",{"_index":1200,"title":{},"body":{"interfaces/Column-1.html":{}}}],["triggered",{"_index":748,"title":{},"body":{"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["triggers",{"_index":674,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{}}}],["trim",{"_index":1283,"title":{},"body":{"interfaces/Column-1.html":{}}}],["trucks",{"_index":1679,"title":{},"body":{"components/HomeComponent.html":{}}}],["true",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":1578,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["tslib",{"_index":2575,"title":{},"body":{"dependencies.html":{}}}],["tuesday",{"_index":919,"title":{},"body":{"interfaces/Column-1.html":{}}}],["two",{"_index":2154,"title":{},"body":{"components/ProfileComponent.html":{}}}],["type",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"injectables/AuthService.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type.guard",{"_index":2451,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["type.guard.ts",{"_index":2532,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":2616,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeof",{"_index":334,"title":{},"body":{"injectables/CSVService.html":{}}}],["types",{"_index":261,"title":{},"body":{"injectables/CSVService.html":{},"components/SearchAlertComponent.html":{}}}],["typesetting",{"_index":1717,"title":{},"body":{"components/HomeComponent.html":{}}}],["typically",{"_index":1199,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"injectables/SEOService.html":{}}}],["ui",{"_index":1109,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/LoaderService.html":{},"components/PriceAlertComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["unauthorized",{"_index":2738,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undefined",{"_index":258,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/RegisterComponent.html":{}}}],["underscores",{"_index":1361,"title":{},"body":{"injectables/CommonService.html":{}}}],["unemployed",{"_index":2694,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unexpected",{"_index":1366,"title":{},"body":{"injectables/CommonService.html":{}}}],["unique",{"_index":611,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["unique_identifier",{"_index":716,"title":{},"body":{"interfaces/Column.html":{}}}],["unit",{"_index":909,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{},"index.html":{}}}],["unix",{"_index":1349,"title":{},"body":{"injectables/CommonService.html":{}}}],["unknown",{"_index":1757,"title":{},"body":{"injectables/HttpService.html":{}}}],["unread",{"_index":1441,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["unrecognized",{"_index":1329,"title":{},"body":{"interfaces/Column-1.html":{}}}],["unsubscribe",{"_index":2328,"title":{},"body":{"components/SearchAlertComponent.html":{}}}],["unsubscribed",{"_index":1492,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{},"components/SearchAlertComponent.html":{}}}],["unsubscribes",{"_index":1433,"title":{},"body":{"injectables/EventService.html":{},"interfaces/INotification.html":{}}}],["unsuccessful",{"_index":1829,"title":{},"body":{"injectables/HttpService.html":{}}}],["until",{"_index":507,"title":{},"body":{"interfaces/Column.html":{}}}],["untypedformgroup",{"_index":1556,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["up",{"_index":942,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{}}}],["update",{"_index":546,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/IndexComponent.html":{},"components/ProfileComponent.html":{}}}],["update_at",{"_index":717,"title":{},"body":{"interfaces/Column.html":{}}}],["updated",{"_index":613,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["updates",{"_index":604,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/LoaderService.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["updatestorinformation",{"_index":1154,"title":{},"body":{"interfaces/Column-1.html":{}}}],["updating",{"_index":1108,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["upload",{"_index":364,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{},"miscellaneous/typealiases.html":{}}}],["uploaded",{"_index":1175,"title":{},"body":{"interfaces/Column-1.html":{}}}],["uploader",{"_index":1197,"title":{},"body":{"interfaces/Column-1.html":{}}}],["upon",{"_index":1461,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/SearchAlertComponent.html":{}}}],["uppercase",{"_index":1370,"title":{},"body":{"injectables/CommonService.html":{},"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{}}}],["url",{"_index":276,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/ProfileComponent.html":{},"injectables/SEOService.html":{},"miscellaneous/variables.html":{}}}],["url).pipe",{"_index":1809,"title":{},"body":{"injectables/HttpService.html":{}}}],["url.createobjecturl(blob",{"_index":304,"title":{},"body":{"injectables/CSVService.html":{}}}],["url/${file.type.split('/')[1]}/lg",{"_index":1166,"title":{},"body":{"interfaces/Column-1.html":{}}}],["url/${this.file!.type.split('/')[1]}/lg",{"_index":1159,"title":{},"body":{"interfaces/Column-1.html":{}}}],["url/${this.file.type.split('/')[1]}/lg",{"_index":1122,"title":{},"body":{"interfaces/Column-1.html":{}}}],["urls",{"_index":694,"title":{},"body":{"interfaces/Column.html":{},"injectables/SEOService.html":{}}}],["urluploadresult",{"_index":1120,"title":{},"body":{"interfaces/Column-1.html":{}}}],["urluploadresult.data.fullpath",{"_index":1128,"title":{},"body":{"interfaces/Column-1.html":{}}}],["urluploadresult.data.medianame",{"_index":1131,"title":{},"body":{"interfaces/Column-1.html":{}}}],["urluploadresult.data.path",{"_index":1130,"title":{},"body":{"interfaces/Column-1.html":{}}}],["use",{"_index":1706,"title":{},"body":{"components/HomeComponent.html":{},"injectables/HttpService.html":{},"injectables/LocalStorageService.html":{},"index.html":{}}}],["used",{"_index":232,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"components/IndexComponent.html":{},"injectables/LoaderService.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{}}}],["useful",{"_index":1994,"title":{},"body":{"injectables/LoaderService.html":{},"injectables/SEOService.html":{}}}],["user",{"_index":120,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent-1.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"miscellaneous/variables.html":{}}}],["user's",{"_index":675,"title":{},"body":{"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["user'},{'name",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["user.address",{"_index":757,"title":{},"body":{"interfaces/Column.html":{}}}],["user.address.city",{"_index":2179,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.address.country",{"_index":2181,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.address.postal_code",{"_index":2182,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.address.state",{"_index":2180,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.address.street",{"_index":2178,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.address.unit",{"_index":2177,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.component",{"_index":2375,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["user.email",{"_index":2172,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.phone",{"_index":2173,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user.username",{"_index":2174,"title":{},"body":{"components/ProfileComponent.html":{}}}],["user/car",{"_index":1938,"title":{},"body":{"components/IndexComponent.html":{}}}],["user/favourite",{"_index":1460,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/IndexComponent.html":{}}}],["user/home",{"_index":1937,"title":{},"body":{"components/IndexComponent.html":{}}}],["user/price",{"_index":1941,"title":{},"body":{"components/IndexComponent.html":{}}}],["user/profile",{"_index":1944,"title":{},"body":{"components/IndexComponent.html":{}}}],["user/search",{"_index":1939,"title":{},"body":{"components/IndexComponent.html":{}}}],["usercomponent",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{},"overview.html":{}}}],["userid",{"_index":2192,"title":{},"body":{"components/ProfileComponent.html":{}}}],["userisdealer",{"_index":2008,"title":{},"body":{"injectables/LocalStorageService.html":{}}}],["userlocation",{"_index":1959,"title":{},"body":{"components/IndexComponent.html":{}}}],["usermodule",{"_index":2358,"title":{"modules/UserModule.html":{}},"body":{"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":2168,"title":{},"body":{"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["userroleoptions",{"_index":2208,"title":{},"body":{"components/RegisterComponent.html":{}}}],["userroutingmodule",{"_index":2369,"title":{"modules/UserRoutingModule.html":{}},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["uses",{"_index":214,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"components/IndexComponent.html":{},"injectables/LocalStorageService.html":{},"components/SearchAlertComponent.html":{}}}],["using",{"_index":1053,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"injectables/HttpService.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["utilities/guard/dealer",{"_index":2450,"title":{},"body":{"modules/UserRoutingModule.html":{}}}],["utilities/interceptor/error.interceptor",{"_index":2391,"title":{},"body":{"modules/UserModule.html":{}}}],["utilities/services/auth.service",{"_index":1915,"title":{},"body":{"components/IndexComponent.html":{}}}],["utilities/services/common.service",{"_index":431,"title":{},"body":{"interfaces/Column.html":{}}}],["utilities/services/csv.service",{"_index":433,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["utilities/services/event.service",{"_index":1916,"title":{},"body":{"components/IndexComponent.html":{}}}],["utilities/services/http.service",{"_index":429,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["utilities/services/loader.service",{"_index":1986,"title":{},"body":{"components/LoaderComponent.html":{}}}],["utilities/services/local",{"_index":432,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{}}}],["v.split(delimiter",{"_index":329,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["valid",{"_index":1046,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/IndexComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validateaddress",{"_index":1055,"title":{},"body":{"interfaces/Column-1.html":{}}}],["validated",{"_index":2158,"title":{},"body":{"components/ProfileComponent.html":{}}}],["validates",{"_index":1051,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["validation",{"_index":413,"title":{},"body":{"interfaces/CarForm.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"interfaces/LabelValueData.html":{}}}],["validators",{"_index":778,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.email",{"_index":932,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(10",{"_index":1590,"title":{},"body":{"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validators.minlength(8",{"_index":2056,"title":{},"body":{"components/LoginComponent.html":{}}}],["validators.required",{"_index":866,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["validity",{"_index":1047,"title":{},"body":{"interfaces/Column-1.html":{}}}],["value",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"injectables/CSVService.html":{},"interfaces/CarForm.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"interfaces/CommonElement.html":{},"injectables/CommonService.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"injectables/HttpService.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"interfaces/LabelValueData.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{},"miscellaneous/variables.html":{}}}],["value:'contract",{"_index":2685,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value:'retired",{"_index":2689,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value:'seasonal",{"_index":2693,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value:'sibling",{"_index":2664,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value:'student",{"_index":2691,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value:'unemployed",{"_index":2695,"title":{},"body":{"miscellaneous/variables.html":{}}}],["values",{"_index":213,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{},"injectables/CommonService.html":{},"components/HomeComponent.html":{},"components/IndexComponent.html":{},"components/LoginComponent.html":{}}}],["values[index",{"_index":333,"title":{},"body":{"injectables/CSVService.html":{},"injectables/CommonService.html":{}}}],["vapidkey",{"_index":2070,"title":{},"body":{"components/LoginComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["variable",{"_index":851,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/LoaderService.html":{},"coverage.html":{}}}],["variables",{"_index":1573,"title":{"miscellaneous/variables.html":{}},"body":{"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/RegisterComponent.html":{},"miscellaneous/variables.html":{}}}],["variations",{"_index":1690,"title":{},"body":{"components/HomeComponent.html":{}}}],["various",{"_index":260,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column-1.html":{}}}],["varray",{"_index":1077,"title":{},"body":{"interfaces/Column-1.html":{}}}],["vehicle",{"_index":97,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"modules/UserRoutingModule.html":{}}}],["vehicle'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{}}}],["vehicle.component",{"_index":2384,"title":{},"body":{"modules/UserModule.html":{},"modules/UserRoutingModule.html":{}}}],["vehicle.component.html",{"_index":1449,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["vehicle.component.scss",{"_index":1450,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["vehicle.component.ts",{"_index":1448,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"coverage.html":{}}}],["vehicle.component.ts:18",{"_index":1456,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["vehicle.component.ts:35",{"_index":1463,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["vehicle.component.ts:48",{"_index":1457,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["vehicle.component.ts:63",{"_index":1472,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["vehicle.component.ts:78",{"_index":1477,"title":{},"body":{"components/FavouriteVehicleComponent.html":{}}}],["vehicle/favourite",{"_index":1447,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"modules/UserModule.html":{},"modules/UserRoutingModule.html":{},"coverage.html":{}}}],["vehicledetailcomponent",{"_index":96,"title":{},"body":{"components/AppComponent.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"components/HomeComponent-1.html":{},"components/IndexComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{},"components/SearchAlertComponent.html":{},"coverage.html":{}}}],["vehicles",{"_index":498,"title":{},"body":{"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/IndexComponent.html":{},"components/SearchAlertComponent.html":{}}}],["verifed",{"_index":880,"title":{},"body":{"interfaces/Column-1.html":{}}}],["verification",{"_index":1089,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/RegisterComponent.html":{}}}],["verified",{"_index":836,"title":{},"body":{"interfaces/Column-1.html":{}}}],["verifies",{"_index":1084,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{}}}],["verify",{"_index":873,"title":{},"body":{"interfaces/Column-1.html":{},"components/ForgetPasswordComponent.html":{},"components/ProfileComponent.html":{},"components/RegisterComponent.html":{}}}],["verifyaddress",{"_index":1093,"title":{},"body":{"interfaces/Column-1.html":{}}}],["version",{"_index":1233,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{},"injectables/SEOService.html":{},"index.html":{},"properties.html":{}}}],["via",{"_index":2221,"title":{},"body":{"components/RegisterComponent.html":{},"index.html":{}}}],["video_url",{"_index":585,"title":{},"body":{"interfaces/Column.html":{}}}],["videos",{"_index":584,"title":{},"body":{"interfaces/Column.html":{}}}],["view",{"_index":857,"title":{},"body":{"interfaces/Column-1.html":{},"components/SearchAlertComponent.html":{}}}],["viewchild",{"_index":775,"title":{},"body":{"interfaces/Column-1.html":{}}}],["viewchild(\"cropperlogo",{"_index":893,"title":{},"body":{"interfaces/Column-1.html":{}}}],["viewed",{"_index":1278,"title":{},"body":{"interfaces/Column-1.html":{},"components/FavouriteVehicleComponent.html":{},"components/PriceAlertComponent.html":{}}}],["viewencapsulation",{"_index":424,"title":{},"body":{"interfaces/Column.html":{},"components/ForgetPasswordComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewencapsulation.none",{"_index":444,"title":{},"body":{"interfaces/Column.html":{},"components/ForgetPasswordComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/RegisterComponent.html":{}}}],["viewing",{"_index":1275,"title":{},"body":{"interfaces/Column-1.html":{}}}],["vin",{"_index":692,"title":{},"body":{"interfaces/Column.html":{}}}],["vin_number",{"_index":568,"title":{},"body":{"interfaces/Column.html":{}}}],["vin_status",{"_index":715,"title":{},"body":{"interfaces/Column.html":{}}}],["visibility",{"_index":1999,"title":{},"body":{"injectables/LoaderService.html":{}}}],["void",{"_index":255,"title":{},"body":{"injectables/CSVService.html":{},"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/EventService.html":{},"components/FavouriteVehicleComponent.html":{},"components/ForgetPasswordComponent.html":{},"components/HomeComponent.html":{},"interfaces/INotification.html":{},"components/IndexComponent.html":{},"injectables/LoaderService.html":{},"injectables/LocalStorageService.html":{},"components/LoginComponent.html":{},"components/PageNotFoundComponent.html":{},"components/PriceAlertComponent.html":{},"components/RegisterComponent.html":{},"injectables/SEOService.html":{},"components/SearchAlertComponent.html":{}}}],["want",{"_index":502,"title":{},"body":{"interfaces/Column.html":{},"components/FavouriteVehicleComponent.html":{},"components/SearchAlertComponent.html":{}}}],["warrenty_description",{"_index":583,"title":{},"body":{"interfaces/Column.html":{}}}],["website",{"_index":927,"title":{},"body":{"interfaces/Column-1.html":{},"injectables/SEOService.html":{}}}],["wednesday",{"_index":920,"title":{},"body":{"interfaces/Column-1.html":{}}}],["week",{"_index":1267,"title":{},"body":{"interfaces/Column-1.html":{}}}],["welcome",{"_index":1688,"title":{},"body":{"components/HomeComponent.html":{}}}],["well",{"_index":590,"title":{},"body":{"interfaces/Column.html":{},"components/IndexComponent.html":{}}}],["went",{"_index":1831,"title":{},"body":{"injectables/HttpService.html":{}}}],["whenever",{"_index":1508,"title":{},"body":{"components/FavouriteVehicleComponent.html":{},"components/SearchAlertComponent.html":{}}}],["whether",{"_index":639,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"injectables/LoaderService.html":{}}}],["whose",{"_index":1377,"title":{},"body":{"injectables/CommonService.html":{}}}],["widowed",{"_index":2658,"title":{},"body":{"miscellaneous/variables.html":{}}}],["width",{"_index":1237,"title":{},"body":{"interfaces/Column-1.html":{},"components/IndexComponent.html":{}}}],["window",{"_index":310,"title":{},"body":{"injectables/CSVService.html":{}}}],["withcredentials",{"_index":1807,"title":{},"body":{"injectables/HttpService.html":{}}}],["within",{"_index":660,"title":{},"body":{"interfaces/Column.html":{}}}],["withinterceptors",{"_index":2393,"title":{},"body":{"modules/UserModule.html":{}}}],["without",{"_index":1546,"title":{},"body":{"components/ForgetPasswordComponent.html":{}}}],["word",{"_index":1359,"title":{},"body":{"injectables/CommonService.html":{}}}],["words",{"_index":1700,"title":{},"body":{"components/HomeComponent.html":{}}}],["wrapped",{"_index":271,"title":{},"body":{"injectables/CSVService.html":{}}}],["wrong",{"_index":1832,"title":{},"body":{"injectables/HttpService.html":{}}}],["wtdt38hxv9",{"_index":2720,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xxxxxx'.replace(/[x]/g",{"_index":1410,"title":{},"body":{"injectables/CommonService.html":{}}}],["year",{"_index":567,"title":{},"body":{"interfaces/Column.html":{}}}],["yes",{"_index":575,"title":{},"body":{"interfaces/Column.html":{},"interfaces/Column-1.html":{},"components/HomeComponent-1.html":{},"miscellaneous/variables.html":{}}}],["you're",{"_index":1864,"title":{},"body":{"components/IndexComponent.html":{}}}],["yt",{"_index":827,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["yukon",{"_index":826,"title":{},"body":{"interfaces/Column-1.html":{},"components/ProfileComponent.html":{}}}],["z]+$/.test(key",{"_index":1389,"title":{},"body":{"injectables/CommonService.html":{}}}],["zone.js",{"_index":2577,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":2371,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterOutlet\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n            \n                styleUrl\n                ./app.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Auto Credit Co'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'Auto Credit Co';\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utilities/services/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                    Async\n                                OnLogout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/utilities/services/auth.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \nisLoggedIn()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/auth.service.ts:25\n                        \n                    \n\n\n            \n                \n                        Checks if the user is currently logged in.\nThis function retrieves the current user object from the local storage.\nIf the user object exists and has at least one property, the function returns true.\nOtherwise, it returns false.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                True if the user is logged in, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OnLogout\n                        \n                    \n                \n            \n            \n                \n                        \n                    OnLogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/auth.service.ts:44\n                        \n                    \n\n\n            \n                \n                        Logs out the current user by deleting authentication from the database and clearing local storage.\nThis function performs the following steps:\n\nSends a DELETE request to the 'authentication' endpoint.\nIf the request is successful, it removes the 'user' and 'store' items from local storage.\nThe function does not handle redirection; that should be managed by the calling component.\n\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the logout process is complete.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LocalStorageService } from './local-storage.service';\nimport { HttpService } from './http.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  constructor(\n    private readonly httpService: HttpService,\n    private readonly localStorageService: LocalStorageService\n  ) { }\n\n  /**\n   * Checks if the user is currently logged in.\n   *\n   * @returns {boolean} True if the user is logged in, false otherwise.\n   *\n   * @remarks\n   * This function retrieves the current user object from the local storage.\n   * If the user object exists and has at least one property, the function returns true.\n   * Otherwise, it returns false.\n   */\n  isLoggedIn(): boolean {\n    const currentUser = this.localStorageService.getObject('user');\n    return !!(currentUser && Object.keys(currentUser).length > 0)\n  }\n\n\n  /**\n   * Logs out the current user by deleting authentication from the database and clearing local storage.\n   *\n   * @returns {Promise} A promise that resolves when the logout process is complete.\n   *\n   * @remarks\n   * This function performs the following steps:\n   * 1. Sends a DELETE request to the 'authentication' endpoint.\n   * 2. If the request is successful, it removes the 'user' and 'store' items from local storage.\n   * 3. The function does not handle redirection; that should be managed by the calling component.\n   *\n   * @throws Will throw an error if the HTTP delete request fails.\n   */\n  async OnLogout(): Promise {\n    // delete auth from db\n    const respose: any = await this.httpService.delete('authentication');\n    if (respose.success) {\n      // clear local storage and redirect to login\n      this.localStorageService.remove('user');\n      this.localStorageService.remove('store');\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CSVService.html":{"url":"injectables/CSVService.html","title":"injectable - CSVService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CSVService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utilities/services/csv.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ConvertToCSV\n                            \n                            \n                                CSVToJSON\n                            \n                            \n                                downloadFile\n                            \n                            \n                                strRep\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/utilities/services/csv.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ConvertToCSV\n                        \n                    \n                \n            \n            \n                \nConvertToCSV(objData: any, headerList: Array, fieldList: Array)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/csv.service.ts:68\n                        \n                    \n\n\n            \n                \n                        Converts an array of objects into a CSV string format.\nThis function takes an array of objects and converts it into a CSV (Comma-Separated Values)\nstring. It uses the provided header list for the first row and extracts values from the\nobjects based on the field list.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                objData\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be converted. Can be either a JSON string or an array of objects.\n\n\n                                            \n                                        \n                                        \n                                                headerList\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn array of strings representing the headers for the CSV.\n\n\n                                            \n                                        \n                                        \n                                                fieldList\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn array of strings representing the object keys to be used for data extraction.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string in CSV format, with headers as the first row followed by data rows.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CSVToJSON\n                        \n                    \n                \n            \n            \n                \nCSVToJSON(data: any, delimiter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/csv.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Converts a CSV string to a JSON object.\nThis function takes a CSV formatted string and converts it into an array of JSON objects.\nThe first line of the CSV is assumed to be the header row, which is used to create the\nproperty names for each object.\nExample :     with properties named according to the CSV headers.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe CSV formatted string to be converted.\n\n\n                                            \n                                        \n                                        \n                                                delimiter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ','\n                                            \n\n                                            \n                                                    \nThe character used to separate values in the CSV. Defaults to ','.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     any[]\n\n                        \n                            \n                                An array of objects, where each object represents a row from the CSV,\nwith properties named according to the CSV headers.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        downloadFile\n                        \n                    \n                \n            \n            \n                \ndownloadFile(data: any, header: Array, field: Array, filename: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/csv.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                header\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                field\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                        \n                                        \n                                                filename\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'data'\n                                            \n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strRep\n                        \n                    \n                \n            \n            \n                \nstrRep(data: string | number | undefined | object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/csv.service.ts:105\n                        \n                    \n\n\n            \n                \n                        Converts various data types to string representations suitable for CSV format.\nThis function handles different data types and formats them appropriately for CSV output:\n\nUndefined or null values are converted to \"N/A\"\nStrings are wrapped in quotes\nArrays of objects are processed based on specific properties (url, label, or header)\nSimple arrays are joined with commas and wrapped in quotes\nNumbers are converted to strings and wrapped in quotes\nBooleans are converted to \"Active\" or \"Inactive\"\nOther types are returned as-is\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        string | number | undefined | object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe input data to be converted. Can be a string, number, undefined, or object (including arrays)\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     string | object\n\n                        \n                            \n                                A string representation of the input data, formatted for CSV output\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CSVService {\n\n  constructor() { }\n\n  downloadFile(data: any, header: Array, field: Array, filename = 'data') {\n    // const arrHeader = [\"name\", \"age\", \"country\", \"phone\"];\n    const csvData = this.ConvertToCSV(data, header, field); // arrHeader - argumanet\n    // console.log(csvData);\n    // return\n    const blob = new Blob(['\\ufeff' + csvData], { type: 'text/csv;charset=utf-8;' });\n    const dwldLink = document.createElement(\"a\");\n    const url = URL.createObjectURL(blob);\n    const isSafariBrowser = navigator.userAgent.indexOf('Safari') != -1 && navigator.userAgent.indexOf('Chrome') == -1;\n    if (isSafariBrowser) {  //if Safari open in new window to save file with random filename.\n      dwldLink.setAttribute(\"target\", \"_blank\");\n    }\n    dwldLink.setAttribute(\"href\", url);\n    dwldLink.setAttribute(\"download\", filename);\n    dwldLink.style.visibility = \"hidden\";\n    document.body.appendChild(dwldLink);\n    dwldLink.click();\n    document.body.removeChild(dwldLink);\n  }\n\n  /**\n   * Converts a CSV string to a JSON object.\n   *\n   * This function takes a CSV formatted string and converts it into an array of JSON objects.\n   * The first line of the CSV is assumed to be the header row, which is used to create the\n   * property names for each object.\n   *\n   * @param data - The CSV formatted string to be converted.\n   * @param delimiter - The character used to separate values in the CSV. Defaults to ','.\n   * @returns An array of objects, where each object represents a row from the CSV,\n   *          with properties named according to the CSV headers.\n   */\n  CSVToJSON(data: any, delimiter = ','): any[] {\n    const titles = data.slice(0, data.indexOf('\\n')).split(delimiter);\n    return data\n      .slice(data.indexOf('\\n') + 1)\n      .split('\\n')\n      .map((v: any) => {\n        const values = v.split(delimiter);\n        return titles.reduce(\n          (obj: any, title: any, index: any) => ((obj[title] = values[index]), obj),\n          {}\n        );\n      });\n  };\n\n  /**\n   * Converts an array of objects into a CSV string format.\n   * \n   * This function takes an array of objects and converts it into a CSV (Comma-Separated Values) \n   * string. It uses the provided header list for the first row and extracts values from the \n   * objects based on the field list.\n   *\n   * @param objData - The data to be converted. Can be either a JSON string or an array of objects.\n   * @param headerList - An array of strings representing the headers for the CSV.\n   * @param fieldList - An array of strings representing the object keys to be used for data extraction.\n   * @returns A string in CSV format, with headers as the first row followed by data rows.\n   */\n  ConvertToCSV(objData: any, headerList: Array, fieldList: Array) {\n    const array = typeof objData != 'object' ? JSON.parse(objData) : objData;\n    let str = '';\n    let row = '';\n  \n    for (const index in headerList) {\n      row += `\"${headerList[index]}\",`;\n    }\n    row = row.slice(0, -1);\n    str += `${row}\\r\\n`;\n    for (const element of array) {\n      let line = '';\n      for (const index in fieldList) {\n        const head = fieldList[index];\n  \n        line += line === '' ? this.strRep(element[head]) : `,${this.strRep(element[head])}`;\n      }\n      str += `${line}\\r\\n`;\n    }\n    return str;\n  }\n\n  /**\n   * Converts various data types to string representations suitable for CSV format.\n   * \n   * This function handles different data types and formats them appropriately for CSV output:\n   * - Undefined or null values are converted to \"N/A\"\n   * - Strings are wrapped in quotes\n   * - Arrays of objects are processed based on specific properties (url, label, or header)\n   * - Simple arrays are joined with commas and wrapped in quotes\n   * - Numbers are converted to strings and wrapped in quotes\n   * - Booleans are converted to \"Active\" or \"Inactive\"\n   * - Other types are returned as-is\n   * \n   * @param data - The input data to be converted. Can be a string, number, undefined, or object (including arrays)\n   * @returns A string representation of the input data, formatted for CSV output\n   */\n  strRep(data: string | number | undefined | object) {\n    if (typeof data == \"undefined\") {\n      return \"N/A\";\n    } else if (data === null) {\n      return \"N/A\";\n    } else if (typeof data == \"string\") {\n      return `\"${data}\"`;\n    } else if (typeof data == \"object\" && Array.isArray(data) && typeof data[0] === \"object\") {\n      let line = '';\n      if(data[0].url) {\n        line = data.map((obj: any) =>  { return obj.url }).join(',');\n      } else if(data[0].label) {\n        line = data.map((obj: any) =>  { return obj.label }).join(',');\n      } else {\n        line = data.map((obj: any) =>  { return obj.header }).join(',');\n      }\n      return `\"${line}\"`;\n    }\n    else if (Array.isArray(data)) {\n      return `\"${data.join(', ')}\"`;\n    }\n    else if (typeof data == \"number\") {\n      return `\"${data}\"`;\n    }\n    else if (typeof data == \"boolean\") {\n      return data ? \"Active\" : \"Inactive\";\n    }\n    else {\n      return data;\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CarForm.html":{"url":"interfaces/CarForm.html","title":"interface - CarForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CarForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/car-manage/car.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Array\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type element = 'textbox' | 'dropdown' | 'select-button' | 'textarea' | 'upload' | 'checkbox' | 'editor' | 'multi-select' | 'selection' | 'multi-choice'\ntype textBoxtype = 'normal' | 'date' | 'money' | 'currency' | 'group'  | 'number'\n\nexport interface CarForm {\n    name: string,\n    value: string,\n    data: Array\n}\n\nexport interface CommonElement {\n    type: element,\n    name: string,\n    datatype: string, // type like number, text\n    placeholder: string,\n    value: any, // set default value\n    format: textBoxtype, // format for textbox only\n    readonly: boolean, // make element readonly\n    data: LabelValueData[],\n    search: LabelValueData[], // store auto complete - multi select search result\n    accept: string, // file format extentions\n    class: string,\n    multiple: boolean, // file selection,\n    mode: string, // media mode - add or delete\n    required: boolean,\n    error: string, // set error for element\n    pattern?: { type: string, label: string, value: string }, // for specific textbox format regex\n    dateFormat: string, // date format\n    minDate: Date, // min date\n    keyFilter: string, // data enter format with primeng int, alphanum\n    maxSize: number, // file maxsize\n    note: string, // note for specific element\n    group_right: string, // input group element\n    group_left: string, // input group element\n    group_string: string, // input group element\n    dependant: boolean, // check dependant on any element\n    dependant_field: string, // get dependant field if dependant,\n    onChange: boolean, // modify toggle as per dependant validation,\n    changeField: string, // set disable field for main element,\n    element: any // multiple selection field\n    removed: boolean, // remove element from selection form\n}\n\nexport interface LabelValueData {\n    label: string,\n    value: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Column.html":{"url":"interfaces/Column.html","title":"interface - Column","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Column\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/car-list/car-list.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Router } from '@angular/router';\n\n// date format\nimport dayjs from 'dayjs';\n\n// custom service\nimport { HttpService } from '../../../utilities/services/http.service';\nimport { CommonService } from '../../../utilities/services/common.service';\nimport { LocalStorageService } from '../../../utilities/services/local-storage.service';\nimport { CSVService } from '../../../utilities/services/csv.service';\n\n// primeng\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { TablePageEvent } from 'primeng/table';\nimport { InputSwitchChangeEvent } from 'primeng/inputswitch';\n\ninterface Column {\n  field: string;\n  header: string;\n}\n\n@Component({\n  selector: 'app-car-list',\n  templateUrl: './car-list.component.html',\n  styleUrl: './car-list.component.scss',\n  encapsulation: ViewEncapsulation.None\n})\nexport class CarListComponent implements OnInit {\n\n  cols!: Column[]; // table column list\n  arrCarList: any = []; // store car's by api\n  arrFilterList: any; // store filter to show lable of perticular filter\n  selectedColumns!: Column[]; // selected column default list\n  arrTableContentTitle = ['category', 'condition', 'status', 'publish_to']; // field to change content to title case\n\n  page = 0;\n  limit = 10;\n\n  responsiveOptions: any[] | undefined; // resposive html element of primng\n\n  isExportCSVDialogOpen: boolean = false;\n  colsCSVSelected!: any; // table column list\n  arrCarListCopy: any = []; // Store CSV data with label\n\n  arrListingStatus = [\n    { label: 'live', icon: 'local_shipping' },\n    { label: 'sold', icon: 'car_tag', info: 'When a vehicle is sold, you can change its listing status to Sold to remove it from the marketplace and label it as \"Sold\" for your reporting purposes.\\n\\nInventory that has been placed and remains in the Sold or Removed status for more than 30 days will be completely removed from these folders and no longer accessible. If you need to keep any vehicle offline for more than 30 days, we suggest that you move these vehicles to the Staging section.' },\n    { label: 'removed', icon: 'auto_delete', info: 'if you want to remove a listing from the marketplace, but the vehicle has not been sold, then you can change its listing status to Removed.\\n\\nInventory that has been placed and remains in the Sold or Removed status for more than 30 days will be completely removed from these folders and no longer accessible. If you need to keep any vehicle offline for more than 30 days, we suggest that you move these vehicles to the Staging folder.' },\n    { label: 'staging', icon: 'downloading', info: 'A listing with a status of Staging is not live, but exists for you to keep preparing until you are ready to go live.' }\n  ];\n  strCurrentCarStatusList = 'live';\n\n  constructor(\n    private readonly router: Router,\n    readonly commonService: CommonService,\n    private readonly csvService: CSVService,\n    private readonly httpService: HttpService,\n    private readonly messageService: MessageService,\n    private readonly confirmationService: ConfirmationService,\n    readonly localStorageService: LocalStorageService\n  ) { }\n\n  /**\n   * Initializes the component by fetching the car list.\n   * This method is called automatically by Angular when the component is initialized.\n   * It asynchronously retrieves the car list based on the current car status list.\n   * \n   * @returns A Promise that resolves to void when the initialization is complete.\n   */\n  async ngOnInit(): Promise {\n    await this.getCarList(this.strCurrentCarStatusList);\n  }\n\n  /**\n * Retrieves and processes the car list based on the given status and pagination event.\n * This method handles user authentication, fetches car data, and prepares it for display and export.\n * \n * @param status - The status of the cars to retrieve (e.g., 'live', 'sold', 'removed', 'staging').\n * @param event - Optional. The table pagination event containing information about the current page and rows per page.\n * @returns A Promise that resolves when the car list has been retrieved and processed.\n *          If there's no car data or the user is redirected, the function may return early.\n */\n  async getCarList(status: string, event?: TablePageEvent) {\n\n    // check user type\n    const isUserDealer = this.localStorageService.userIsDealer();\n\n    // check user is dealer or store\n    let storeOrUser = this.localStorageService.get('store');\n    if (!storeOrUser && isUserDealer) {\n      this.router.navigateByUrl('/user/store');\n      return\n    }\n\n    if (!isUserDealer) {\n      storeOrUser = this.localStorageService.getObject('user').identifier;\n    }\n\n    // check if paginate then update default value\n    if (event) {\n      this.page = event.first / event.rows;\n      this.limit = event.rows;\n    }\n\n    // get filter's to set filter field's in column\n    this.arrFilterList = (await this.httpService.get('filter') as any).data;\n\n    // get dynamic data from filter\n    this.arrCarList = await this.httpService.get(`car/user/${storeOrUser}/${status}?page=${this.page}&limit=${this.limit}`);\n    if (!this.arrCarList?.data.length) {\n      return\n    }\n\n    //copy car list data for csv\n    this.arrCarListCopy = JSON.parse(JSON.stringify(this.arrCarList.data));\n\n    // make list for earliest display column \n    const arrTempSequence = ['images', 'category', 'make', 'model', 'year', 'vin_number', 'condition', 'status', 'asking_price'];\n    // add in table column list\n    this.cols = arrTempSequence.map((key: string) => { return { field: key, header: this.commonService.replaceStringToCapitalize(key) } });\n    // check there is other columns in array - yes then include after earlist column list\n    Object.keys(this.arrCarList?.data[0]).map((key: string) => {\n      const isExist = this.cols.find((element: Column) => element.field === key)\n      if (isExist || key === '_id' || key === 'description' || key === 'warrenty_description'\n        || key === 'videos' || key === 'images' || key === 'video_url') return // if is exist then return - prevent duplication & remove id as well\n      this.cols.push({ field: key, header: this.commonService.replaceStringToCapitalize(key) });\n    });\n    // add earlist column list in selected column by default\n    this.selectedColumns = arrTempSequence.map((key: string) => { return { field: key, header: this.commonService.replaceStringToCapitalize(key) } });\n\n    //export CSV\n    // copy cols array to select field on export csv\n    this.colsCSVSelected = JSON.parse(JSON.stringify(this.cols));\n    this.colsCSVSelected = this.colsCSVSelected.filter((col: any) => !['active', 'location', 'createdBy', 'category'].includes(col.field));\n    this.arrCarListCopy.forEach((car: any) => {\n      Object.keys(car).forEach((key: string) => {\n        if (this.checkFieldIsFromFilter(key)) {\n          car[key] = this.checkFilterTitleFromFilterList(key, car[key]);\n        }\n      })\n    });\n  }\n\n  /**\n   * Updates the active status of a car.\n   * \n   * This asynchronous function sends a request to update the active status of a car\n   * based on the provided input switch event. If the update is successful, it displays\n   * a success message and refreshes the car list.\n   * \n   * @param event - The InputSwitchChangeEvent containing the new active status.\n   * @param id - The unique identifier of the car to be updated.\n   * @returns A Promise that resolves when the car status has been updated and the car list has been refreshed.\n   */\n  async activeStatusCar(event: InputSwitchChangeEvent, id: string) {\n    // send request to active / deactive car data\n    const result: any = await this.httpService.patch('car/status/' + id, { active: event.checked });\n    if (result.success) {\n      this.messageService.add({ severity: 'secondary', summary: 'Success', detail: 'Car status is updated!' });\n      await this.getCarList(this.strCurrentCarStatusList);\n    }\n  }\n\n  /**\n   * Finds the primary image of a car based on the lowest position value.\n   * \n   * @param car - An array of image objects representing the car's images.\n   *              Each image object is expected to have a 'position' property.\n   * \n   * @returns The image object with the lowest position value, which is considered\n   *          the primary image. If no images are found, it returns undefined.\n   */\n  findCarPrimaryImage(car: any) {\n    return car.find((image: any) => image.position === Math.min(...car.map((img: any) => img.position)));\n  }\n\n  /**\n   * Checks if the given header should be converted to title case.\n   * \n   * This function determines whether the provided header string should be\n   * transformed into title case based on a predefined list of headers\n   * stored in the `arrTableContentTitle` array.\n   *\n   * @param header - The header string to check for title case conversion.\n   * @returns The matching header string if found in the predefined list, otherwise undefined.\n   */\n  checkTitleShouldToChange(header: string) {\n    return this.arrTableContentTitle.find((search: string) => search === header);\n  }\n\n  /**\n   * Checks if the given field is a filter field based on the component's filter list.\n   * \n   * This function determines whether a field is considered a filter field by searching\n   * for it in the component's filter list and checking its type. A field is considered\n   * a filter field if it exists in the filter list and its type is either 'textbox-list'\n   * or 'checkbox'.\n   *\n   * @param field - The name of the field to check.\n   * @returns A boolean value. Returns true if the field is a filter field (exists in the\n   *          filter list and has a type of 'textbox-list' or 'checkbox'), false otherwise.\n   */\n  checkFieldIsFromFilter(field: string) {\n    const filter = this.arrFilterList.find((element: any) => element.name.value === field);\n    return filter && (filter.type === 'textbox-list' || filter.type === 'checkbox');\n  }\n\n  /**\n   * Checks if the given data is an array.\n   * \n   * This function uses the Array.isArray() method to determine whether\n   * the provided data is an array or not.\n   *\n   * @param data - The value to be checked. Can be of any type.\n   * @returns A boolean value. Returns true if the data is an array, false otherwise.\n   */\n  checkFieldIsArray(data: any): boolean {\n    return Array.isArray(data);\n  }\n\n  /**\n   * Retrieves the label for a given filter and title from the filter list.\n   * \n   * This function searches the component's filter list for a matching filter and title,\n   * and returns the corresponding label. If no match is found, it returns a default value.\n   *\n   * @param filter - The name of the filter to search for in the filter list.\n   * @param title - The value to match within the found filter's data.\n   * @returns The label corresponding to the matched filter and title. \n   *          Returns '---' if no match is found.\n   */\n  checkFilterTitleFromFilterList(filter: string, title: string) {\n    const data = this.arrFilterList.find((element: any) => element.name.value === filter).data.find((data: any) => data.value === title);\n    if (!data) {\n      return '---';\n    }\n    return data.label;\n  }\n\n  /**\n   * Downloads a CSV file containing selected car data.\n   * \n   * This method filters the selected columns from `colsCSVSelected`,\n   * extracts the headers and fields, and then uses the `csvService`\n   * to generate and download a CSV file named 'cars.csv' with the\n   * filtered car data.\n   * \n   * @returns {void} This method doesn't return a value but triggers\n   *                 a file download in the user's browser.\n   */\n  downloadCSV(): void {\n    const header = this.colsCSVSelected.filter((row: any) => row.selected).map((row: Column) => { return row.header });\n    const field = this.colsCSVSelected.filter((row: any) => row.selected).map((row: Column) => { return row.field });\n    this.csvService.downloadFile(this.arrCarListCopy, header, field, 'cars.csv');\n  }\n\n  /**\n   * Generates and downloads a CSV file formatted for AutoTrader with car listing information.\n   * \n   * This method processes the car list data, formats it according to AutoTrader's specifications,\n   * and initiates a download of the resulting CSV file. It includes details such as car\n   * specifications, VIN information, photo URLs, and last modified dates.\n   * \n   * The function performs the following steps:\n   * 1. Defines the CSV header and corresponding field names.\n   * 2. Iterates through the car list, extracting and formatting relevant information.\n   * 3. Identifies the primary photo and additional photos for each car.\n   * 4. Formats dates according to AutoTrader's requirements.\n   * 5. Generates the CSV file and triggers its download.\n   * \n   * @returns {void} This method doesn't return a value but triggers a file download\n   *                 of 'autotrader.csv' in the user's browser.\n   */\n  downloadAutoTraderCSV(): void {\n    const header = ['Year', 'Make', 'Model', 'Stock Number', 'VIN Number', 'VIN Status', 'Unique Identifier', 'Ad Last Modified Date', 'Photo', 'Photo Last Modified Date', 'Additional Photos', 'Additional Photos Last Modified Date'];\n    const field = ['year', 'make', 'model', 'stock_number', 'vin_number', 'vin_status', 'unique_identifier', 'update_at', 'photo', 'photo_date', 'additional_photos', 'additional_photos_date'];\n    const arrTemp: any = [];\n    this.arrCarListCopy.forEach((car: any) => {\n      const minPosition = Math.min(...car.images.map((image: any) => { return image.position }));\n      const arrOtherImages = car.images.filter((image: any) => image.position !== minPosition);\n      arrTemp.push({\n        year: car.year,\n        make: car.make,\n        model: car.model,\n        stock_number: car.stock_number ?? 'n/a',\n        vin_number: car.vin_number ?? 'n/a',\n        vin_status: car.condition ?? 'n/a',\n        unique_identifier: 'stock',\n        update_at: dayjs(car.updatedAt).format('MM/DD/YYYY HH:mm:ss'),\n        photo: String(car.images[minPosition].url),\n        photo_date: dayjs(car.images[minPosition].date).format('MM/DD/YYYY HH:mm:ss'),\n        additional_photos: (arrOtherImages.map((image: any) => { return image.url })).join(','),\n        additional_photos_date: (arrOtherImages.map((image: any) => { return dayjs(image.date).format('MM/DD/YYYY HH:mm:ss') })).join(','),\n      })\n    });\n    this.csvService.downloadFile(arrTemp, header, field, 'autotrader.csv');\n  }\n\n  /**\n   * Redirects the user to the car management page after checking their profile status.\n   * If the user is not a dealer, it checks if they have an address in their profile.\n   * If no address is found, it prompts the user to add an address before proceeding.\n   * \n   * @param event - The event object that triggered this function. Used to target the confirmation dialog.\n   * @returns A Promise that resolves when the redirection is complete or the confirmation dialog is shown.\n   *          The function doesn't return any value explicitly, but may redirect the user to different pages.\n   */\n  async redirectToAddCar(event: any): Promise {\n    if (!this.localStorageService.userIsDealer()) {\n      // get user profile\n      const user: any = await this.httpService.get('user/profile');\n      if (!user.address) {\n        this.confirmationService.confirm({\n          target: event.target as EventTarget,\n          message: 'There is no address in your profile, Kindly add address first to add advertisement?',\n          header: 'Caution',\n          icon: 'pi pi-exclamation-triangle',\n          key: 'addressUser',\n          rejectButtonStyleClass: \"p-button-text\",\n          accept: () => {\n            this.router.navigateByUrl('/user/profile');\n          },\n          reject: () => {\n          }\n        });\n        return\n      }\n    }\n    this.router.navigateByUrl('/user/car-manage');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Column-1.html":{"url":"interfaces/Column-1.html","title":"interface - Column-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Column\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/store/store.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            field\n                                        \n                                \n                                \n                                        \n                                            header\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        header\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        header:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\n\n// custom service\nimport { HttpService } from '../../../utilities/services/http.service';\nimport { environment } from '../../../../environments/environment';\nimport { LocalStorageService } from '../../../utilities/services/local-storage.service';\n\n// primeng\nimport { MessageService } from 'primeng/api';\nimport { Router } from '@angular/router';\n\n// crop logo\nimport { ImageCroppedEvent, ImageCropperComponent } from 'ngx-image-cropper';\nimport { CSVService } from '../../../utilities/services/csv.service';\n\ninterface Column {\n  field: string;\n  header: string;\n}\n\n@Component({\n  selector: 'app-store',\n  templateUrl: './store.component.html',\n  styleUrl: './store.component.scss'\n})\nexport class StoreComponent implements OnInit {\n\n  cols!: Column[]; // table column list\n  arrUserStores: any | undefined; // store all store\n  arrRemoteService: any; // store remote services\n  arrState = [\n    { label: 'Alberta', value: 'AB' },\n    { label: 'British Columbia', value: 'BC' },\n    { label: 'New Brunswick', value: 'NB' },\n    { label: 'Manitoba', value: 'MB' },\n    { label: 'Newfoundland and Labrador', value: 'NL' },\n    { label: 'Northwest Territories', value: 'NT' },\n    { label: 'Nova Scotia', value: 'NS' },\n    { label: 'Nunavut', value: 'NU' },\n    { label: 'Ontario', value: 'ON' },\n    { label: 'Quebec', value: 'QC' },\n    { label: 'Prince Edward Island', value: 'PE' },\n    { label: 'Saskatchewan', value: 'SK' },\n    { label: 'Yukon', value: 'YT' },\n  ]; // state list for address\n  arrCity: any; // city list for address\n  isCreateStoreDialogOpen: boolean = false; // open store form dialog\n  arrStoreStatus = [\n    { label: 'In Process', value: 'in_process', color: 'bluegray' },\n    { label: 'Verified', value: 'verified', color: 'purple' },\n    { label: 'Rejected', value: 'rejected', color: 'red' },\n    { label: 'Action Required', value: 'action_required', color: 'orange' },\n    { label: 'Not Assign', value: 'not_assign', color: 'teal' },\n    { label: 'Assign', value: 'assign', color: 'blue' }\n  ];\n\n  strUploadError: string | undefined; // store image upload error\n  strStorePatchURL: any; // store image base64 string and load image\n  file: File | null = null; // Variable to store file\n  strFormButtonTitle: string = 'Add Store'; // change foprm submit button title as per condition\n  isLogoChanged: boolean = false;;\n  strCurrentEditStoreID: string | undefined;\n\n  // view record\n  isViewDialogOpen: boolean = false;\n  currentRecordToView: any;\n\n  // timeline response\n  isTimelineResponseDialogOpen: boolean = false;\n  formTimelineResponse = new FormGroup({\n    store: new FormControl(null, [Validators.required]),\n    note: new FormControl(null, [Validators.required]),\n    status: new FormControl(null, [Validators.required])\n  })\n  isTimelineResponseLoading: boolean = false;\n\n  // map validation\n  strGoogleMapAPIKey = environment.google_key; // get google key\n  isValidationMapModalOpen: boolean = false; // open verify address modal\n  strCurrentAddressLatLng: google.maps.LatLngLiteral | undefined; // set current lat lng to show default map\n  isAddressVefied: boolean = false; // check user verifed address\n  isAddressChanged: boolean = false; // check user changed any field in address, if then verify them forcefully\n  markerOptions: google.maps.MarkerOptions = { draggable: false };\n  markerPositions: google.maps.LatLngLiteral[] = []; // add company location to mark in map\n\n  // logo crop\n  isCropDialogOpen: boolean = false;\n  imageChangedEvent: Event | null = null;\n  isLogoChangeOnUpdate: boolean = false;\n  @ViewChild(\"cropperLogo\") cropperLogo!: ImageCropperComponent;\n\n  // store operation loading\n  isStoreOperationLoading: boolean = false;\n\n  arrCustomService = [\n    'Connect with us for an online consultation',\n    'Receive contactless vehicle delivery',\n    'Buy online with Performance Concierge'\n  ]; // custom template for custom services\n\n  // form company information\n  formStore = new FormGroup({\n    address: new FormGroup({\n      unit: new FormControl(null, [Validators.required]),\n      street: new FormControl(null, [Validators.required]),\n      city: new FormControl(null, [Validators.required]),\n      state: new FormControl(null, [Validators.required]),\n      country: new FormControl('Canada', [Validators.required]),\n      postal_code: new FormControl(null, [Validators.required])\n    }),\n    time: new FormGroup({\n      monday: new FormGroup({\n        in: new FormControl('09:00'),\n        out: new FormControl('18:00'),\n        close: new FormControl(false),\n      }),\n      tuesday: new FormGroup({\n        in: new FormControl('09:00'),\n        out: new FormControl('18:00'),\n        close: new FormControl(false),\n      }),\n      wednesday: new FormGroup({\n        in: new FormControl('09:00'),\n        out: new FormControl('18:00'),\n        close: new FormControl(false),\n      }),\n      thusday: new FormGroup({\n        in: new FormControl('09:00'),\n        out: new FormControl('18:00'),\n        close: new FormControl(false),\n      }),\n      friday: new FormGroup({\n        in: new FormControl('09:00'),\n        out: new FormControl('18:00'),\n        close: new FormControl(false),\n      }),\n      saturday: new FormGroup({\n        in: new FormControl('09:00'),\n        out: new FormControl('18:00'),\n        close: new FormControl(false),\n      }),\n      sunday: new FormGroup({\n        in: new FormControl('09:00'),\n        out: new FormControl('18:00'),\n        close: new FormControl(false),\n      }),\n    }),\n    location: new FormGroup({\n      // lat: new FormControl(null, [Validators.required]),\n      // lng: new FormControl(null, [Validators.required]),\n      type: new FormControl('Point'),\n      coordinates: new FormControl(),\n    }),\n    website: new FormControl(null),\n    google_review: new FormControl(null),\n    finance_apr: new FormControl(null),\n    name: new FormControl(null, [Validators.required]),\n    license_number: new FormControl(null, [Validators.required]),\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    phone: new FormControl(null, [Validators.required]),\n    alias: new FormControl(null, [Validators.required]),\n    remote_services: new FormControl(null),\n    custom_services: new FormControl(null),\n    logo: new FormControl(null),\n  });\n\n  // view store timeline dialog\n  isStoreTimelineDialogOpen: boolean = false;\n  objStoreTimelineDetail = { name: '', timeline: [], need_response: false, status: '' };\n\n  constructor(\n    private readonly csvService: CSVService,\n    private readonly sanitizer: DomSanitizer,\n    private readonly httpService: HttpService,\n    private readonly messageService: MessageService,\n    private readonly localStorageService: LocalStorageService\n  ) { }\n\n  /**\n   * Initializes the component by fetching stores, remote services, and city data.\n   * It also sets up a subscription to monitor address changes in the form.\n   * \n   * This method is called automatically when the component is initialized.\n   * \n   * @returns {Promise} A promise that resolves when all initialization tasks are complete.\n   */\n  async ngOnInit(): Promise {\n    // get current user\n    await this.getStores();\n\n    //get remote services\n    this.arrRemoteService = await this.httpService.get('remote-service/select');\n\n    // set address change if yes force to user to look in google map by marker and verify\n    !(this.formStore.get('address') as FormGroup).valueChanges.subscribe(() => {\n      this.isAddressChanged = true;\n    })\n\n    // find city as per postal code from static CSV file\n    const csv: any = await this.httpService.getWithOutsideURLCSV('assets/csv/canadacities.csv');\n    this.arrCity = this.csvService.CSVToJSON(csv).map((cities: any) => { return { city: cities.city_ascii } });\n  }\n\n  /**\n   * Retrieves the store status object based on the provided status value.\n   * If the status is 'assign' or 'not_assign', it's treated as 'in_process'.\n   * \n   * @param status - The status value to search for in the store status array.\n   * @returns The matching store status object from the arrStoreStatus array, or undefined if not found.\n   */\n  getStoreStatusByValue(status: string) {\n    status = status === 'assign' || status === 'not_assign' ? 'in_process' : status;\n    return this.arrStoreStatus.find((store: any) => store.value === status);\n  }\n\n  /**\n   * Retrieves store information for the dealer and sets up related data structures.\n   * \n   * This function fetches store data from the server, populates the store array,\n   * sets up table columns, and determines if any stores need a response based on\n   * their timeline.\n   * \n   * @returns {Promise} A promise that resolves when the store data has been\n   *                          fetched and processed.\n   */\n  async getStores(): Promise {\n    // get user store\n    const store: any = await this.httpService.get('store/dealer');\n\n    // if user is dealer then then fill all his company information\n    if (store && store.length > 0) {\n      // set current user store\n      this.arrUserStores = store;\n\n      this.cols = [\n        { field: 'logo', header: 'Logo' },\n        { field: 'name', header: 'Name' },\n        { field: 'alias', header: 'Alias' },\n        { field: 'address', header: 'Address' },\n        { field: 'status', header: 'Status' }\n      ];\n\n      this.arrUserStores.forEach((store: any) => {\n        const lastIndex = store.timeline.length - 1;\n        if (lastIndex >= 0 && store.timeline[lastIndex].role === 'agent') {\n          store.need_response = true;\n        }\n      });\n    }\n  }\n\n  /**\n   * Opens the store editing form for a specific store.\n   * \n   * This function finds the store by its ID, populates the form with the store's data,\n   * fetches and sets up the store's logo, and prepares the component for editing mode.\n   * \n   * @param id - The unique identifier of the store to be edited.\n   * @returns A promise that resolves when the store data has been loaded and the form is ready for editing.\n   */\n  async openForEditStore(id: string): Promise {\n    const store = this.arrUserStores.find((store: any) => store._id === id);\n    if (store) {\n      this.isCreateStoreDialogOpen = true;\n      this.formStore.patchValue({\n        address: {\n          unit: store.address.unit,\n          street: store.address.street,\n          city: store.address.city,\n          state: store.address.state,\n          country: store.address.country,\n          postal_code: store.address.postal_code\n        },\n        location: {\n          type: 'Point',\n          coordinates: [store.location.lng, store.location.lat]\n        },\n        time: {\n          monday: {\n            in: store.time.monday.in,\n            out: store.time.monday.out,\n            close: store.time.monday.close,\n          },\n          tuesday: {\n            in: store.time.tuesday.in,\n            out: store.time.tuesday.out,\n            close: store.time.tuesday.close,\n          },\n          wednesday: {\n            in: store.time.wednesday.in,\n            out: store.time.wednesday.out,\n            close: store.time.wednesday.close,\n          },\n          thusday: {\n            in: store.time.thusday.in,\n            out: store.time.thusday.out,\n            close: store.time.thusday.close,\n          },\n          friday: {\n            in: store.time.friday.in,\n            out: store.time.friday.out,\n            close: store.time.friday.close,\n          },\n          saturday: {\n            in: store.time.saturday.in,\n            out: store.time.saturday.out,\n            close: store.time.saturday.close,\n          },\n          sunday: {\n            in: store.time.sunday.in,\n            out: store.time.sunday.out,\n            close: store.time.sunday.close,\n          }\n        },\n        name: store.name,\n        email: store.email,\n        phone: store.phone,\n        alias: store.alias,\n        website: store.website,\n        finance_apr: store.finance_apr,\n        license_number: store.license_number,\n        google_review: store.google_review,\n        remote_services: store.remote_services,\n        custom_services: store.custom_services\n      });\n\n      // load file from url\n      const response = await fetch(store.logo.url, { cache: 'no-cache' });\n      const data = await response.blob();\n      const file = new File([data], store.logo.name, { type: data.type });\n      this.file = file;\n      this.readURL(file);\n\n      this.strFormButtonTitle = 'Update Store';\n      this.strCurrentEditStoreID = id;\n    }\n  }\n\n  /**\n   * Checks if the address group in the form is valid.\n   * \n   * This function retrieves the 'address' form group from the main form\n   * and checks its validity status.\n   * \n   * @returns {boolean} Returns true if the address group is invalid, false otherwise.\n   */\n  checkAddressGroupIsValid(): boolean {\n    return !(this.formStore.get('address') as FormGroup).valid;\n  }\n\n  /**\n   * Validates the address entered in the form using Google Maps API.\n   * \n   * This function retrieves the address from the form, sends a request to the Google Maps\n   * Address Validation API, and processes the response. If the address is valid, it updates\n   * the map marker position and opens the validation map modal. If invalid, it displays an error message.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the address validation process is complete.\n   * @throws {Error} Throws an error if the API request fails.\n   */\n  async validateAddress(): Promise {\n    // get address from form\n    const address = this.formStore.value.address;\n\n    // verify address by google map\n    const url = `https://addressvalidation.googleapis.com/v1:validateAddress?key=${environment.google_key}`;\n    const requestBody = {\n      address: {\n        \"regionCode\": \"CA\",\n        \"addressLines\": [`${address?.unit!} ${address?.street!}`, `${address?.city} ${address?.state} ${address?.postal_code}`]\n      }\n    }\n\n    // call google location api to get location lat lng\n    const response: any = await this.httpService.postWithOutsideURL(url, requestBody);\n\n    // if address is correct then show map with maker\n    if (response.result.address) {\n      this.strCurrentAddressLatLng = { lat: response.result.geocode.location.latitude, lng: response.result.geocode.location.longitude };\n      this.markerPositions = []; // empty marker varray to prevent duplicate pin in map\n      this.markerPositions.push({ lat: response.result.geocode.location.latitude, lng: response.result.geocode.location.longitude }); // add marker in google map\n      this.isValidationMapModalOpen = true; // open google map popup\n    } else {\n      this.messageService.add({ severity: 'error', summary: 'Fail', detail: 'Address is not correct, kindly check all fields.' });\n    }\n  }\n\n  /**\n   * Verifies the address entered by the user and updates the form with the verified location.\n   * \n   * This function updates the form's location field with the latitude and longitude\n   * obtained from the address verification process. It also sets various flags to\n   * indicate that the address has been verified and closes the validation map modal.\n   * \n   * @returns {void}\n   */\n  verifyAddress(): void {\n    this.formStore.patchValue({\n      location: {\n        type: 'Point',\n        coordinates: [this.strCurrentAddressLatLng?.lng, this.strCurrentAddressLatLng?.lat]\n      }\n    });\n    this.isAddressVefied = true;\n    this.isValidationMapModalOpen = false;\n    this.isAddressChanged = false;\n    this.markerPositions = []; // empty marker array to prevent duplicate pin in map\n  }\n\n  /**\n   * Submits the store information to create a new store or update an existing one.\n   * \n   * This function handles the submission of store data, including:\n   * - Opening the store creation dialog\n   * - Processing form data\n   * - Handling logo upload (if applicable)\n   * - Converting phone number to the correct format\n   * - Setting store coordinates\n   * - Sending the data to the server\n   * - Handling the response and updating the UI accordingly\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the store information has been submitted and processed.\n   * @throws {Error} Throws an error if the submission process fails.\n   */\n  async submitStoreInformation(): Promise {\n    this.isCreateStoreDialogOpen = true;\n    this.isStoreOperationLoading = true;\n\n    // process form data\n    const data: any = this.formStore.value;\n\n    // if no new image then remove old logo\n    if (!this.strStorePatchURL) {\n      delete data.logo;\n    }\n\n    // if new image then upload it to aws s3 and set logo data in store object\n    if (this.file) {\n      // send request for upload url to aws s3\n      const urlUploadResult: any = await this.httpService.get(`car/get-url/${this.file.type.split('/')[1]}/lg`);\n      // send object to aws by pre-signed url\n      await this.httpService.putURL(urlUploadResult.data.url, this.file, this.file.type);\n      const objDB = { url: urlUploadResult.data.fullPath, path: urlUploadResult.data.path, field: 'image', name: urlUploadResult.data.mediaName, position: 0, date: new Date() };\n      data.logo = objDB;\n    } else {\n      delete data.logo;\n    }\n\n    // convert phone in number\n    data.phone = Number(data.phone!.replace(/-/g, \"\"));\n\n    // set coordinates\n    data.location.coordinates = [-79.5449069, 43.769757];\n\n    await this.httpService.post('store', data).then(async (response: any) => {\n      if (response.success) {\n        this.isAddressVefied = false;\n        this.isAddressChanged = false;\n        this.resetForm();\n        await this.getStores();\n        this.messageService.add({ severity: 'secondary', summary: 'Done', detail: 'Store Added Successfully' });\n        setTimeout(() => {\n          location.reload();\n        }, 2000);\n      }\n    }).catch((error: any) => {\n      this.messageService.add({ severity: 'error', summary: 'Fail', detail: error, life: 5000 });\n    }).finally(() => {\n      this.isStoreOperationLoading = false;\n    });\n  }\n\n\n  /**\n   * Updates the information of an existing store.\n   * \n   * This function handles the update process for a store, including logo updates,\n   * user association, and location coordinates. It sends the updated data to the server\n   * and handles the response.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the store information has been updated.\n   * @throws {Error} Throws an error if the update process fails.\n   */\n  async updateStorInformation(): Promise {\n    const store = this.arrUserStores.find((store: any) => store._id === this.strCurrentEditStoreID);\n    const data: any = this.formStore.value;\n\n    if (this.isLogoChanged) {\n      // check it's cropped imaage or not\n      if (!this.strStorePatchURL.changingThisBreaksApplicationSecurity) {\n        // send request for upload url to aws s3\n        const urlUploadResult: any = await this.httpService.get(`car/get-url/${this.file!.type.split('/')[1]}/lg`);\n        // send object to aws by pre-signed url\n        await this.httpService.putURL(urlUploadResult.data.url, this.file, this.file!.type);\n        const objDB = { url: urlUploadResult.data.fullPath, path: urlUploadResult.data.path, field: 'image', name: urlUploadResult.data.mediaName, position: 0, date: new Date() };\n        data.logo = objDB;\n      } else {\n        // load file from url\n        const response = await fetch(this.strStorePatchURL.changingThisBreaksApplicationSecurity, { cache: 'no-cache' });\n        const dataImage = await response.blob();\n        const file = new File([dataImage], 'logo.jpg', { type: dataImage.type });\n        // send request for upload url to aws s3\n        const urlUploadResult: any = await this.httpService.get(`car/get-url/${file.type.split('/')[1]}/lg`);\n        // send object to aws by pre-signed url\n        await this.httpService.putURL(urlUploadResult.data.url, file, file.type);\n        const objDB = { url: urlUploadResult.data.fullPath, path: urlUploadResult.data.path, field: 'image', name: urlUploadResult.data.mediaName, position: 0, date: new Date() };\n        data.logo = objDB;\n      }\n    } else {\n      data.logo = store.logo\n    }\n\n    // get user from storage\n    data.user = this.localStorageService.getObject('user').identifier;\n\n    // set coordinates\n    data.location.coordinates = [store.location.coordinates[0], store.location.coordinates[1]];\n\n    // return\n    await this.httpService.patch(`store/${this.strCurrentEditStoreID}`, data).then(async (response: any) => {\n      if (response.success) {\n        this.isAddressVefied = false; // set false again after submit data\n        this.isAddressChanged = false; // address change mode reset to false\n        this.resetForm();\n        await this.getStores();\n        this.messageService.add({ severity: 'secondary', summary: 'Done', detail: 'Store Updated Successfully' });\n        setTimeout(() => {\n          location.reload();\n        }, 2000);\n      }\n    }).catch((error: any) => {\n      this.messageService.add({ severity: 'error', summary: 'Fail', detail: error });\n    });\n  }\n\n  /**\n   * Handles the upload of an image file.\n   * \n   * This function processes the uploaded file, checks for size and type constraints,\n   * and sets up the image for cropping and display. It also manages error states\n   * and updates relevant component properties.\n   * \n   * @param {any} event - The file upload event object. Expected to contain the uploaded file in event.target.files[0].\n   * @returns {void}\n   * \n   * @throws {Error} Implicitly throws an error if file size or type constraints are not met.\n   */\n  onUpload(event: any): void {\n    // set event for image crop\n    this.imageChangedEvent = event;\n\n    // reset error\n    this.strUploadError = undefined;\n\n    // get file from event\n    const file: File = event.target.files[0];\n\n    // check file size\n    if (Math.round(file.size / 205) > 200) {\n      this.strUploadError = \"File size should be less than 200 KB\";\n      return;\n    }\n\n    // check file type\n    if (!['image/jpeg', 'image/jpg'].includes(file.type)) {\n      this.strUploadError = \"File type should be only JPEG or JPG\";\n      return;\n    }\n\n    // set file size and display in uploader\n    this.file = file;\n    this.readURL(file);\n    this.isLogoChanged = true;\n    this.isLogoChangeOnUpdate = true;\n  }\n\n  /**\n   * Handles the file change event for image cropping.\n   * This function updates the component's imageChangedEvent property with the new event,\n   * which is typically used to trigger image cropping functionality.\n   *\n   * @param {Event} event - The file change event object containing information about the selected file.\n   * @returns {void}\n   */\n  fileChangeEvent(event: Event): void {\n    this.imageChangedEvent = event;\n  }\n\n  /**\n   * Sets the cropped image or triggers the cropping process.\n   * \n   * If an event is provided, it updates the component's strStorePatchURL with the cropped image URL.\n   * If no event is provided, it triggers the crop action on the cropperLogo component.\n   * \n   * @param {ImageCroppedEvent} [event] - The event object containing the cropped image data.\n   *        If not provided, the function will trigger the crop action instead.\n   * @returns {void}\n   */\n  setCropImage(event?: ImageCroppedEvent): void {\n    if (event) {\n      this.strStorePatchURL = this.sanitizer.bypassSecurityTrustUrl(event.objectUrl!);\n    } else {\n      this.cropperLogo.crop();\n    }\n  }\n\n  /**\n   * Closes the image cropping dialog and resets the image display.\n   * \n   * This function is typically called when the user cancels the image cropping process.\n   * It reads the original file URL and closes the cropping dialog.\n   * \n   * @returns {void}\n   */\n  closeCropImage(): void {\n    this.readURL(this.file);\n    this.isCropDialogOpen = false;\n  }\n\n  /**\n   * Reads the URL of an uploaded file and sets it as the store's logo patch URL after compression.\n   * \n   * This function creates a FileReader to read the input file as a data URL.\n   * Once loaded, it compresses the image and sets the result as the store's logo patch URL.\n   * \n   * @param input - The input file object to be read. Expected to be a File or Blob object.\n   * @returns {void}\n   */\n  readURL(input: any): void {\n    if (!input) return;\n    const reader = new FileReader();\n    reader.onload = async (e) => {\n      // load image by url\n      this.strStorePatchURL = await this.compressImage(e.target!.result, 80, 60);\n    };\n    reader.readAsDataURL(input);\n  }\n\n  /**\n   * Compresses an image to a specified size.\n   * \n   * This function takes an image source and desired dimensions, then creates a new compressed\n   * version of the image using a canvas element. The compressed image is returned as a data URL.\n   *\n   * @param src - The source of the image. Can be a URL or a data URL.\n   * @param newX - The desired width of the compressed image in pixels.\n   * @param newY - The desired height of the compressed image in pixels.\n   * @returns A Promise that resolves with the compressed image as a data URL string, or rejects with an error if the image fails to load.\n   */\n  compressImage(src: any, newX: number, newY: number): Promise {\n    return new Promise((res, rej) => {\n      const img = new Image();\n      img.src = src;\n      img.onload = () => {\n        const elem = document.createElement('canvas');\n        elem.width = newX;\n        elem.height = newY;\n        const ctx = elem.getContext('2d');\n        ctx!.drawImage(img, 0, 0, newX, newY);\n        const data = ctx!.canvas.toDataURL();\n        res(data);\n      }\n      img.onerror = error => rej(error);\n    })\n  }\n\n  /**\n   * Resets the store form and related component properties to their initial states.\n   * \n   * This function performs the following actions:\n   * - Closes the create store dialog\n   * - Resets the form button title\n   * - Resets the form fields to default values\n   * - Clears any errors on city and state fields\n   * - Resets logo-related properties and edit mode flags\n   * \n   * The form is reset with default values for address, location, and operating hours for each day of the week.\n   * \n   * @returns {void}\n   */\n  resetForm(): void {\n    this.isCreateStoreDialogOpen = false;\n    this.strFormButtonTitle = 'Add Store';\n    this.formStore.reset({\n      address: {\n        country: 'Canada',\n        // city: null,\n        // state: null\n      },\n      location: {\n        type: 'Point'\n      },\n      time: {\n        monday: {\n          in: '09:00',\n          out: '18:00',\n          close: false,\n        },\n        tuesday: {\n          in: '09:00',\n          out: '18:00',\n          close: false,\n        },\n        wednesday: {\n          in: '09:00',\n          out: '18:00',\n          close: false,\n        },\n        thusday: {\n          in: '09:00',\n          out: '18:00',\n          close: false,\n        },\n        friday: {\n          in: '09:00',\n          out: '18:00',\n          close: false,\n        },\n        saturday: {\n          in: '09:00',\n          out: '18:00',\n          close: false,\n        },\n        sunday: {\n          in: '09:00',\n          out: '18:00',\n          close: false,\n        }\n      }\n    });\n    this.formStore.get('address.city')?.setErrors(null);\n    this.formStore.get('address.state')?.setErrors(null);\n    this.strStorePatchURL = undefined;\n    this.isLogoChanged = false;\n    this.strCurrentEditStoreID = undefined;\n    this.isLogoChangeOnUpdate = false;\n  }\n\n  /**\n   * Opens a dialog to view details of a store record.\n   * \n   * This function prepares the data for viewing by joining custom services into a string,\n   * sets the view dialog to open, and assigns the data to be viewed.\n   *\n   * @param {any} data - The store record data to be displayed in the view dialog.\n   *                     Expected to have a 'custom_services' property which is an array.\n   * @returns {void}\n   */\n  openViewDialog(data: any): void {\n    data.custom_service = data.custom_services?.join(', ').trim();\n    this.isViewDialogOpen = true;\n    this.currentRecordToView = data;\n  }\n\n  /**\n   * Opens the store timeline detail dialog and populates it with the provided data.\n   * \n   * This function sets up the store timeline detail object with information from the\n   * provided data, including name, status, response requirement, and timeline.\n   * If a response is needed, it also updates the timeline response form.\n   *\n   * @param {any} data - The store data object containing timeline details.\n   * @param {string} data.name - The name of the store.\n   * @param {string} data.status - The current status of the store.\n   * @param {boolean} data.need_response - Indicates if a response is required.\n   * @param {Array} data.timeline - The timeline data for the store.\n   * @param {string} data._id - The unique identifier of the store (used if response is needed).\n   * \n   * @returns {void}\n   */\n  openStoreTimelineDetail(data: any): void {\n    this.isStoreTimelineDialogOpen = true;\n    this.objStoreTimelineDetail.name = data.name;\n    this.objStoreTimelineDetail.status = data.status;\n    this.objStoreTimelineDetail.need_response = data.need_response;\n    this.objStoreTimelineDetail.timeline = data.timeline;\n    if (data.need_response) {\n      this.formTimelineResponse.patchValue({\n        status: data.status,\n        store: data._id\n      });\n    }\n  }\n\n  /**\n   * Determines if an action should be shown on the timeline response based on the given status.\n   * \n   * This function checks if the provided status is 'action_required', which is the only status\n   * that should trigger showing an action on the timeline response.\n   *\n   * @param status - The current status of the timeline response.\n   *                 Possible values include 'rejected', 'verified', 'in_process', 'assign', 'not_assign', and 'action_required'.\n   * \n   * @returns A boolean indicating whether an action should be shown (true) or not (false).\n   */\n  showActionOnTimelineResponse(status: string): boolean {\n    // 'rejected', 'verified', 'in_process', 'assign', 'not_assign'\n    return ['action_required'].includes(status);\n  }\n\n  /**\n   * Opens the timeline response dialog.\n   * \n   * This function sets the `isTimelineResponseDialogOpen` flag to true,\n   * which typically triggers the display of a dialog for timeline responses\n   * in the user interface.\n   * \n   * @returns {void}\n   */\n  openTimelineResposeDialog(): void {\n    this.isTimelineResponseDialogOpen = true;\n  }\n\n  /**\n   * Submits a timeline response for a store and updates the application state.\n   * \n   * This asynchronous function sends a POST request to update the store's status,\n   * closes relevant dialogs, displays a success message, and refreshes the store data.\n   * If an error occurs during the process, it displays an error message.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the timeline response has been submitted and processed.\n   * @throws {Error} If the HTTP request fails or if there's an error in processing the response.\n   */\n  async onSubmitTimelineResponse(): Promise {\n    this.isTimelineResponseLoading = true;\n    await this.httpService.post(`store/dealer/status`, this.formTimelineResponse.value).then(async (response: any) => {\n      if (response.success) {\n        this.isTimelineResponseDialogOpen = false;\n        this.isStoreTimelineDialogOpen = false;\n        this.messageService.add({ severity: 'secondary', summary: 'Timeline Response', detail: 'Store timeline response sent successfully.' });\n        await this.getStores();\n      }\n    }).catch((error: any) => {\n      this.messageService.add({ severity: 'error', summary: 'Timeline Response', detail: error });\n    }).finally(() => {\n      this.isTimelineResponseLoading = false;\n    })\n  }\n\n  /**\n   * Determines if the last element in the store's timeline has a role of 'agent'.\n   * \n   * This function checks the last element of the store's timeline array and returns\n   * true if its role is 'agent', false otherwise. If the timeline is empty, it returns false.\n   *\n   * @param {any} store - The store object containing a timeline property.\n   * @param {Array} store.timeline - An array representing the timeline of the store.\n   * @param {string} store.timeline[].role - The role associated with each timeline entry.\n   * \n   * @returns {boolean} True if the last timeline entry has a role of 'agent', false otherwise.\n   */\n  getLastElementRoleFromTimeline(store: any) {\n    const lastIndex = store.timeline.length - 1;\n    if (lastIndex >= 0) {\n      return store.timeline[lastIndex].role === 'agent';\n    }\n    return false;\n  }\n\n  /**\n   * Converts a role status string to its corresponding display name.\n   * \n   * This function takes a status string and returns the appropriate role name.\n   * It handles 'dealer' and 'agent' cases, with 'dealer' being the default for any unrecognized input.\n   *\n   * @param {string} status - The status string to be converted. Expected values are 'delaer' or 'agent'.\n   * @returns {string} The converted role name: 'Dealer' for 'delaer' or default, 'Agent' for 'agent'.\n   */\n  getRoleByValue(status: string): string {\n    switch (status) {\n      case 'delaer':\n        return 'Dealer';\n      case 'agent':\n        return 'Agent';\n      default:\n        return 'Dealer';\n    }\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CommonElement.html":{"url":"interfaces/CommonElement.html","title":"interface - CommonElement","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  CommonElement\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/car-manage/car.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            accept\n                                        \n                                \n                                \n                                        \n                                            changeField\n                                        \n                                \n                                \n                                        \n                                            class\n                                        \n                                \n                                \n                                        \n                                            data\n                                        \n                                \n                                \n                                        \n                                            datatype\n                                        \n                                \n                                \n                                        \n                                            dateFormat\n                                        \n                                \n                                \n                                        \n                                            dependant\n                                        \n                                \n                                \n                                        \n                                            dependant_field\n                                        \n                                \n                                \n                                        \n                                            element\n                                        \n                                \n                                \n                                        \n                                            error\n                                        \n                                \n                                \n                                        \n                                            format\n                                        \n                                \n                                \n                                        \n                                            group_left\n                                        \n                                \n                                \n                                        \n                                            group_right\n                                        \n                                \n                                \n                                        \n                                            group_string\n                                        \n                                \n                                \n                                        \n                                            keyFilter\n                                        \n                                \n                                \n                                        \n                                            maxSize\n                                        \n                                \n                                \n                                        \n                                            minDate\n                                        \n                                \n                                \n                                        \n                                            mode\n                                        \n                                \n                                \n                                        \n                                            multiple\n                                        \n                                \n                                \n                                        \n                                            name\n                                        \n                                \n                                \n                                        \n                                            note\n                                        \n                                \n                                \n                                        \n                                            onChange\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            pattern\n                                        \n                                \n                                \n                                        \n                                            placeholder\n                                        \n                                \n                                \n                                        \n                                            readonly\n                                        \n                                \n                                \n                                        \n                                            removed\n                                        \n                                \n                                \n                                        \n                                            required\n                                        \n                                \n                                \n                                        \n                                            search\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        accept\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        accept:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        changeField\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        changeField:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        class\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        class:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        data:         LabelValueData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LabelValueData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        datatype\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        datatype:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dateFormat\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dateFormat:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dependant\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dependant:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dependant_field\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        dependant_field:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        element\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        element:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        error\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        error:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        format:         textBoxtype\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         textBoxtype\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group_left\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group_left:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group_right\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group_right:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        group_string\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        group_string:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keyFilter\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        keyFilter:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxSize\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        maxSize:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        minDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        minDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mode\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        mode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        multiple\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        multiple:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        note\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        note:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onChange\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        onChange:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pattern\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pattern:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        placeholder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readonly\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        readonly:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        removed\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        removed:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        required:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        search\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        search:         LabelValueData[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         LabelValueData[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         element\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         element\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         any\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type element = 'textbox' | 'dropdown' | 'select-button' | 'textarea' | 'upload' | 'checkbox' | 'editor' | 'multi-select' | 'selection' | 'multi-choice'\ntype textBoxtype = 'normal' | 'date' | 'money' | 'currency' | 'group'  | 'number'\n\nexport interface CarForm {\n    name: string,\n    value: string,\n    data: Array\n}\n\nexport interface CommonElement {\n    type: element,\n    name: string,\n    datatype: string, // type like number, text\n    placeholder: string,\n    value: any, // set default value\n    format: textBoxtype, // format for textbox only\n    readonly: boolean, // make element readonly\n    data: LabelValueData[],\n    search: LabelValueData[], // store auto complete - multi select search result\n    accept: string, // file format extentions\n    class: string,\n    multiple: boolean, // file selection,\n    mode: string, // media mode - add or delete\n    required: boolean,\n    error: string, // set error for element\n    pattern?: { type: string, label: string, value: string }, // for specific textbox format regex\n    dateFormat: string, // date format\n    minDate: Date, // min date\n    keyFilter: string, // data enter format with primeng int, alphanum\n    maxSize: number, // file maxsize\n    note: string, // note for specific element\n    group_right: string, // input group element\n    group_left: string, // input group element\n    group_string: string, // input group element\n    dependant: boolean, // check dependant on any element\n    dependant_field: string, // get dependant field if dependant,\n    onChange: boolean, // modify toggle as per dependant validation,\n    changeField: string, // set disable field for main element,\n    element: any // multiple selection field\n    removed: boolean, // remove element from selection form\n}\n\nexport interface LabelValueData {\n    label: string,\n    value: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utilities/services/common.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CSVToJSON\n                            \n                            \n                                newObjectId\n                            \n                            \n                                replaceStringToCapitalize\n                            \n                            \n                                replaceStringToLowercase\n                            \n                            \n                                setArrayToString\n                            \n                            \n                                sortArrayField\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/utilities/services/common.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CSVToJSON\n                        \n                    \n                \n            \n            \n                \nCSVToJSON(data: any, delimiter: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/common.service.ts:100\n                        \n                    \n\n\n            \n                \n                        Converts CSV formatted data to JSON.\nThis function takes a CSV string and converts it into an array of JavaScript objects.\nThe first line of the CSV is assumed to be the header, which defines the property names for the resulting objects.\nExample :     with properties named according to the CSV headers.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    \nThe CSV data as a string. The first line should contain the headers.\n\n\n                                            \n                                        \n                                        \n                                                delimiter\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    ','\n                                            \n\n                                            \n                                                    \nThe character used to separate values in the CSV. Defaults to ','.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An array of objects where each object represents a row from the CSV,\nwith properties named according to the CSV headers.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newObjectId\n                        \n                    \n                \n            \n            \n                \nnewObjectId()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/common.service.ts:80\n                        \n                    \n\n\n            \n                \n                        Generates a new unique object ID.\nThis function creates a 16-character hexadecimal string that can be used as a unique identifier.\nThe ID is composed of:\n\nA timestamp (first 8 characters): represents the current time in seconds since the Unix epoch, in hexadecimal.\nA random string (last 6 characters): generated using random hexadecimal digits.\n\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                A 16-character lowercase hexadecimal string that can be used as a unique object identifier.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceStringToCapitalize\n                        \n                    \n                \n            \n            \n                \nreplaceStringToCapitalize(key: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/common.service.ts:20\n                        \n                    \n\n\n            \n                \n                        Converts a string to title case by capitalizing the first letter of each word and replacing underscores with spaces.\nExample :         Can be any type, but non-string inputs may produce unexpected results.\n\n     Returns undefined if the input is falsy.\n     Returns the original string if it consists entirely of uppercase letters.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe input string to be converted to title case.\nCan be any type, but non-string inputs may produce unexpected results.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The converted string in title case format.\nReturns undefined if the input is falsy.\nReturns the original string if it consists entirely of uppercase letters.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceStringToLowercase\n                        \n                    \n                \n            \n            \n                \nreplaceStringToLowercase(key: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/common.service.ts:37\n                        \n                    \n\n\n            \n                \n                        Converts a string to lowercase, replacing spaces with underscores.\nExample :         Can be any type, but non-string inputs may produce unexpected results.\n\n     Returns undefined if the input is falsy.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe input string to be converted to lowercase with underscores.\nCan be any type, but non-string inputs may produce unexpected results.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                The converted string in lowercase with underscores.\nReturns undefined if the input is falsy.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setArrayToString\n                        \n                    \n                \n            \n            \n                \nsetArrayToString(data: Array, field: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/common.service.ts:66\n                        \n                    \n\n\n            \n                \n                        Converts an array of objects to a comma-separated string of values from a specified field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                        Array\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn array of objects from which to extract field values.\n\n\n                                            \n                                        \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the field whose values should be extracted and joined.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                A string containing the values of the specified field from all objects in the array, joined by commas.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortArrayField\n                        \n                    \n                \n            \n            \n                \nsortArrayField(data: any, field: string, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/common.service.ts:52\n                        \n                    \n\n\n            \n                \n                        Sorts an array of objects based on a specified field.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe array of objects to be sorted.\n\n\n                                            \n                                        \n                                        \n                                                field\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe name of the field to sort by.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe type of the field to sort by. Can be 'string' for string comparison or any other value for numeric comparison.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                A new sorted array. If type is 'string', it sorts alphabetically (case-insensitive). Otherwise, it sorts numerically.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CommonService {\n\n  constructor() { }\n\n  /**\n   * Converts a string to title case by capitalizing the first letter of each word and replacing underscores with spaces.\n   * \n   * @param key - The input string to be converted to title case.\n   *              Can be any type, but non-string inputs may produce unexpected results.\n   * \n   * @returns The converted string in title case format.\n   *          Returns undefined if the input is falsy.\n   *          Returns the original string if it consists entirely of uppercase letters.\n   */\n  replaceStringToCapitalize(key: any) {\n    if (!key) return\n    if (/^[A-Z]+$/.test(key)) return key;\n    return key.toLowerCase().replace(/_/g, ' ').replace(/(?: |\\b)(\\w)/g, (key: string, p1: string) => {\n      return key.toUpperCase();\n    })\n  }\n\n  /**\n   * Converts a string to lowercase, replacing spaces with underscores.\n   * \n   * @param key - The input string to be converted to lowercase with underscores.\n   *              Can be any type, but non-string inputs may produce unexpected results.\n   * \n   * @returns The converted string in lowercase with underscores.\n   *          Returns undefined if the input is falsy.\n   */\n  replaceStringToLowercase(key: any) {\n    if (!key) return\n    return key.toLowerCase().replace(/ /g, '_').replace(/(?: |\\b)(\\w)/g, (key: string, p1: string) => {\n      return key.toLowerCase();\n    })\n  }\n\n  /**\n   * Sorts an array of objects based on a specified field.\n   * \n   * @param data - The array of objects to be sorted.\n   * @param field - The name of the field to sort by.\n   * @param type - The type of the field to sort by. Can be 'string' for string comparison or any other value for numeric comparison.\n   * @returns A new sorted array. If type is 'string', it sorts alphabetically (case-insensitive). Otherwise, it sorts numerically.\n   */\n  sortArrayField(data: any, field: string, type: string) {\n    if (type === 'string') {\n      return data.sort((a: any, b: any) => a[field].toLowerCase() > b[field].toLowerCase() ? 1 : -1);\n    }\n    return data.sort((a: any, b: any) => a[field] - b[field]);\n  }\n\n  /**\n   * Converts an array of objects to a comma-separated string of values from a specified field.\n   *\n   * @param data - An array of objects from which to extract field values.\n   * @param field - The name of the field whose values should be extracted and joined.\n   * @returns A string containing the values of the specified field from all objects in the array, joined by commas.\n   */\n  setArrayToString(data: Array, field: string): string {\n    return data.map((element: any) => element[field]).join(', ');\n  }\n\n  /**\n   * Generates a new unique object ID.\n   * \n   * This function creates a 16-character hexadecimal string that can be used as a unique identifier.\n   * The ID is composed of:\n   * - A timestamp (first 8 characters): represents the current time in seconds since the Unix epoch, in hexadecimal.\n   * - A random string (last 6 characters): generated using random hexadecimal digits.\n   * \n   * @returns A 16-character lowercase hexadecimal string that can be used as a unique object identifier.\n   */\n  newObjectId() {\n    const timestamp = Math.floor(new Date().getTime() / 1000).toString(16);\n    const objectId = timestamp + 'xxxxxx'.replace(/[x]/g, () => {\n      return Math.floor(Math.random() * 16).toString(16);\n    }).toLowerCase();\n  \n    return objectId;\n  }\n\n  /**\n   * Converts CSV formatted data to JSON.\n   * \n   * This function takes a CSV string and converts it into an array of JavaScript objects.\n   * The first line of the CSV is assumed to be the header, which defines the property names for the resulting objects.\n   * \n   * @param data - The CSV data as a string. The first line should contain the headers.\n   * @param delimiter - The character used to separate values in the CSV. Defaults to ','.\n   * @returns An array of objects where each object represents a row from the CSV,\n   *          with properties named according to the CSV headers.\n   */\n  CSVToJSON(data: any, delimiter = ',') {\n    const titles = data.slice(0, data.indexOf('\\n')).split(delimiter);\n    return data\n      .slice(data.indexOf('\\n') + 1)\n      .split('\\n')\n      .map((v: any) => {\n        const values = v.split(delimiter);\n        return titles.reduce(\n          (obj: any, title: any, index: any) => ((obj[title] = values[index]), obj),\n          {}\n        );\n      });\n  };\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EventService.html":{"url":"injectables/EventService.html","title":"injectable - EventService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  EventService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utilities/services/event.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                alertNotification\n                            \n                            \n                                changeNavUserLoginOrOption\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        alertNotification\n                        \n                    \n                \n            \n            \n                \nalertNotification(data: INotification)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/event.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Emits a notification event with the provided data.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                data\n                                            \n                                                            INotification\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe notification data containing a header and message.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \nThis function does not return any value.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        changeNavUserLoginOrOption\n                        \n                    \n                \n            \n            \n                \nchangeNavUserLoginOrOption()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/event.service.ts:37\n                        \n                    \n\n\n            \n                \n                        This function is responsible for emitting an event to change the navigation user login or option.\nIt checks if a user is currently logged in by retrieving the 'user' object from the local storage.\nIf the user object exists and has at least one key-value pair, it emits the event.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/event.service.ts:47\n                        \n                    \n\n\n            \n                \n                        This method is called when the component is destroyed.\nIt unsubscribes from the navUserOptionEvent, notificationEvent to prevent memory leaks.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { EventEmitter, Injectable, OnDestroy, Output } from '@angular/core';\n\nexport interface INotification {\n  title: string,\n  description: string,\n  createdAt: Date,\n  unread: boolean,\n  type: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService implements OnDestroy {\n\n  @Output() navUserOptionEvent = new EventEmitter();\n  @Output() notificationEvent = new EventEmitter();\n\n  /**\n   * Emits a notification event with the provided data.\n   *\n   * @param data - The notification data containing a header and message.\n   * @returns {void} - This function does not return any value.\n   *\n   */\n  alertNotification(data: INotification): void {\n    this.notificationEvent.emit(data);\n  }\n\n  /**\n * This function is responsible for emitting an event to change the navigation user login or option.\n * It checks if a user is currently logged in by retrieving the 'user' object from the local storage.\n * If the user object exists and has at least one key-value pair, it emits the event.\n *\n * @returns {void}\n */\nchangeNavUserLoginOrOption(): void {\n  this.navUserOptionEvent.emit();\n}\n\n  /**\n * This method is called when the component is destroyed.\n * It unsubscribes from the `navUserOptionEvent, notificationEvent` to prevent memory leaks.\n *\n * @returns {void}\n */\n  ngOnDestroy(): void {\n    this.navUserOptionEvent.unsubscribe();\n    this.notificationEvent.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FavouriteVehicleComponent.html":{"url":"components/FavouriteVehicleComponent.html","title":"component - FavouriteVehicleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FavouriteVehicleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/favourite-vehicle/favourite-vehicle.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-favourite-vehicle\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./favourite-vehicle.component.html\n            \n\n\n\n            \n                styleUrl\n                ./favourite-vehicle.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrFavouriteVehicle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getFavouriteVahicle\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onClickFavouriteVehicle\n                            \n                            \n                                    Async\n                                onRemoveFavourite\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, httpService: HttpService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/favourite-vehicle/favourite-vehicle.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getFavouriteVahicle\n                        \n                    \n                \n            \n            \n                \n                        \n                    getFavouriteVahicle()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/favourite-vehicle/favourite-vehicle.component.ts:48\n                        \n                    \n\n\n            \n                \n                        Retrieves the list of favorite vehicles for the current user.\nThis asynchronous function makes a GET request to the 'user/favourite-list' endpoint\nusing the HttpService. Upon successful retrieval, it updates the component's\narrFavouriteVehicle array with the response data.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the favorite vehicles have been fetched and stored.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/favourite-vehicle/favourite-vehicle.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after data-bound properties of a directive are initialized.\nThis method is part of Angular's component lifecycle. It initializes the component by\nfetching the user's favorite vehicles when the component is created.\nExample :                     specifically when the favorite vehicles have been retrieved.\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the initialization process is complete,\nspecifically when the favorite vehicles have been retrieved.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickFavouriteVehicle\n                        \n                    \n                \n            \n            \n                \nonClickFavouriteVehicle(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/favourite-vehicle/favourite-vehicle.component.ts:63\n                        \n                    \n\n\n            \n                \n                        Navigates to the detail page of a favorite vehicle.\nThis function is triggered when a user clicks on a favorite vehicle in the list.\nIt uses Angular's Router to navigate to the detail page of the selected vehicle.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier of the favorite vehicle to be viewed in detail.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                void This function doesn't return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onRemoveFavourite\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRemoveFavourite(event: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/favourite-vehicle/favourite-vehicle.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Removes a vehicle from the user's favorites list.\nThis asynchronous function sends a PATCH request to the server to remove the specified vehicle\nfrom the user's favorites. If successful, it displays a success message and refreshes the\nlist of favorite vehicles.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event object from the click event, used to prevent event propagation.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier of the vehicle to be removed from favorites.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the removal process is complete.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        arrFavouriteVehicle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/favourite-vehicle/favourite-vehicle.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n// custom service\nimport { HttpService } from '../../../utilities/services/http.service';\n\n// primeng\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-favourite-vehicle',\n  templateUrl: './favourite-vehicle.component.html',\n  styleUrl: './favourite-vehicle.component.scss'\n})\nexport class FavouriteVehicleComponent {\n\n  // array to store the user's favorite vehicles\n  arrFavouriteVehicle: Array = [];\n\n  constructor(\n    private readonly router: Router,\n    private readonly httpService: HttpService,\n    private readonly messageService: MessageService\n  ) { }\n\n  /**\n   * Lifecycle hook that is called after data-bound properties of a directive are initialized.\n   * \n   * This method is part of Angular's component lifecycle. It initializes the component by\n   * fetching the user's favorite vehicles when the component is created.\n   *\n   * @returns {Promise} A promise that resolves when the initialization process is complete,\n   *                          specifically when the favorite vehicles have been retrieved.\n   */\n  async ngOnInit(): Promise {\n    await this.getFavouriteVahicle();\n  }\n\n  /**\n   * Retrieves the list of favorite vehicles for the current user.\n   * \n   * This asynchronous function makes a GET request to the 'user/favourite-list' endpoint\n   * using the HttpService. Upon successful retrieval, it updates the component's\n   * arrFavouriteVehicle array with the response data.\n   *\n   * @returns {Promise} A promise that resolves when the favorite vehicles have been fetched and stored.\n   */\n  async getFavouriteVahicle(): Promise {\n    await this.httpService.get('user/favourite-list').then((response: any) => {\n      this.arrFavouriteVehicle = response;\n    });\n  }\n\n  /**\n   * Navigates to the detail page of a favorite vehicle.\n   * \n   * This function is triggered when a user clicks on a favorite vehicle in the list.\n   * It uses Angular's Router to navigate to the detail page of the selected vehicle.\n   *\n   * @param id - The unique identifier of the favorite vehicle to be viewed in detail.\n   * @returns void This function doesn't return a value.\n   */\n  onClickFavouriteVehicle(id: string): void {\n    this.router.navigate(['/detail/', id]);\n  }\n\n  /**\n   * Removes a vehicle from the user's favorites list.\n   * \n   * This asynchronous function sends a PATCH request to the server to remove the specified vehicle\n   * from the user's favorites. If successful, it displays a success message and refreshes the\n   * list of favorite vehicles.\n   *\n   * @param event - The event object from the click event, used to prevent event propagation.\n   * @param id - The unique identifier of the vehicle to be removed from favorites.\n   * @returns A Promise that resolves when the removal process is complete.\n   */\n  async onRemoveFavourite(event: any, id: string): Promise {\n    event.stopPropagation();\n    // Make a patch request to the server to update the user's favourites list\n    await this.httpService.patch('user/favourite', { id, mode: 'remove' })\n      .then((response: any) => {\n        // If the request is successful, refresh current favourite array list\n        if (response.success) {\n          this.messageService.add({ severity: 'secondary', summary: 'Success', detail: 'Vehicle Unsubscribed successfully!' });\n          this.getFavouriteVahicle();\n        }\n      });\n  }\n}\n\n\n    \n\n    \n        \n\n    \n        Saved Vehicles\n    \n\n\n\n@defer () {\n@if (arrFavouriteVehicle && arrFavouriteVehicle.length > 0) {\n\n    @for (favourite of arrFavouriteVehicle; track favourite) {\n    \n        \n            \n            \n            \n                \n                    {{ favourite.name }}\n                \n                \n                    {{ favourite.vin_number }}\n                \n                \n                \n                    {{ favourite.asking_price | currency:'USD':'symbol':'2.0' }}\n                \n            \n        \n    \n    }\n\n} @else {\n\n    \n        \n    \n    \n        You don’t have any saved vehicles yet\n    \n    \n        Saw a great deal on Mechatronic Group? Save it so you can easily get back to it whenever you want!\n    \n\n}\n} @placeholder(minimum 1000) {\n\n    \n        \n            \n            \n                \n                    \n                \n                \n                    \n                \n                \n                \n                    \n                \n            \n        \n    \n    \n        \n            \n            \n                \n                    \n                \n                \n                    \n                \n                \n                \n                    \n                \n            \n        \n    \n    \n        \n            \n            \n                \n                    \n                \n                \n                    \n                \n                \n                \n                    \n                \n            \n        \n    \n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Saved Vehicles    @defer () {@if (arrFavouriteVehicle && arrFavouriteVehicle.length > 0) {    @for (favourite of arrFavouriteVehicle; track favourite) {                                                                                    {{ favourite.name }}                                                    {{ favourite.vin_number }}                                                                    {{ favourite.asking_price | currency:\\'USD\\':\\'symbol\\':\\'2.0\\' }}                                            }} @else {                            You don’t have any saved vehicles yet                Saw a great deal on Mechatronic Group? Save it so you can easily get back to it whenever you want!    }} @placeholder(minimum 1000) {}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FavouriteVehicleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ForgetPasswordComponent.html":{"url":"components/ForgetPasswordComponent.html","title":"component - ForgetPasswordComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ForgetPasswordComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/forget-password/forget-password.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-forget-password\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            FormsModule\n                            CommonModule\n                            AnimateOnScrollModule\n                            RouterModule\n                            PasswordModule\n                            InputTextModule\n                            DividerModule\n                            SelectButtonModule\n                            ToastModule\n                            ButtonModule\n                            DialogModule\n                            InputOtpModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./forget-password.component.html\n            \n\n\n\n            \n                styleUrl\n                ./forget-password.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formForgetPassword\n                            \n                            \n                                isOTPSent\n                            \n                            \n                                isOTPValid\n                            \n                            \n                                strOTP\n                            \n                            \n                                strOTPError\n                            \n                            \n                                strSignUpTitle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCloseOTPPopUp\n                            \n                            \n                                    Async\n                                onForgetPasswordSubmit\n                            \n                            \n                                    Async\n                                OnSentOTPEmail\n                            \n                            \n                                    Async\n                                OnVerifyOTP\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, httpService: HttpService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/forget-password/forget-password.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseOTPPopUp\n                        \n                    \n                \n            \n            \n                \nonCloseOTPPopUp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forget-password/forget-password.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Resets the OTP (One-Time Password) related properties when closing the OTP popup.\nThis function is typically called when the user closes the OTP verification popup\nwithout completing the verification process. It resets the OTP value, sending status,\nand error flag to their initial states.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This function doesn't return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onForgetPasswordSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onForgetPasswordSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forget-password/forget-password.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Submits the forget password form to change the user's password.\nThis asynchronous function performs the following steps:\n\nRetrieves the form data from the forget password form.\nSends a POST request to the 'authentication/change-password' endpoint.\nIf successful, displays a success message and redirects to the login page.\nIf an error occurs, updates the form with the phone number and displays an error message.\n\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the password change process is complete.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OnSentOTPEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    OnSentOTPEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forget-password/forget-password.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Initiates the process of sending a One-Time Password (OTP) email for password reset.\nThis asynchronous function retrieves the form data from formForgetPassword,\nsends a POST request to the 'authentication/forget-password' endpoint,\nand sets isOTPSent to true if the request is successful.\nIf an error occurs, it displays an error message using the message service.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the OTP email is sent successfully or rejects with an error.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OnVerifyOTP\n                        \n                    \n                \n            \n            \n                \n                        \n                    OnVerifyOTP()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/forget-password/forget-password.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Verifies the One-Time Password (OTP) entered by the user during the password reset process.\nThis asynchronous function performs the following steps:\n\nResets the OTP error flag if it was previously set.\nRetrieves the email from the forget password form.\nSends a POST request to verify the OTP against the provided email.\nIf verification is successful, it updates the component state and form controls for password reset.\nIf verification fails, it sets the OTP error flag.\n\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the OTP verification process is complete.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formForgetPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forget-password/forget-password.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOTPSent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forget-password/forget-password.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOTPValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forget-password/forget-password.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strOTP\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forget-password/forget-password.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strOTPError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forget-password/forget-password.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strSignUpTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Reset Password\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/forget-password/forget-password.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormControl, FormsModule, ReactiveFormsModule, UntypedFormGroup, Validators } from '@angular/forms';\n\n// custom service\nimport { HttpService } from '../../utilities/services/http.service';\n\n// primeng\nimport { MessageService } from 'primeng/api';\nimport { PasswordModule } from 'primeng/password';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { DividerModule } from 'primeng/divider';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { InputOtpModule } from 'primeng/inputotp';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { AnimateOnScrollModule } from 'primeng/animateonscroll';\n\n@Component({\n  selector: 'app-forget-password',\n  standalone: true,\n  imports: [ReactiveFormsModule, FormsModule, CommonModule, AnimateOnScrollModule, RouterModule, PasswordModule, InputTextModule, DividerModule, SelectButtonModule, ToastModule, ButtonModule, DialogModule, InputOtpModule],\n  providers: [MessageService],\n  templateUrl: './forget-password.component.html',\n  styleUrl: './forget-password.component.scss',\n  encapsulation: ViewEncapsulation.None\n})\nexport class ForgetPasswordComponent {\n\n  // defined variables\n  strSignUpTitle = \"Reset Password\";\n  isOTPSent = false;\n  strOTP: string | undefined;\n  strOTPError: boolean = false;\n  isOTPValid: boolean = false;\n\n  // login form\n  formForgetPassword = new UntypedFormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n  });\n\n  constructor(\n    private readonly router: Router,\n    private readonly httpService: HttpService,\n    private readonly messageService: MessageService\n  ) { }\n\n  /**\n   * Resets the OTP (One-Time Password) related properties when closing the OTP popup.\n   * \n   * This function is typically called when the user closes the OTP verification popup\n   * without completing the verification process. It resets the OTP value, sending status,\n   * and error flag to their initial states.\n   * \n   * @returns {void} This function doesn't return a value.\n   */\n  onCloseOTPPopUp(): void {\n    this.strOTP = undefined;\n    this.isOTPSent = false;\n    this.strOTPError = false;\n  }\n\n  /**\n   * Initiates the process of sending a One-Time Password (OTP) email for password reset.\n   * \n   * This asynchronous function retrieves the form data from `formForgetPassword`,\n   * sends a POST request to the 'authentication/forget-password' endpoint,\n   * and sets `isOTPSent` to true if the request is successful.\n   * If an error occurs, it displays an error message using the message service.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the OTP email is sent successfully or rejects with an error.\n   * @throws {Error} If there's an issue with sending the OTP email.\n   */\n  async OnSentOTPEmail(): Promise {\n    try {\n      const data = this.formForgetPassword.value;\n      const response: any = await this.httpService.post('authentication/forget-password', data);\n      if (response?.success) {\n        this.isOTPSent = true;\n      }\n    } catch (error: any) {\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: error });\n    }\n  }\n\n  /**\n   * Verifies the One-Time Password (OTP) entered by the user during the password reset process.\n   * \n   * This asynchronous function performs the following steps:\n   * 1. Resets the OTP error flag if it was previously set.\n   * 2. Retrieves the email from the forget password form.\n   * 3. Sends a POST request to verify the OTP against the provided email.\n   * 4. If verification is successful, it updates the component state and form controls for password reset.\n   * 5. If verification fails, it sets the OTP error flag.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the OTP verification process is complete.\n   * @throws {Error} If there's an issue with the OTP verification request.\n   */\n  async OnVerifyOTP(): Promise {\n    // reset error flag\n    if (this.strOTPError) {\n      this.strOTPError = false;\n    }\n\n    // get data to send email\n    const data = this.formForgetPassword.value;\n    try {\n      // send request to verify\n      const response: any = await this.httpService.post('authentication/verify-forget-password', { email: data.email, otp: this.strOTP?.trim() });\n      // if success\n      if (response?.success) {\n        this.isOTPSent = false;\n        this.isOTPValid = true;\n        this.formForgetPassword.addControl('otp', new FormControl(this.strOTP));\n        this.formForgetPassword.addControl('password', new FormControl(null, [Validators.required, Validators.minLength(10)]));\n\n        this.strSignUpTitle = \"Set Password\";\n      }\n    } catch (error: any) {\n      this.strOTPError = true;\n    }\n  }\n\n  /**\n   * Submits the forget password form to change the user's password.\n   * \n   * This asynchronous function performs the following steps:\n   * 1. Retrieves the form data from the forget password form.\n   * 2. Sends a POST request to the 'authentication/change-password' endpoint.\n   * 3. If successful, displays a success message and redirects to the login page.\n   * 4. If an error occurs, updates the form with the phone number and displays an error message.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the password change process is complete.\n   * @throws {Error} If there's an issue with the password change request.\n   */\n  async onForgetPasswordSubmit(): Promise {\n    const data = this.formForgetPassword.value;\n    try {\n      const result: any = await this.httpService.post('authentication/change-password', data);\n      if (result?.success) {\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Your password reset, kindly login now.' });\n        this.router.navigateByUrl('/login');\n      }\n    } catch (error: any) {\n      this.formForgetPassword.patchValue({\n        phone: data.phone\n      })\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: error });\n    }\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n            \n                Email\n                \n            \n            \n            \n                Password\n                \n                    \n                        \n                        Suggestions\n                        \n                            At least one lowercase\n                            At least one uppercase\n                            At least one numeric\n                            Minimum 10 characters\n                        \n                    \n                \n                At least 10 character password needed.\n            \n            \n            \n                \n            \n            \n                \n            \n        \n    \n\n\n\n\n    \n        \n            \n                \n                EuroExotiCar\n            \n            \n                We sent to you verification code at  {{ formForgetPassword.value.email }} , kindly\n                verify\n                code below:\n            \n            \n            \n            \n                Invalid Code\n            \n            \n                 Note: Code only valid till 24 hours\n            \n            \n                \n                \n            \n        \n    \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Email                                                                    Password                                                                                    Suggestions                                                    At least one lowercase                            At least one uppercase                            At least one numeric                            Minimum 10 characters                                                                            At least 10 character password needed.                                                                                                                                                                            EuroExotiCar                                        We sent to you verification code at  {{ formForgetPassword.value.email }} , kindly                verify                code below:                                                                Invalid Code                                         Note: Code only valid till 24 hours                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ForgetPasswordComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            RouterModule\n                            TabViewModule\n                            AnimateOnScrollModule\n                            InputTextModule\n                            DropdownModule\n                            ButtonModule\n                            DividerModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrBodyType\n                            \n                            \n                                arrMake\n                            \n                            \n                                arrModel\n                            \n                            \n                                arrModelCopy\n                            \n                            \n                                formSearchVehicle\n                            \n                            \n                                strTotalCars\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onChangeMake\n                            \n                            \n                                    Async\n                                onInitValues\n                            \n                            \n                                    Async\n                                submitSearchForm\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, httpService: HttpService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:58\n                        \n                    \n\n\n            \n                \n                        Initializes the component by retrieving and setting the postal code from local storage,\nand initializing necessary data for the component.\nThis method is called automatically when the component is initialized.\nIt checks for a stored postal code in local storage and sets it in the form if found.\nThen it calls onInitValues to initialize other necessary data for the component.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the initialization process is complete.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onChangeMake\n                        \n                    \n                \n            \n            \n                \nonChangeMake(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Handles the change event when a make is selected in the search form.\nThis function filters and sorts the models based on the selected make,\nupdates the available models, and enables the model field in the form.\nExample :                 Expected to have a 'value' property containing the selected make.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe change event object from the make selection dropdown.\nExpected to have a 'value' property containing the selected make.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onInitValues\n                        \n                    \n                \n            \n            \n                \n                        \n                    onInitValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Initializes the component's data by fetching necessary information from the server.\nThis method retrieves the total number of cars, filters for make and model,\nand body type data. It also disables the model field in the search form by default.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when all data has been fetched and processed.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitSearchForm\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitSearchForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/home/home.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Submits the search form and navigates to the search page with the form data as query parameters.\nThis asynchronous function retrieves the current values from the search form,\nand uses them to navigate to the '/search' route. The form values for make, model,\nand postal code are passed as query parameters in the URL.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the navigation is complete.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        arrBodyType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrMake\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrModel\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrModelCopy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formSearchVehicle\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                \n                    \n                        Default value : new FormGroup({\n    make: new FormControl(null, [Validators.required]),\n    model: new FormControl(null, [Validators.required]),\n    postal_code: new FormControl(null, [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strTotalCars\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '0'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/home/home.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { Router, RouterModule } from '@angular/router';\n\n// custom service\nimport { HttpService } from '../../utilities/services/http.service';\nimport { LocalStorageService } from '../../utilities/services/local-storage.service';\n\n// primeng\nimport { ButtonModule } from 'primeng/button';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { TabViewModule } from 'primeng/tabview';\nimport { DividerModule } from 'primeng/divider';\nimport { AnimateOnScrollModule } from 'primeng/animateonscroll';\n\n@Component({\n  selector: 'app-home',\n  standalone: true,\n  imports: [ReactiveFormsModule, RouterModule, TabViewModule, AnimateOnScrollModule, InputTextModule, DropdownModule, ButtonModule, DividerModule],\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss'\n})\nexport class HomeComponent implements OnInit {\n\n  // defined variables\n  arrMake: any;\n  arrModel: any;\n  arrBodyType: any;\n  arrModelCopy: any;\n\n  // search vehicle form\n  formSearchVehicle: FormGroup = new FormGroup({\n    make: new FormControl(null, [Validators.required]),\n    model: new FormControl(null, [Validators.required]),\n    postal_code: new FormControl(null, [Validators.required])\n  });\n\n  // total cars\n  strTotalCars: string = '0';\n\n  constructor(\n    private readonly router: Router,\n    private readonly httpService: HttpService,\n    private readonly localStorageService: LocalStorageService,\n  ) { }\n\n  /**\n   * Initializes the component by retrieving and setting the postal code from local storage,\n   * and initializing necessary data for the component.\n   * \n   * This method is called automatically when the component is initialized.\n   * It checks for a stored postal code in local storage and sets it in the form if found.\n   * Then it calls onInitValues to initialize other necessary data for the component.\n   * \n   * @returns A promise that resolves when the initialization process is complete.\n   */\n  async ngOnInit(): Promise {\n      // check code already exist in local storage\n      const code = this.localStorageService.get('code');\n      if (code) {\n        this.formSearchVehicle.patchValue({ postal_code: code });\n      }\n  \n      // init necessaery data\n      await this.onInitValues();\n    }\n\n  /**\n   * Initializes the component's data by fetching necessary information from the server.\n   * This method retrieves the total number of cars, filters for make and model,\n   * and body type data. It also disables the model field in the search form by default.\n   *\n   * @async\n   * @returns {Promise} A promise that resolves when all data has been fetched and processed.\n   */\n  async onInitValues(): Promise {\n    // get total car\n    this.strTotalCars = (await this.httpService.get('car/count') as any);\n\n    // get filters for make & model\n    const filters = (await this.httpService.get('filter') as any).data;\n    this.arrMake = filters.find((ele: any) => ele.name.value === 'make').data.sort((a: any, b: any) => a.value > b.value ? 1 : -1);\n    this.arrModelCopy = filters.find((ele: any) => ele.name.value === 'model').data;\n\n    // get body type\n    this.arrBodyType = filters.find((ele: any) => ele.name.value === 'body_type').data;\n\n    //disbale model field default\n    this.formSearchVehicle.get('model')?.disable();\n  }\n\n  \n  /**\n   * Handles the change event when a make is selected in the search form.\n   * This function filters and sorts the models based on the selected make,\n   * updates the available models, and enables the model field in the form.\n   *\n   * @param {any} event - The change event object from the make selection dropdown.\n   *                      Expected to have a 'value' property containing the selected make.\n   * @returns {void}\n   */\n  onChangeMake(event: any): void {\n  \n    // find related models to make and set\n    const dependantData = this.arrModelCopy.filter((element: any) => element.join === event.value);\n    this.arrModel = dependantData.sort((a: any, b: any) => a.value > b.value ? 1 : -1);;\n  \n    // enable model field\n    this.formSearchVehicle.get('model')?.enable();\n  }\n\n  /**\n   * Submits the search form and navigates to the search page with the form data as query parameters.\n   * \n   * This asynchronous function retrieves the current values from the search form,\n   * and uses them to navigate to the '/search' route. The form values for make, model,\n   * and postal code are passed as query parameters in the URL.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the navigation is complete.\n   */\n  async submitSearchForm(): Promise {\n    const data = this.formSearchVehicle.value;\n    this.router.navigate(['/search'], { queryParams: { make: data.make, model: data.model, code: data.postal_code } });\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n    \n    \n        \n            Search {{ strTotalCars }} Cars, Trucks & SUVs \n            \n                \n                    \n                        \n                            Make:\n                            \n                        \n                        \n                            Model:\n                            \n                        \n                        \n                            Postal Code:\n                            \n                        \n                        \n                            \n                        \n                    \n                \n                \n                    \n                        \n                            Explore by Brand\n                            \n                            \n                                @for (make of arrMake; track make.value;) {\n                                \n                                    \n                                        {{ make.label }}\n                                    \n                                \n                                }\n                            \n                        \n                        \n                            Explore by Body Type\n                            \n                            \n                                @for (body_type of arrBodyType; track body_type.value;) {\n                                \n                                    \n                                        {{ body_type.label }}\n                                    \n                                \n                                }\n                            \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n    \n        Welcome to Auto Credit Co\n        There are many variations of passages of Lorem\n            Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised\n            words which don't look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need\n            to be sure there isn't anything embarrassing hidden in the middle of text.\n        \n            \n                \n                    \n                \n                Best Price\n                \n                    Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                \n            \n            \n                \n                    \n                \n                Faster Buy & Sell\n                \n                    Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                \n            \n            \n                \n                    \n                \n                Free Support\n                \n                    Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                \n            \n            \n                \n                    \n                \n                Professional Dealers\n                \n                    Lorem Ipsum is simply dummy text of the printing and typesetting industry.\n                \n            \n        \n    \n -->\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Search {{ strTotalCars }} Cars, Trucks & SUVs                                                                                                     Make:                                                                                                        Model:                                                                                                        Postal Code:                                                                                                                                                                                                                                                            Explore by Brand                                                                                        @for (make of arrMake; track make.value;) {                                                                                                            {{ make.label }}                                                                                                    }                                                                                                        Explore by Body Type                                                                                        @for (body_type of arrBodyType; track body_type.value;) {                                                                                                            {{ body_type.label }}                                                                                                    }                                                                                                                            Welcome to Auto Credit Co        There are many variations of passages of Lorem            Ipsum available, but the majority have suffered alteration in some form, by injected humour, or randomised            words which don\\'t look even slightly believable. If you are going to use a passage of Lorem Ipsum, you need            to be sure there isn\\'t anything embarrassing hidden in the middle of text.                                                                                        Best Price                                    Lorem Ipsum is simply dummy text of the printing and typesetting industry.                                                                                                            Faster Buy & Sell                                    Lorem Ipsum is simply dummy text of the printing and typesetting industry.                                                                                                            Free Support                                    Lorem Ipsum is simply dummy text of the printing and typesetting industry.                                                                                                            Professional Dealers                                    Lorem Ipsum is simply dummy text of the printing and typesetting industry.                                         -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent-1.html":{"url":"components/HomeComponent-1.html","title":"component - HomeComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/home/home.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n            \n                styleUrl\n                ./home.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                strCountCar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, httpService: HttpService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/home/home.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/home/home.component.ts:33\n                        \n                    \n\n\n            \n                \n                        Initializes the component by fetching and setting the total car count.\nThis method checks if the user is a dealer or not. If the user is a dealer,\nit retrieves the total car count for their store. If not, it retrieves the\ntotal car count for the user.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the initialization is complete.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        strCountCar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/home/home.component.ts:16\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n// custom service\nimport { HttpService } from '../../../utilities/services/http.service';\nimport { LocalStorageService } from '../../../utilities/services/local-storage.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrl: './home.component.scss'\n})\nexport class HomeComponent implements OnInit {\n\n  // string count total car of store or user\n  strCountCar: number | undefined;\n\n  constructor(\n    private readonly router: Router,\n    private readonly httpService: HttpService,\n    private readonly localStorageService: LocalStorageService\n  ) { }\n  \n  /**\n * Initializes the component by fetching and setting the total car count.\n * \n * This method checks if the user is a dealer or not. If the user is a dealer,\n * it retrieves the total car count for their store. If not, it retrieves the\n * total car count for the user.\n * \n * @returns {Promise} A promise that resolves when the initialization is complete.\n */\n  async ngOnInit(): Promise {\n\n    // check if user is dealer, if yes then get total car count from store else from user\n    const isUserDealer = this.localStorageService.userIsDealer();\n    if (isUserDealer) {\n      // get store from local storage\n      let store = this.localStorageService.get('store');\n      if (!store) {\n        const stores: any = (await this.httpService.get('user/store') as any).store;\n        store = stores[0]._id;\n      }\n      // get total car count from store\n      this.strCountCar = await this.httpService.get(`car/count/store/${store}`) as number;\n    } else {\n      const user = this.localStorageService.getObject('user').identifier;\n      this.strCountCar = await this.httpService.get(`car/count/user/${user}`) as number;\n    }\n  }\n}\n\n\n    \n\n    \n        \n    \n        \n            Car\n                = 0\">{{ strCountCar }}\n                \n            \n            \n                \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                        Car                = 0\">{{ strCountCar }}                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HttpService.html":{"url":"injectables/HttpService.html","title":"injectable - HttpService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  HttpService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utilities/services/http.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                server_url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                get\n                            \n                            \n                                getRxJS\n                            \n                            \n                                    Async\n                                getWithOutsideURL\n                            \n                            \n                                    Async\n                                getWithOutsideURLCSV\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                    Async\n                                patch\n                            \n                            \n                                    Async\n                                post\n                            \n                            \n                                postRxJS\n                            \n                            \n                                    Async\n                                postWithOutsideURL\n                            \n                            \n                                    Async\n                                putURL\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(httpService: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/utilities/services/http.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                        \n                    delete(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/http.service.ts:190\n                        \n                    \n\n\n            \n                \n                        Performs a DELETE HTTP request to the specified URL.\nThis method sends a DELETE request to the server, appending the provided URL to the base server URL.\nIt includes credentials with the request and handles any errors that may occur.\nExample :     If an error occurs, the promise will be rejected with a user-friendly error message.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe endpoint URL to be appended to the base server URL for the DELETE request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves with the server's response data if the request is successful.\nIf an error occurs, the promise will be rejected with a user-friendly error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        get\n                        \n                    \n                \n            \n            \n                \n                        \n                    get(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/http.service.ts:28\n                        \n                    \n\n\n            \n                \n                        Performs an HTTP GET request to the server.\nThis method sends a GET request to the server, appending the provided URL to the base server URL.\nIt includes credentials with the request and uses lastValueFrom to convert the Observable to a Promise.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe endpoint URL to be appended to the base server URL for the GET request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves with the server's response data if the request is successful.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRxJS\n                        \n                    \n                \n            \n            \n                \ngetRxJS(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/http.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Performs an HTTP GET request and returns an Observable.\nThis method sends a GET request to the server, appending the provided URL to the base server URL.\nIt handles any errors that may occur using RxJS operators.\nExample :     If an error occurs, the Observable will emit a user-friendly error message.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe endpoint URL to be appended to the base server URL for the GET request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits the server's response data if the request is successful.\nIf an error occurs, the Observable will emit a user-friendly error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWithOutsideURL\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWithOutsideURL(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/http.service.ts:59\n                        \n                    \n\n\n            \n                \n                        Performs an HTTP GET request to an external URL.\nThis method sends a GET request to the specified external URL using the HttpClient service.\nIt uses lastValueFrom to convert the Observable returned by HttpClient into a Promise,\nmaking it easier to use with async/await.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe full external URL to which the GET request will be sent.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves with the response data from the external URL.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getWithOutsideURLCSV\n                        \n                    \n                \n            \n            \n                \n                        \n                    getWithOutsideURLCSV(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/http.service.ts:76\n                        \n                    \n\n\n            \n                \n                        Performs an HTTP GET request to an external URL and retrieves CSV data as text.\nThis method sends a GET request to the specified external URL and expects the response\nto be in CSV format. It sets the response type to 'text' to receive the raw CSV data.\nThe method uses lastValueFrom to convert the Observable returned by HttpClient into a Promise,\nmaking it easier to use with async/await.\nExample :     If an error occurs, the promise will be rejected.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe full external URL from which to retrieve the CSV data.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves with the CSV data as a string if the request is successful.\nIf an error occurs, the promise will be rejected.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/http.service.ts:205\n                        \n                    \n\n\n            \n                \n                        Handles HTTP errors and provides a user-friendly error message.\nThis function processes HttpErrorResponse objects, logs appropriate error messages,\nand returns an Observable that emits a user-facing error message.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe HttpErrorResponse object containing error details.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits a string containing a user-friendly error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        patch\n                        \n                    \n                \n            \n            \n                \n                        \n                    patch(url: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/http.service.ts:173\n                        \n                    \n\n\n            \n                \n                        Performs a PATCH HTTP request to the specified URL.\nThis method sends a PATCH request to the server, appending the provided URL to the base server URL.\nIt includes the given data in the request body and sends credentials with the request.\nAny errors that occur during the request are handled by the handleError method.\nExample :     If an error occurs, the promise will be rejected with a user-friendly error message.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe endpoint URL to be appended to the base server URL for the PATCH request.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be sent in the request body. Can be of any type.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves with the server's response data if the request is successful.\nIf an error occurs, the promise will be rejected with a user-friendly error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        post\n                        \n                    \n                \n            \n            \n                \n                        \n                    post(url: string, data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/http.service.ts:93\n                        \n                    \n\n\n            \n                \n                        Performs an HTTP POST request to the server.\nThis method sends a POST request to the server, appending the provided URL to the base server URL.\nIt includes the given data in the request body and sends credentials with the request.\nAny errors that occur during the request are handled by the handleError method.\nExample :     If an error occurs, the promise will be rejected with a user-friendly error message.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe endpoint URL to be appended to the base server URL for the POST request.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn object containing the data to be sent in the request body.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves with the server's response data if the request is successful.\nIf an error occurs, the promise will be rejected with a user-friendly error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postRxJS\n                        \n                    \n                \n            \n            \n                \npostRxJS(url: string, data: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/http.service.ts:110\n                        \n                    \n\n\n            \n                \n                        Performs an HTTP POST request and returns an Observable.\nThis method sends a POST request to the server, appending the provided URL to the base server URL.\nIt includes the given data in the request body and handles any errors that may occur using RxJS operators.\nExample :     If an error occurs, the Observable will emit a user-friendly error message.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe endpoint URL to be appended to the base server URL for the POST request.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be sent in the request body. Can be of any type.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                An Observable that emits the server's response data if the request is successful.\nIf an error occurs, the Observable will emit a user-friendly error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        postWithOutsideURL\n                        \n                    \n                \n            \n            \n                \n                        \n                    postWithOutsideURL(url: string, data: object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/http.service.ts:130\n                        \n                    \n\n\n            \n                \n                        Performs a POST HTTP request to an external URL with JSON data.\nThis method sends a POST request to the specified external URL, including the given data\nin the request body as JSON. It uses lastValueFrom to convert the Observable returned by\nHttpClient into a Promise, making it easier to use with async/await. Any errors that occur\nduring the request are handled by the handleError method.\nExample :     If an error occurs, the promise will be rejected with a user-friendly error message.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe full external URL for the POST request.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nAn object containing the data to be sent in the request body as JSON.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves with the server's response data if the request is successful.\nIf an error occurs, the promise will be rejected with a user-friendly error message.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        putURL\n                        \n                    \n                \n            \n            \n                \n                        \n                    putURL(url: string, data: any, type: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/http.service.ts:151\n                        \n                    \n\n\n            \n                \n                        Performs a PUT HTTP request to the specified URL with custom headers.\nThis method sends a PUT request to the provided URL, including the given data in the request body\nand setting the Content-Type header based on the specified type. It uses lastValueFrom to convert\nthe Observable returned by HttpClient into a Promise, making it easier to use with async/await.\nAny errors that occur during the request are handled by the handleError method.\nExample :     If an error occurs, the promise will be rejected with a user-friendly error message.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe full URL for the PUT request.\n\n\n                                            \n                                        \n                                        \n                                                data\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe data to be sent in the request body. Can be of any type.\n\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe Content-Type header value to be set for the request.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     unknown\n\n                        \n                            \n                                A Promise that resolves with the server's response data if the request is successful.\nIf an error occurs, the promise will be rejected with a user-friendly error message.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        server_url\n                        \n                    \n                \n            \n                \n                    \n                        Default value : environment.backend_url\n                    \n                \n                    \n                        \n                                Defined in src/app/utilities/services/http.service.ts:12\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { HttpClient, HttpErrorResponse, HttpHeaders } from '@angular/common/http';\nimport { Inject, Injectable, PLATFORM_ID } from '@angular/core';\nimport { catchError, lastValueFrom, throwError } from 'rxjs';\nimport { environment } from '../../../environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HttpService {\n\n  // Base server URL, can be overridden in the environment file.\n  server_url = environment.backend_url;\n\n  constructor(\n    private httpService: HttpClient,\n  ) { }\n\n  /**\n   * Performs an HTTP GET request to the server.\n   *\n   * This method sends a GET request to the server, appending the provided URL to the base server URL.\n   * It includes credentials with the request and uses lastValueFrom to convert the Observable to a Promise.\n   *\n   * @param url - The endpoint URL to be appended to the base server URL for the GET request.\n   * @returns A Promise that resolves with the server's response data if the request is successful.\n   * @throws Will throw an error if the HTTP request fails or if there's a network issue.\n   */\n  async get(url: string) {\n    return await lastValueFrom(this.httpService.get(this.server_url + url, { withCredentials: true }));\n  }\n\n  /**\n   * Performs an HTTP GET request and returns an Observable.\n   * \n   * This method sends a GET request to the server, appending the provided URL to the base server URL.\n   * It handles any errors that may occur using RxJS operators.\n   *\n   * @param url - The endpoint URL to be appended to the base server URL for the GET request.\n   * @returns An Observable that emits the server's response data if the request is successful.\n   *          If an error occurs, the Observable will emit a user-friendly error message.\n   */\n  getRxJS(url: string) {\n    return this.httpService.get(this.server_url + url).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Performs an HTTP GET request to an external URL.\n   *\n   * This method sends a GET request to the specified external URL using the HttpClient service.\n   * It uses lastValueFrom to convert the Observable returned by HttpClient into a Promise,\n   * making it easier to use with async/await.\n   *\n   * @param url - The full external URL to which the GET request will be sent.\n   * @returns A Promise that resolves with the response data from the external URL.\n   * @throws Will throw an error if the HTTP request fails or if there's a network issue.\n   */\n  async getWithOutsideURL(url: string) {\n    return await lastValueFrom(this.httpService.get(url));\n  }\n\n  /**\n   * Performs an HTTP GET request to an external URL and retrieves CSV data as text.\n   *\n   * This method sends a GET request to the specified external URL and expects the response\n   * to be in CSV format. It sets the response type to 'text' to receive the raw CSV data.\n   * The method uses lastValueFrom to convert the Observable returned by HttpClient into a Promise,\n   * making it easier to use with async/await.\n   *\n   * @param url - The full external URL from which to retrieve the CSV data.\n   * @returns A Promise that resolves with the CSV data as a string if the request is successful.\n   *          If an error occurs, the promise will be rejected.\n   * @throws Will throw an error if the HTTP request fails or if there's a network issue.\n   */\n  async getWithOutsideURLCSV(url: string) {\n    return await lastValueFrom(this.httpService.get(url, { responseType: 'text' }));\n  }\n\n  /**\n   * Performs an HTTP POST request to the server.\n   *\n   * This method sends a POST request to the server, appending the provided URL to the base server URL.\n   * It includes the given data in the request body and sends credentials with the request.\n   * Any errors that occur during the request are handled by the `handleError` method.\n   *\n   * @param url - The endpoint URL to be appended to the base server URL for the POST request.\n   * @param data - An object containing the data to be sent in the request body.\n   * @returns A Promise that resolves with the server's response data if the request is successful.\n   *          If an error occurs, the promise will be rejected with a user-friendly error message.\n   * @throws Will throw an error if the HTTP request fails or if there's a network issue.\n   */\n  async post(url: string, data: object) {\n    return await lastValueFrom(this.httpService.post(this.server_url + url, data, { withCredentials: true }).pipe(\n      catchError(this.handleError)\n    ));\n  }\n\n  /**\n   * Performs an HTTP POST request and returns an Observable.\n   * \n   * This method sends a POST request to the server, appending the provided URL to the base server URL.\n   * It includes the given data in the request body and handles any errors that may occur using RxJS operators.\n   *\n   * @param url - The endpoint URL to be appended to the base server URL for the POST request.\n   * @param data - The data to be sent in the request body. Can be of any type.\n   * @returns An Observable that emits the server's response data if the request is successful.\n   *          If an error occurs, the Observable will emit a user-friendly error message.\n   */\n  postRxJS(url: string, data: any) {\n    return this.httpService.post(this.server_url + url, data).pipe(\n      catchError(this.handleError)\n    );\n  }\n\n  /**\n   * Performs a POST HTTP request to an external URL with JSON data.\n   *\n   * This method sends a POST request to the specified external URL, including the given data\n   * in the request body as JSON. It uses lastValueFrom to convert the Observable returned by\n   * HttpClient into a Promise, making it easier to use with async/await. Any errors that occur\n   * during the request are handled by the `handleError` method.\n   *\n   * @param url - The full external URL for the POST request.\n   * @param data - An object containing the data to be sent in the request body as JSON.\n   * @returns A Promise that resolves with the server's response data if the request is successful.\n   *          If an error occurs, the promise will be rejected with a user-friendly error message.\n   * @throws Will throw an error if the HTTP request fails or if there's a network issue.\n   */\n  async postWithOutsideURL(url: string, data: object) {\n    return await lastValueFrom(this.httpService.post(url, data, { headers: { 'Content-Type': 'application/json' } }).pipe(\n      catchError(this.handleError)\n    ));\n  }\n\n  /**\n   * Performs a PUT HTTP request to the specified URL with custom headers.\n   *\n   * This method sends a PUT request to the provided URL, including the given data in the request body\n   * and setting the Content-Type header based on the specified type. It uses lastValueFrom to convert\n   * the Observable returned by HttpClient into a Promise, making it easier to use with async/await.\n   * Any errors that occur during the request are handled by the `handleError` method.\n   *\n   * @param url - The full URL for the PUT request.\n   * @param data - The data to be sent in the request body. Can be of any type.\n   * @param type - The Content-Type header value to be set for the request.\n   * @returns A Promise that resolves with the server's response data if the request is successful.\n   *          If an error occurs, the promise will be rejected with a user-friendly error message.\n   * @throws Will throw an error if the HTTP request fails or if there's a network issue.\n   */\n  async putURL(url: string, data: any, type: string) {\n    const headers = new HttpHeaders({\n      'Content-Type': type,\n    });\n    return await lastValueFrom(this.httpService.put(url, data, { ...headers }).pipe(\n      catchError(this.handleError),\n    ));\n  }\n\n  /**\n   * Performs a PATCH HTTP request to the specified URL.\n   *\n   * This method sends a PATCH request to the server, appending the provided URL to the base server URL.\n   * It includes the given data in the request body and sends credentials with the request.\n   * Any errors that occur during the request are handled by the `handleError` method.\n   *\n   * @param url - The endpoint URL to be appended to the base server URL for the PATCH request.\n   * @param data - The data to be sent in the request body. Can be of any type.\n   * @returns A Promise that resolves with the server's response data if the request is successful.\n   *          If an error occurs, the promise will be rejected with a user-friendly error message.\n   * @throws Will throw an error if the HTTP request fails or if there's a network issue.\n   */\n  async patch(url: string, data: any) {\n    return await lastValueFrom(this.httpService.patch(this.server_url + url, data, { withCredentials: true }).pipe(\n      catchError(this.handleError)\n    ));\n  }\n\n  /**\n   * Performs a DELETE HTTP request to the specified URL.\n   *\n   * This method sends a DELETE request to the server, appending the provided URL to the base server URL.\n   * It includes credentials with the request and handles any errors that may occur.\n   *\n   * @param url - The endpoint URL to be appended to the base server URL for the DELETE request.\n   * @returns A Promise that resolves with the server's response data if the request is successful.\n   *          If an error occurs, the promise will be rejected with a user-friendly error message.\n   * @throws Will throw an error if the HTTP request fails or if there's a network issue.\n   */\n  async delete(url: string) {\n    return await lastValueFrom(this.httpService.delete(this.server_url + url, { withCredentials: true }).pipe(\n      catchError(this.handleError)\n    ));\n  }\n\n  /**\n   * Handles HTTP errors and provides a user-friendly error message.\n   * \n   * This function processes HttpErrorResponse objects, logs appropriate error messages,\n   * and returns an Observable that emits a user-facing error message.\n   *\n   * @param error - The HttpErrorResponse object containing error details.\n   * @returns An Observable that emits a string containing a user-friendly error message.\n   */\n  private handleError(error: HttpErrorResponse) {\n    if (error.status === 0) {\n      // A client-side or network error occurred. Handle it accordingly.\n      console.error('An error occurred:', error.error);\n    } else {\n      // The backend returned an unsuccessful response code.\n      // The response body may contain clues as to what went wrong.\n      console.error(\n        `Backend returned code ${error.status}, body was: `, error.error);\n    }\n    const message = Array.isArray(error.error.message) ? error.error.message[0] : error.error.message;\n    // Return an observable with a user-facing error message.\n    return throwError(() => message);\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/INotification.html":{"url":"interfaces/INotification.html","title":"interface - INotification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  INotification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utilities/services/event.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            title\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                                \n                                        \n                                            unread\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        title:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unread\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        unread:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable, OnDestroy, Output } from '@angular/core';\n\nexport interface INotification {\n  title: string,\n  description: string,\n  createdAt: Date,\n  unread: boolean,\n  type: string\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventService implements OnDestroy {\n\n  @Output() navUserOptionEvent = new EventEmitter();\n  @Output() notificationEvent = new EventEmitter();\n\n  /**\n   * Emits a notification event with the provided data.\n   *\n   * @param data - The notification data containing a header and message.\n   * @returns {void} - This function does not return any value.\n   *\n   */\n  alertNotification(data: INotification): void {\n    this.notificationEvent.emit(data);\n  }\n\n  /**\n * This function is responsible for emitting an event to change the navigation user login or option.\n * It checks if a user is currently logged in by retrieving the 'user' object from the local storage.\n * If the user object exists and has at least one key-value pair, it emits the event.\n *\n * @returns {void}\n */\nchangeNavUserLoginOrOption(): void {\n  this.navUserOptionEvent.emit();\n}\n\n  /**\n * This method is called when the component is destroyed.\n * It unsubscribes from the `navUserOptionEvent, notificationEvent` to prevent memory leaks.\n *\n * @returns {void}\n */\n  ngOnDestroy(): void {\n    this.navUserOptionEvent.unsubscribe();\n    this.notificationEvent.unsubscribe();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IndexComponent.html":{"url":"components/IndexComponent.html","title":"component - IndexComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  IndexComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/index/index.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-index\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            RouterModule\n                            MenuModule\n                            DividerModule\n                            ButtonModule\n                            StyleClassModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./index.component.html\n            \n\n\n\n            \n                styleUrl\n                ./index.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                isMobileScreen\n                            \n                            \n                                menuLanguage\n                            \n                            \n                                menuLoginUser\n                            \n                            \n                                menuMainNavigation\n                            \n                            \n                                menuMainNavigationResponsive\n                            \n                            \n                                    Private\n                                messaging\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                deleteFCMToken\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onInitValues\n                            \n                            \n                                    Async\n                                onLogoutUser\n                            \n                            \n                                requestForUserLocation\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, httpService: HttpService, authService: AuthService, eventService: EventService, platformId: Object, breakpointObserver: BreakpointObserver, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/index/index.component.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        eventService\n                                                  \n                                                        \n                                                                        EventService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        platformId\n                                                  \n                                                        \n                                                                        Object\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        breakpointObserver\n                                                  \n                                                        \n                                                                    BreakpointObserver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        deleteFCMToken\n                        \n                    \n                \n            \n            \n                \n                        \n                    deleteFCMToken()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/index/index.component.ts:248\n                        \n                    \n\n\n            \n                \n                        Deletes the Firebase Cloud Messaging (FCM) token associated with the current device.\nThis function removes the FCM token, which is used for push notifications.\nIt's important to note that if you're storing FCM tokens in your Firestore database,\nyou should also update the database to reflect this deletion.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the token has been successfully deleted.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/index/index.component.ts:70\n                        \n                    \n\n\n            \n                \n                        Initializes the component by performing several setup tasks.\nThis method is called automatically by Angular when the component is initialized.\nIt performs the following tasks:\n\nRequests the user's location.\nInitializes component values.\nChecks if the user is logged in by making an API call.\nSets up a subscription to handle navigation user option events.\n\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when all initialization tasks are complete.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onInitValues\n                        \n                    \n                \n            \n            \n                \nonInitValues()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/index/index.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Initializes the navigation menu items for both large screens and responsive layouts.\nThis method sets up the main navigation menu, user authentication options, and creates\na responsive version of the main navigation for smaller devices.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLogoutUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLogoutUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/index/index.component.ts:182\n                        \n                    \n\n\n            \n                \n                        Performs the user logout process.\nThis asynchronous function handles the complete logout procedure, which includes:\n\nDeleting the user's record from the authentication database.\nRemoving the Firebase Cloud Messaging (FCM) token.\nRedirecting the user to the login page.\nReloading the page to ensure all user-specific data is cleared.\n\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the logout process is complete.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        requestForUserLocation\n                        \n                    \n                \n            \n            \n                \nrequestForUserLocation()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/index/index.component.ts:211\n                        \n                    \n\n\n            \n                \n                        Requests and stores the user's current geolocation.\nThis function checks if the browser supports geolocation and if the user's location\nis not already stored. If these conditions are met, it requests the user's current\nposition, stores it in local storage, and refreshes the page.\nThis function only executes in browser environments and relies on the availability\nof the Geolocation API. It uses the LocalStorageService to store the location data.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/index/index.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isMobileScreen\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.breakpointObserver.isMatched('(max-width: 599px)')\n                    \n                \n                    \n                        \n                                Defined in src/app/components/index/index.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuLanguage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[] | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/index/index.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuLoginUser\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/index/index.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuMainNavigation\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[] | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/index/index.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        menuMainNavigationResponsive\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MenuItem[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/index/index.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messaging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Messaging)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/index/index.component.ts:43\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject, PLATFORM_ID, inject } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\nimport { Router, RouterModule } from '@angular/router';\n\n// firebase token\nimport { Messaging, deleteToken } from '@angular/fire/messaging';\n\n// custom services\nimport { AuthService } from '../../utilities/services/auth.service';\nimport { EventService } from '../../utilities/services/event.service';\nimport { LocalStorageService } from '../../utilities/services/local-storage.service';\n\n// primeng\nimport { MenuItem } from 'primeng/api';\nimport { MenuModule } from 'primeng/menu';\nimport { DividerModule } from 'primeng/divider';\nimport { ButtonModule } from 'primeng/button';\nimport { StyleClassModule } from 'primeng/styleclass';\n\n// angular cdk\nimport { BreakpointObserver } from '@angular/cdk/layout';\nimport { HttpService } from '../../utilities/services/http.service';\n\n@Component({\n  selector: 'app-index',\n  standalone: true,\n  imports: [RouterModule, MenuModule, DividerModule, ButtonModule, StyleClassModule],\n  templateUrl: './index.component.html',\n  styleUrl: './index.component.scss'\n})\nexport class IndexComponent {\n\n  // menu items\n  menuLanguage: MenuItem[] | undefined;\n  menuMainNavigation: MenuItem[] | undefined;\n  menuMainNavigationResponsive: MenuItem[] = [];\n  menuLoginUser: any;\n\n  // current login user session\n  currentUser: boolean = false;\n\n  // firebase notification\n  private messaging = inject(Messaging);\n\n  // user display\n  isMobileScreen = this.breakpointObserver.isMatched('(max-width: 599px)');\n\n  constructor(\n    private readonly router: Router,\n    private readonly httpService: HttpService,\n    private readonly authService: AuthService,\n    private readonly eventService: EventService,\n    @Inject(PLATFORM_ID) private platformId: Object,\n    private readonly breakpointObserver: BreakpointObserver,\n    private readonly localStorageService: LocalStorageService\n  ) { }\n\n  /**\n   * Initializes the component by performing several setup tasks.\n   * \n   * This method is called automatically by Angular when the component is initialized.\n   * It performs the following tasks:\n   * 1. Requests the user's location.\n   * 2. Initializes component values.\n   * 3. Checks if the user is logged in by making an API call.\n   * 4. Sets up a subscription to handle navigation user option events.\n   * \n   * @returns {Promise} A promise that resolves when all initialization tasks are complete.\n   */\n  async ngOnInit(): Promise {\n    this.requestForUserLocation();\n    this.onInitValues();\n  \n    // check are valid with login\n    this.httpService.get('user/identity').then(async (user: any) => {\n      if (user) {\n        this.currentUser = true;\n      }\n    }).catch((error: any) => {\n      this.currentUser = false;\n    });\n  \n    this.eventService.navUserOptionEvent\n      .subscribe(() => {\n        this.currentUser = true;\n      });\n  }\n\n  /**\n   * Initializes the navigation menu items for both large screens and responsive layouts.\n   * This method sets up the main navigation menu, user authentication options, and creates\n   * a responsive version of the main navigation for smaller devices.\n   *\n   * @returns {void}\n   */\n  onInitValues(): void {\n    // setup option for main navigation for large screen menu\n    this.menuMainNavigation = [\n      {\n        label: 'Home',\n        icon: 'pi pi-home',\n        routerLink: ''\n      },\n      {\n        label: 'Buy Online',\n        icon: 'pi pi-shopping-bag',\n        routerLink: 'search'\n      },\n      {\n        label: 'Prequalify Loan',\n        icon: 'pi pi-money-bill',\n        routerLink: 'prequalify-loan'\n      }\n    ];\n\n    // setup authentication options\n    this.menuLoginUser = [\n      {\n        label: 'Home',\n        type: 'link',\n        routerLink: '/user/home',\n      },\n      {\n        label: 'My vehicles',\n        type: 'link',\n        routerLink: '/user/car-list',\n      },\n      {\n        label: 'Saved Search',\n        type: 'link',\n        routerLink: '/user/search-alert',\n      },\n      {\n        label: 'Saved Vehicle',\n        type: 'link',\n        routerLink: '/user/favourite-vehicle',\n      },\n      {\n        label: 'Price Alert',\n        type: 'link',\n        routerLink: '/user/price-alert',\n      },\n      {\n        label: 'Account Settings',\n        type: 'link',\n        routerLink: '/user/profile',\n      },\n      {\n        label: 'Logout',\n        type: 'function'\n      }];\n\n    // setup dynamic responsive menu for small devices\n    this.menuMainNavigationResponsive = [];\n    this.menuMainNavigation.forEach((item: MenuItem) => {\n      this.menuMainNavigationResponsive.push({\n        label: item.label,\n        icon: item.icon,\n        routerLink: item.routerLink\n      })\n    });\n    this.menuMainNavigationResponsive = [...this.menuMainNavigationResponsive, {\n      label: 'Authentication',\n      auth: true\n    }];\n  }\n\n\n  /**\n   * Performs the user logout process.\n   * \n   * This asynchronous function handles the complete logout procedure, which includes:\n   * 1. Deleting the user's record from the authentication database.\n   * 2. Removing the Firebase Cloud Messaging (FCM) token.\n   * 3. Redirecting the user to the login page.\n   * 4. Reloading the page to ensure all user-specific data is cleared.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the logout process is complete.\n   * @throws Will throw an error if any step of the logout process fails.\n   */\n  async onLogoutUser(): Promise {\n    // Delete record from auth db\n    await this.authService.OnLogout();\n  \n    // Remove FCM token\n    await this.deleteFCMToken();\n  \n    // Redirect to login\n    this.router.navigateByUrl('/login');\n  \n    // reload page\n    location.reload();\n  }\n\n  /**\n   * Requests and stores the user's current geolocation.\n   * \n   * This function checks if the browser supports geolocation and if the user's location\n   * is not already stored. If these conditions are met, it requests the user's current\n   * position, stores it in local storage, and refreshes the page.\n   * \n   * @returns {void}\n   * \n   * @remarks\n   * This function only executes in browser environments and relies on the availability\n   * of the Geolocation API. It uses the LocalStorageService to store the location data.\n   * \n   * @throws {GeolocationPositionError} If there's an error obtaining the geolocation.\n   */\n  requestForUserLocation(): void {\n    if (isPlatformBrowser(this.platformId)) {\n      const userLocation = this.localStorageService.get('location');\n      if (!userLocation) {\n        if (navigator.geolocation) {\n          navigator.geolocation.getCurrentPosition((position: GeolocationPosition) => {\n            if (position) {\n              const latitude: number = position.coords.latitude;\n              const longitude: number = position.coords.longitude;\n              const newLocation = {\n                lat: latitude,\n                lng: longitude\n              };\n              this.localStorageService.setObject('location', newLocation)\n              location.reload(); // refresh forcefully\n            }\n          },\n            (error: GeolocationPositionError) => console.error(error));\n        } else {\n          console.log('Geolocation is not supported by this browser.');\n        }\n      }\n    }\n  }\n\n\n  /**\n   * Deletes the Firebase Cloud Messaging (FCM) token associated with the current device.\n   * \n   * This function removes the FCM token, which is used for push notifications.\n   * It's important to note that if you're storing FCM tokens in your Firestore database,\n   * you should also update the database to reflect this deletion.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the token has been successfully deleted.\n   * @throws Will throw an error if the token deletion fails.\n   */\n  async deleteFCMToken(): Promise {\n    // We can also delete fcm tokens, make sure to also update this on your firestore db if you are storing them as well\n    await deleteToken(this.messaging);\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n        Auto Credit Co\n    \n    \n        \n            @for (menu of menuMainNavigation; track menu; let i = $index) {\n            \n                \n                {{menu.label! }}\n            \n            }\n        \n    \n    \n        \n            \n        \n        \n            \n                @if (item.auth) {\n                \n                \n                    \n                    \n                \n                } @else {\n                \n                    \n                    {{ item.label }}\n                \n                }\n            \n        \n\n        @if(currentUser) {\n        \n            \n                \n                    \n                    @if (!isMobileScreen) {\n                        My Account\n                    }\n                \n            \n            \n                @for (menu of menuLoginUser; track menu) {\n                \n                    {{ menu.label }}\n                \n                }\n            \n        \n        } @else {\n        \n            \n            Login\n        \n        }\n    \n\n\n\n\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Auto Credit Co                            @for (menu of menuMainNavigation; track menu; let i = $index) {                                            {{menu.label! }}                        }                                                                                @if (item.auth) {                                                                                                        } @else {                                                        {{ item.label }}                                }                            @if(currentUser) {                                                                            @if (!isMobileScreen) {                        My Account                    }                                                        @for (menu of menuLoginUser; track menu) {                                    {{ menu.label }}                                }                            } @else {                                Login                }        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'IndexComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LabelValueData.html":{"url":"interfaces/LabelValueData.html","title":"interface - LabelValueData","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LabelValueData\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/modules/user/car-manage/car.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            value\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        value:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        type element = 'textbox' | 'dropdown' | 'select-button' | 'textarea' | 'upload' | 'checkbox' | 'editor' | 'multi-select' | 'selection' | 'multi-choice'\ntype textBoxtype = 'normal' | 'date' | 'money' | 'currency' | 'group'  | 'number'\n\nexport interface CarForm {\n    name: string,\n    value: string,\n    data: Array\n}\n\nexport interface CommonElement {\n    type: element,\n    name: string,\n    datatype: string, // type like number, text\n    placeholder: string,\n    value: any, // set default value\n    format: textBoxtype, // format for textbox only\n    readonly: boolean, // make element readonly\n    data: LabelValueData[],\n    search: LabelValueData[], // store auto complete - multi select search result\n    accept: string, // file format extentions\n    class: string,\n    multiple: boolean, // file selection,\n    mode: string, // media mode - add or delete\n    required: boolean,\n    error: string, // set error for element\n    pattern?: { type: string, label: string, value: string }, // for specific textbox format regex\n    dateFormat: string, // date format\n    minDate: Date, // min date\n    keyFilter: string, // data enter format with primeng int, alphanum\n    maxSize: number, // file maxsize\n    note: string, // note for specific element\n    group_right: string, // input group element\n    group_left: string, // input group element\n    group_string: string, // input group element\n    dependant: boolean, // check dependant on any element\n    dependant_field: string, // get dependant field if dependant,\n    onChange: boolean, // modify toggle as per dependant validation,\n    changeField: string, // set disable field for main element,\n    element: any // multiple selection field\n    removed: boolean, // remove element from selection form\n}\n\nexport interface LabelValueData {\n    label: string,\n    value: string\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/loader/loader.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-loader\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n            \n                styleUrl\n                ./loader.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                loader\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(loader: LoaderService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/loader/loader.component.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                  \n                                                        \n                                                                        LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        loader\n                        \n                    \n                \n            \n                \n                    \n                        Type :         LoaderService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/loader/loader.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { Component, ViewEncapsulation } from '@angular/core';\n\n// set loader saervice to set loader value dynamically\nimport { LoaderService } from './../../utilities/services/loader.service';\n\n@Component({\n  selector: 'app-loader',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './loader.component.html',\n  styleUrl: './loader.component.scss',\n  encapsulation: ViewEncapsulation.None\n})\nexport class LoaderComponent {\n\n  constructor(public loader: LoaderService) { }\n}\n\n    \n\n    \n        \n    \n        \n            \n                \n                \n                \n                \n                \n                \n            \n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utilities/services/loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                loading\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLoading\n                            \n                            \n                                setLoading\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/utilities/services/loader.service.ts:9\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLoading\n                        \n                    \n                \n            \n            \n                \ngetLoading()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/loader.service.ts:38\n                        \n                    \n\n\n            \n                \n                        Retrieves the current loading state of the application.\nThis method returns the internal loading state, which can be used\nto determine if the application is currently in a loading state.\nThis is useful for components or services that need to react to\nor display the current loading status.\nExample :     Returns true if the application is in a loading state, false otherwise.\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                A boolean value indicating the current loading state.\nReturns true if the application is in a loading state, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setLoading\n                        \n                    \n                \n            \n            \n                \nsetLoading(loading: boolean)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/loader.service.ts:23\n                        \n                    \n\n\n            \n                \n                        Sets the loading state of the application.\nThis method updates the internal loading state, which can be used\nto control the visibility of loading indicators or spinners in the UI.\nExample :             True if the application is loading, false otherwise.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                loading\n                                            \n                                                            boolean\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nA boolean value indicating whether the application is in a loading state.\nTrue if the application is loading, false otherwise.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                void\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/utilities/services/loader.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LoaderService {\n\n  // Private variable to store the loading state of the application.\n  private loading: boolean = false;\n\n  constructor() { }\n\n  /**\n   * Sets the loading state of the application.\n   * \n   * This method updates the internal loading state, which can be used\n   * to control the visibility of loading indicators or spinners in the UI.\n   * \n   * @param loading - A boolean value indicating whether the application is in a loading state.\n   *                  True if the application is loading, false otherwise.\n   * @returns void\n   */\n  setLoading(loading: boolean) {\n    this.loading = loading;\n  }\n\n  /**\n   * Retrieves the current loading state of the application.\n   * \n   * This method returns the internal loading state, which can be used\n   * to determine if the application is currently in a loading state.\n   * This is useful for components or services that need to react to\n   * or display the current loading status.\n   * \n   * @returns A boolean value indicating the current loading state.\n   *          Returns true if the application is in a loading state, false otherwise.\n   */\n  getLoading(): boolean {\n    return this.loading;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStorageService.html":{"url":"injectables/LocalStorageService.html","title":"injectable - LocalStorageService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStorageService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utilities/services/local-storage.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                storage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                get\n                            \n                            \n                                getObject\n                            \n                            \n                                isPlateformBrowser\n                            \n                            \n                                remove\n                            \n                            \n                                set\n                            \n                            \n                                setObject\n                            \n                            \n                                userIsDealer\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(storage: Storage)\n                    \n                \n                        \n                            \n                                Defined in src/app/utilities/services/local-storage.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        storage\n                                                  \n                                                        \n                                                                    Storage\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        clear\n                        \n                    \n                \n            \n            \n                \nclear()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/local-storage.service.ts:75\n                        \n                    \n\n\n            \n                \n                        clear local storage\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/local-storage.service.ts:33\n                        \n                    \n\n\n            \n                \n                        get value from loca storage by key\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getObject\n                        \n                    \n                \n            \n            \n                \ngetObject(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/local-storage.service.ts:56\n                        \n                    \n\n\n            \n                \n                        get key value by object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isPlateformBrowser\n                        \n                    \n                \n            \n            \n                \nisPlateformBrowser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/local-storage.service.ts:89\n                        \n                    \n\n\n            \n                \n                        Checks if the current platform is a browser.\nThis method uses the isPlatformBrowser function from @angular/common to determine if the current\nplatform is a browser. The result is cached in the storage property for future use.\n\n\n                        \n                            Returns :     Storage\n\n                        \n                            \n                                Returns true if the current platform is a browser, false otherwise.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        remove\n                        \n                    \n                \n            \n            \n                \nremove(key: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/local-storage.service.ts:66\n                        \n                    \n\n\n            \n                \n                        remove key from local storage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        set\n                        \n                    \n                \n            \n            \n                \nset(key: string, value: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/local-storage.service.ts:22\n                        \n                    \n\n\n            \n                \n                        set key - value in local storage\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setObject\n                        \n                    \n                \n            \n            \n                \nsetObject(key: string, value: Object)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/local-storage.service.ts:45\n                        \n                    \n\n\n            \n                \n                        set key - value by object\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                key\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                value\n                                            \n                                                            Object\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userIsDealer\n                        \n                    \n                \n            \n            \n                \nuserIsDealer()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/local-storage.service.ts:102\n                        \n                    \n\n\n            \n                \n                        Determines if the current user is a dealer.\nThis method checks the user object stored in local storage to determine\nif the user's type is 'dlr' (dealer).\nor null if storage is not available or the user object doesn't exist.\n\n\n                        \n                            Returns :     boolean | null\n\n                        \n                            \n                                Returns true if the user is a dealer, false if not,\nor null if storage is not available or the user object doesn't exist.\n\n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        storage\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Storage\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(BROWSER_STORAGE)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/utilities/services/local-storage.service.ts:14\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, InjectionToken } from '@angular/core';\n\nexport const BROWSER_STORAGE = new InjectionToken('Browser Storage', {\n  providedIn: 'root',\n  factory: () => localStorage\n});\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class LocalStorageService {\n\n  constructor(\n    @Inject(BROWSER_STORAGE) public storage: Storage\n  ) { }\n\n  /**\n   * set key - value in local storage\n   * @param key \n   * @param value \n   */\n  set(key: string, value: string) {\n    if (this.storage) {\n      this.storage.setItem(key, value);\n    }\n  }\n\n  /**\n   * get value from loca storage by key\n   * @param key \n   * @returns \n   */\n  get(key: string) {\n    if (this.storage) {\n      return this.storage.getItem(key);\n    }\n    return null;\n  }\n\n  /**\n   * set key - value by object \n   * @param key \n   * @param value \n   */\n  setObject(key: string, value: Object) {\n    if (this.storage) {\n      this.storage.setItem(key, JSON.stringify(value));\n    }\n  }\n\n  /**\n   * get key value by object\n   * @param key \n   * @returns \n   */\n  getObject(key: string) {\n    if (this.storage) {\n      return JSON.parse(this.storage.getItem(key)!);\n    }\n  }\n\n  /**\n   * remove key from local storage\n   * @param key \n   */\n  remove(key: string) {\n    if (this.storage) {\n      this.storage.removeItem(key);\n    }\n  }\n\n  /**\n   * clear local storage\n   */\n  clear() {\n    if (this.storage) {\n      this.storage.clear();\n    }\n  }\n\n  /**\n * Checks if the current platform is a browser.\n *\n * This method uses the `isPlatformBrowser` function from `@angular/common` to determine if the current\n * platform is a browser. The result is cached in the `storage` property for future use.\n *\n * @returns {boolean} Returns `true` if the current platform is a browser, `false` otherwise.\n */\n  isPlateformBrowser() {\n    return this.storage;\n  }\n\n  /**\n   * Determines if the current user is a dealer.\n   * \n   * This method checks the user object stored in local storage to determine\n   * if the user's type is 'dlr' (dealer).\n   * \n   * @returns {boolean | null} Returns true if the user is a dealer, false if not,\n   * or null if storage is not available or the user object doesn't exist.\n   */\n  userIsDealer(): boolean | null {\n    if (this.storage) {\n      return this.getObject('user').type === 'dlr'\n    }\n    return null\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-login\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            RouterModule\n                            PasswordModule\n                            InputTextModule\n                            DividerModule\n                            ButtonModule\n                            ToastModule\n                            AnimateOnScrollModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n            \n                styleUrl\n                ./login.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formLogin\n                            \n                            \n                                    Private\n                                messaging\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onClearForm\n                            \n                            \n                                    Async\n                                onLoginSubmit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, httpService: HttpService, messageService: MessageService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onClearForm\n                        \n                    \n                \n            \n            \n                \nonClearForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Clears the login form by resetting all form controls to their initial values.\nThis function is typically called when the user wants to clear all entered data from the form.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This function does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onLoginSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onLoginSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login/login.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Handles the login form submission process.\nThis asynchronous function performs the following tasks:\n\nSubmits the login form data to the authentication service.\nIf successful, resets the form and registers for push notifications.\nStores the user data in local storage.\nRedirects the user to the appropriate page based on stored navigation state.\n\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the login process is complete.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formLogin\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    password: new FormControl(null, [Validators.required, Validators.minLength(8)])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        messaging\n                        \n                    \n                \n            \n                \n                    \n                        Default value : inject(Messaging)\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation, inject } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormControl, FormGroup, ReactiveFormsModule, Validators } from '@angular/forms';\nimport { environment } from '../../../environments/environment';\n\n// custom services\nimport { HttpService } from '../../utilities/services/http.service';\nimport { LocalStorageService } from '../../utilities/services/local-storage.service';\n\n// firebase messaging\nimport { Messaging, getToken } from '@angular/fire/messaging';\n\n// primeng\nimport { MessageService } from 'primeng/api';\nimport { PasswordModule } from 'primeng/password';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { DividerModule } from 'primeng/divider';\nimport { ButtonModule } from 'primeng/button';\nimport { ToastModule } from 'primeng/toast';\nimport { AnimateOnScrollModule } from 'primeng/animateonscroll';\n\n@Component({\n  selector: 'app-login',\n  standalone: true,\n  imports: [ReactiveFormsModule, RouterModule, PasswordModule, InputTextModule, DividerModule, ButtonModule, ToastModule, AnimateOnScrollModule],\n  providers: [MessageService],\n  templateUrl: './login.component.html',\n  styleUrl: './login.component.scss',\n  encapsulation: ViewEncapsulation.None\n})\nexport class LoginComponent {\n\n  // login form\n  formLogin = new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    password: new FormControl(null, [Validators.required, Validators.minLength(8)])\n  });\n\n  // firebase notification\n  private messaging = inject(Messaging);\n\n  constructor(\n    private readonly router: Router,\n    private readonly httpService: HttpService,\n    private readonly messageService: MessageService,\n    private readonly localStorageService: LocalStorageService,\n  ) { }\n\n  /**\n   * Handles the login form submission process.\n   * \n   * This asynchronous function performs the following tasks:\n   * 1. Submits the login form data to the authentication service.\n   * 2. If successful, resets the form and registers for push notifications.\n   * 3. Stores the user data in local storage.\n   * 4. Redirects the user to the appropriate page based on stored navigation state.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the login process is complete.\n   * @throws Will throw an error if the login process fails, which is then displayed as a toast message.\n   */\n  async onLoginSubmit(): Promise {\n    try {\n      const data = this.formLogin.value;\n      const result: any = await this.httpService.post('authentication/client-signin', data);\n      if (result.success) {\n        // reset form\n        this.formLogin.reset();\n\n        // get token for notification\n        navigator.serviceWorker\n          .register(\"/assets/firebase-messaging-sw.js\", {\n            type: \"module\",\n          })\n          .then((serviceWorkerRegistration) => {\n            getToken(this.messaging, {\n              vapidKey: environment.vapidKey,\n              serviceWorkerRegistration,\n            }).then((token) => {\n              // This is a good place to then store it on your database for each user\n              this.httpService.patch('authentication/notification-token', { token });\n              this.localStorageService.set('ne', 'true');\n            });\n          });\n\n        // set user data in loca storage\n        this.localStorageService.setObject('user', result.data);\n\n        // check state is pending for page redirection\n        const moveto = this.localStorageService.get('moveto');\n        // if then redirecvt there and clear move to from storage\n        if (moveto) {\n          this.localStorageService.remove('moveto');\n          this.router.navigateByUrl(moveto);\n        } else {\n          // redirect user to home of panel\n          this.router.navigate(['user/home']);\n        }\n      }\n    } catch (error: any) {\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: error });\n    }\n  }\n\n  /**\n   * Clears the login form by resetting all form controls to their initial values.\n   * This function is typically called when the user wants to clear all entered data from the form.\n   *\n   * @returns {void} This function does not return a value.\n   */\n  onClearForm(): void {\n    this.formLogin.reset();\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n                Email\n                \n            \n            \n                Password\n                \n                At least 8 character password needed.\n            \n            \n                Forget Password?\n            \n            \n                \n                \n            \n            \n                \n            \n        \n    \n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        Email                                                        Password                                At least 8 character password needed.                                        Forget Password?                                                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PageNotFoundComponent.html":{"url":"components/PageNotFoundComponent.html","title":"component - PageNotFoundComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PageNotFoundComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/page-not-found/page-not-found.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-page-not-found\n            \n\n            \n                standalone\n                true\n            \n\n\n\n\n\n            \n                templateUrl\n                ./page-not-found.component.html\n            \n\n\n\n            \n                styleUrl\n                ./page-not-found.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                btnGoToBack\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(location: Location)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/page-not-found/page-not-found.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                  \n                                                        \n                                                                    Location\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        btnGoToBack\n                        \n                    \n                \n            \n            \n                \nbtnGoToBack()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/page-not-found/page-not-found.component.ts:21\n                        \n                    \n\n\n            \n                \n                        Navigates back to the previous page in the browser's history.\nThis method is typically used for a \"Go Back\" button functionality.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Location } from '@angular/common';\nimport { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  standalone: true,\n  imports: [],\n  templateUrl: './page-not-found.component.html',\n  styleUrl: './page-not-found.component.scss'\n})\nexport class PageNotFoundComponent {\n\n  constructor(private readonly location: Location) {}\n\n  /**\n   * Navigates back to the previous page in the browser's history.\n   * This method is typically used for a \"Go Back\" button functionality.\n   * \n   * @returns {void} This method does not return a value.\n   */\n  btnGoToBack(): void {\n    this.location.back();\n  }\n}\n\n    \n\n    \n        \n    \n        \n        Go to Back\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Go to Back    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PageNotFoundComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PriceAlertComponent.html":{"url":"components/PriceAlertComponent.html","title":"component - PriceAlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PriceAlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/price-alert/price-alert.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-price-alert\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./price-alert.component.html\n            \n\n\n\n            \n                styleUrl\n                ./price-alert.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrPriceAlert\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getPriceAlerts\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onClickAlert\n                            \n                            \n                                    Async\n                                onRemoveAlert\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, httpService: HttpService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/price-alert/price-alert.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getPriceAlerts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPriceAlerts()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/price-alert/price-alert.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Fetches price alerts for the current user.\nThis asynchronous function makes an HTTP GET request to retrieve price alerts\nassociated with the current user. The retrieved alerts are then stored in the\ncomponent's arrPriceAlert array.\nfetched and stored in the component's state. The function doesn't return any value directly.\nprocessing the response.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the price alerts have been\nfetched and stored in the component's state. The function doesn't return any value directly.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/price-alert/price-alert.component.ts:35\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after data-bound properties of a directive are initialized.\nThis method is part of Angular's component lifecycle. It initializes the component by\nfetching price alerts when the component is created.\nincluding fetching price alerts, is complete. The function doesn't return any value directly.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the initialization process,\nincluding fetching price alerts, is complete. The function doesn't return any value directly.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickAlert\n                        \n                    \n                \n            \n            \n                \nonClickAlert(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/price-alert/price-alert.component.ts:84\n                        \n                    \n\n\n            \n                \n                        Navigates to the detail page of a specific alert when clicked.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier of the alert to be viewed in detail.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                void This function doesn't return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onRemoveAlert\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRemoveAlert(event: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/price-alert/price-alert.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Removes a price alert for a specific vehicle and updates the UI.\nThis asynchronous function handles the removal of a price alert when triggered by a user action.\nIt prevents event propagation, sends a delete request to the server, and updates the UI accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe event object from the user interaction, used to stop event propagation.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier of the price alert to be removed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the alert removal process is complete.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        arrPriceAlert\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/price-alert/price-alert.component.ts:18\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n// custom service\nimport { HttpService } from '../../../utilities/services/http.service';\n\n// primeng\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-price-alert',\n  templateUrl: './price-alert.component.html',\n  styleUrl: './price-alert.component.scss'\n})\nexport class PriceAlertComponent {\n\n  // property to store the price alert data fetched from the API\n  arrPriceAlert: Array = [];\n\n  constructor(\n    private readonly router: Router,\n    private readonly httpService: HttpService,\n    private readonly messageService: MessageService\n  ) { }\n\n  /**\n   * Lifecycle hook that is called after data-bound properties of a directive are initialized.\n   * \n   * This method is part of Angular's component lifecycle. It initializes the component by\n   * fetching price alerts when the component is created.\n   *\n   * @returns {Promise} A promise that resolves when the initialization process,\n   * including fetching price alerts, is complete. The function doesn't return any value directly.\n   */\n  async ngOnInit(): Promise {\n    await this.getPriceAlerts();\n  }\n\n  /**\n   * Fetches price alerts for the current user.\n   * \n   * This asynchronous function makes an HTTP GET request to retrieve price alerts\n   * associated with the current user. The retrieved alerts are then stored in the\n   * component's `arrPriceAlert` array.\n   * \n   * @returns {Promise} A promise that resolves when the price alerts have been\n   * fetched and stored in the component's state. The function doesn't return any value directly.\n   * \n   * @throws {Error} May throw an error if the HTTP request fails or if there's an issue\n   * processing the response.\n   */\n  async getPriceAlerts(): Promise {\n    await this.httpService.get('alert-price/user').then((response: any) => {\n      this.arrPriceAlert = response;\n    });\n  }\n\n  /**\n   * Removes a price alert for a specific vehicle and updates the UI.\n   * \n   * This asynchronous function handles the removal of a price alert when triggered by a user action.\n   * It prevents event propagation, sends a delete request to the server, and updates the UI accordingly.\n   *\n   * @param event - The event object from the user interaction, used to stop event propagation.\n   * @param id - The unique identifier of the price alert to be removed.\n   * @returns A Promise that resolves when the alert removal process is complete.\n   */\n  async onRemoveAlert(event: any, id: string): Promise {\n    event.stopPropagation();\n    await this.httpService.delete(`alert-price/${id}`).then((response: any) => {\n      if(response.success) {\n        this.messageService.add({ severity: 'secondary', summary: 'Success', detail: 'Vehicle Unsubscribed successfully!' });\n        this.getPriceAlerts();\n      }\n    });\n  }\n\n  /**\n   * Navigates to the detail page of a specific alert when clicked.\n   * \n   * @param id - The unique identifier of the alert to be viewed in detail.\n   * @returns void This function doesn't return a value.\n   */\n  onClickAlert(id: string): void {\n    this.router.navigate(['/detail/', id]);\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        Price Alerts\n    \n\n\n\n@defer () {\n@if (arrPriceAlert && arrPriceAlert.length > 0) {\n\n    @for (price of arrPriceAlert; track price) {\n    \n        \n            \n            \n            \n                \n                    {{ price.car[0].name }}\n                \n                \n                    {{ price.car[0].vin_number }}\n                \n                \n                \n                    {{ price.car[0].asking_price | currency:'USD':'symbol':'2.0' }}\n                \n            \n        \n    \n    }\n\n} @else {\n\n    \n        \n    \n    \n        You don't have any saved price alerts yet\n    \n    \n        Found a good deal on AutoTronic, but the price is not quite there? Save it to price alerts and be first to know\n        when the price drops!\n    \n\n}\n} @placeholder(minimum 1000) {\n\n    \n        \n            \n            \n                \n                    \n                \n                \n                    \n                \n                \n                \n                    \n                \n            \n        \n    \n    \n        \n            \n            \n                \n                    \n                \n                \n                    \n                \n                \n                \n                    \n                \n            \n        \n    \n    \n        \n            \n            \n                \n                    \n                \n                \n                    \n                \n                \n                \n                    \n                \n            \n        \n    \n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Price Alerts    @defer () {@if (arrPriceAlert && arrPriceAlert.length > 0) {    @for (price of arrPriceAlert; track price) {                                                                                    {{ price.car[0].name }}                                                    {{ price.car[0].vin_number }}                                                                    {{ price.car[0].asking_price | currency:\\'USD\\':\\'symbol\\':\\'2.0\\' }}                                            }} @else {                            You don\\'t have any saved price alerts yet                Found a good deal on AutoTronic, but the price is not quite there? Save it to price alerts and be first to know        when the price drops!    }} @placeholder(minimum 1000) {}'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PriceAlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileComponent.html":{"url":"components/ProfileComponent.html","title":"component - ProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/profile/profile.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./profile.component.html\n            \n\n\n\n            \n                styleUrl\n                ./profile.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrCity\n                            \n                            \n                                arrState\n                            \n                            \n                                formAddress\n                            \n                            \n                                formPassword\n                            \n                            \n                                formUserInfo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUser\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                    Async\n                                submitAddress\n                            \n                            \n                                    Async\n                                submitChangePassword\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(csvService: CSVService, httpService: HttpService, messageService: MessageService, localStorageService: LocalStorageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/profile/profile.component.ts:58\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        csvService\n                                                  \n                                                        \n                                                                        CSVService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        localStorageService\n                                                  \n                                                        \n                                                                        LocalStorageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/profile/profile.component.ts:97\n                        \n                    \n\n\n            \n                \n                        Retrieves the current user's profile information and populates the user information and address forms.\nThis asynchronous method fetches the user profile data from the server and updates\nthe corresponding form fields with the retrieved information. It populates both\nthe user information form and, if available, the address form.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the user data has been fetched and the forms have been updated.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/profile/profile.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Initializes the component by fetching user data and populating city information.\nThis method is called automatically when the component is initialized.\nIt performs two main tasks:\n\nRetrieves the current user's information.\nLoads and processes city data from a CSV file.\n\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the initialization is complete.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitAddress\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitAddress()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/profile/profile.component.ts:156\n                        \n                    \n\n\n            \n                \n                        Submits and validates the user's address using Google Maps API, then updates the user's address in the system.\nThis method performs the following steps:\n\nRetrieves the address data from the form.\nValidates the address using Google Maps API.\nIf the address is valid, it extracts the latitude and longitude.\nUpdates the user's address in the system with the validated information.\n\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the address submission process is complete.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        submitChangePassword\n                        \n                    \n                \n            \n            \n                \n                        \n                    submitChangePassword()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/profile/profile.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Submits a request to change the user's password.\nThis method retrieves the password data from the form, sends a POST request\nto change the password, and handles the response by displaying appropriate messages.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the password change process is complete.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        arrCity\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/profile/profile.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrState\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'Alberta', value: 'AB' },\n    { label: 'British Columbia', value: 'BC' },\n    { label: 'New Brunswick', value: 'NB' },\n    { label: 'Manitoba', value: 'MB' },\n    { label: 'Newfoundland and Labrador', value: 'NL' },\n    { label: 'Northwest Territories', value: 'NT' },\n    { label: 'Nova Scotia', value: 'NS' },\n    { label: 'Nunavut', value: 'NU' },\n    { label: 'Ontario', value: 'ON' },\n    { label: 'Quebec', value: 'QC' },\n    { label: 'Prince Edward Island', value: 'PE' },\n    { label: 'Saskatchewan', value: 'SK' },\n    { label: 'Yukon', value: 'YT' },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/profile/profile.component.ts:44\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formAddress\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    unit: new FormControl(null, [Validators.required]),\n    street: new FormControl(null, [Validators.required]),\n    city: new FormControl(null, [Validators.required]),\n    state: new FormControl(null, [Validators.required]),\n    country: new FormControl('Canada', [Validators.required]),\n    postal_code: new FormControl(null, [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/profile/profile.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formPassword\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    old_password: new FormControl(null, [Validators.required, Validators.minLength(10)]),\n    new_password: new FormControl(null, [Validators.required, Validators.minLength(10)]),\n    compare_password: new FormControl(null, [Validators.required, Validators.minLength(10)]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/profile/profile.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formUserInfo\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    phone: new FormControl(null, [Validators.required]),\n    username: new FormControl(null, [Validators.required])\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/profile/profile.component.ts:21\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { environment } from '../../../../environments/environment';\n\n// custom service\nimport { HttpService } from '../../../utilities/services/http.service';\nimport { LocalStorageService } from '../../../utilities/services/local-storage.service';\nimport { CSVService } from '../../../utilities/services/csv.service';\n\n// primeng\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrl: './profile.component.scss'\n})\nexport class ProfileComponent implements OnInit {\n\n  // form user information\n  formUserInfo = new FormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n    phone: new FormControl(null, [Validators.required]),\n    username: new FormControl(null, [Validators.required])\n  });\n\n  // form change password\n  formPassword = new FormGroup({\n    old_password: new FormControl(null, [Validators.required, Validators.minLength(10)]),\n    new_password: new FormControl(null, [Validators.required, Validators.minLength(10)]),\n    compare_password: new FormControl(null, [Validators.required, Validators.minLength(10)]),\n  });\n\n  // user address form\n  formAddress = new FormGroup({\n    unit: new FormControl(null, [Validators.required]),\n    street: new FormControl(null, [Validators.required]),\n    city: new FormControl(null, [Validators.required]),\n    state: new FormControl(null, [Validators.required]),\n    country: new FormControl('Canada', [Validators.required]),\n    postal_code: new FormControl(null, [Validators.required])\n  });\n  arrCity: any;\n  arrState = [\n    { label: 'Alberta', value: 'AB' },\n    { label: 'British Columbia', value: 'BC' },\n    { label: 'New Brunswick', value: 'NB' },\n    { label: 'Manitoba', value: 'MB' },\n    { label: 'Newfoundland and Labrador', value: 'NL' },\n    { label: 'Northwest Territories', value: 'NT' },\n    { label: 'Nova Scotia', value: 'NS' },\n    { label: 'Nunavut', value: 'NU' },\n    { label: 'Ontario', value: 'ON' },\n    { label: 'Quebec', value: 'QC' },\n    { label: 'Prince Edward Island', value: 'PE' },\n    { label: 'Saskatchewan', value: 'SK' },\n    { label: 'Yukon', value: 'YT' },\n  ]; // state list for address\n  \n  constructor(\n    private readonly csvService: CSVService,\n    private readonly httpService: HttpService,\n    private readonly messageService: MessageService,\n    private readonly localStorageService: LocalStorageService,\n  ) { }\n\n  /**\n   * Initializes the component by fetching user data and populating city information.\n   * \n   * This method is called automatically when the component is initialized.\n   * It performs two main tasks:\n   * 1. Retrieves the current user's information.\n   * 2. Loads and processes city data from a CSV file.\n   * \n   * @returns {Promise} A promise that resolves when the initialization is complete.\n   */\n  async ngOnInit(): Promise {\n    // get current user\n    await this.getUser();\n  \n    // find city as per postal code from static CSV file\n    const csv: any = await this.httpService.getWithOutsideURLCSV('assets/csv/canadacities.csv');\n    this.arrCity = this.csvService.CSVToJSON(csv).map((cities: any) => { return { city: cities.city_ascii } });\n  }\n\n  /**\n   * Retrieves the current user's profile information and populates the user information and address forms.\n   * \n   * This asynchronous method fetches the user profile data from the server and updates\n   * the corresponding form fields with the retrieved information. It populates both\n   * the user information form and, if available, the address form.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the user data has been fetched and the forms have been updated.\n   * @throws Will throw an error if the HTTP request fails or if there's an issue updating the forms.\n   */\n  async getUser(): Promise {\n    // get user profile\n    const user: any = await this.httpService.get('user/profile');\n  \n    // fill user information form\n    this.formUserInfo.patchValue({\n      email: user.email,\n      phone: user.phone,\n      username: user.username\n    });\n  \n    if(user.address) {\n      // fill address form \n      this.formAddress.patchValue({\n        unit: user.address.unit,\n        street: user.address.street,\n        city: user.address.city,\n        state: user.address.state,\n        country: user.address.country,\n        postal_code: user.address.postal_code\n      });\n    }\n  }\n\n  /**\n   * Submits a request to change the user's password.\n   * \n   * This method retrieves the password data from the form, sends a POST request\n   * to change the password, and handles the response by displaying appropriate messages.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the password change process is complete.\n   * @throws Will display an error message if the password change request fails.\n   */\n  async submitChangePassword(): Promise {\n    const data = this.formPassword.value;\n    await this.httpService.post('user/change-password', data).then((response: any) => {\n      if (response.success) {\n        this.messageService.add({ severity: 'secondary', summary: 'Done', detail: 'Password Changed Successfully' });\n      }\n    }).catch((error: any) => {\n      this.messageService.add({ severity: 'error', summary: 'Fail', detail: error as any });\n    });\n  }\n\n\n  /**\n   * Submits and validates the user's address using Google Maps API, then updates the user's address in the system.\n   * \n   * This method performs the following steps:\n   * 1. Retrieves the address data from the form.\n   * 2. Validates the address using Google Maps API.\n   * 3. If the address is valid, it extracts the latitude and longitude.\n   * 4. Updates the user's address in the system with the validated information.\n   * \n   * @async\n   * @returns {Promise} A promise that resolves when the address submission process is complete.\n   * @throws Will display an error message if the address is invalid or if the update request fails.\n   */\n  async submitAddress(): Promise {\n    // get address from form\n    const data = this.formAddress.value;\n\n    // verify address by google map\n    const url = `https://addressvalidation.googleapis.com/v1:validateAddress?key=${environment.google_key}`;\n    const requestBody = {\n      address: {\n        \"regionCode\": \"CA\",\n        \"addressLines\": [`${data?.unit!} ${data?.street!}`, `${data?.city} ${data?.state} ${data?.postal_code}`]\n      }\n    }\n\n    // call google location api to get location lat lng\n    const response: any = await this.httpService.postWithOutsideURL(url, requestBody);\n\n    // if address is correct then show map with maker\n    let location: any;\n    if (response.result.address) {\n      location = { lat: response.result.geocode.location.latitude, lng: response.result.geocode.location.longitude };\n    } else {\n      this.messageService.add({ severity: 'error', summary: 'Fail', detail: 'Address is not correct, kindly check all fields.' });\n      return\n    }\n\n    const userID = this.localStorageService.getObject('user').identifier;\n    await this.httpService.patch(`user/address/${userID}`, { ...data, lat: location.lat, lng: location.lng }).then((response: any) => {\n      if (response.success) {\n        this.messageService.add({ severity: 'secondary', summary: 'Done', detail: 'Address Submit Successfully' });\n      }\n    }).catch((error: any) => {\n      this.messageService.add({ severity: 'error', summary: 'Fail', detail: error });\n    });\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        Profile\n    \n\n\n\n\n    \n        \n            User Information\n            @if(formUserInfo.valid) {\n            \n            } @else {\n            \n            }\n        \n    \n    \n        \n        \n            Email\n            \n        \n        \n        \n            Username\n            \n        \n        \n        \n            Phone\n            \n        \n    \n\n\n\n\n    \n        \n            Address\n            @if(formAddress.valid) {\n                \n                } @else {\n                \n                }\n        \n    \n    \n    \n        \n        \n            Unit Number\n            \n            \n                \n                    Unit is required\n                \n            \n        \n        \n        \n            Street\n            \n            \n                \n                    Street is required\n                \n            \n        \n        \n        \n            City\n            \n            \n                \n                    City is required\n                \n            \n        \n        \n        \n            State\n            \n            \n                \n                    State is required\n                \n            \n        \n        \n        \n            Country\n            \n        \n        \n        \n            Postal Code\n            \n            \n                \n                    Postal Code is required\n                \n            \n        \n    \n    \n    \n        \n    \n\n\n\n\n    \n        \n            Change Password\n        \n    \n    \n        \n            New Password and Compare Password should be same\n        \n        \n            New Password and Old Password should not be same\n        \n        \n        \n            Old Password\n            \n                \n                    \n                    Suggestions\n                    \n                        At least one lowercase\n                        At least one uppercase\n                        At least one numeric\n                        Minimum 10 characters\n                    \n                \n            \n        \n        \n        \n            New Password\n            \n                \n                    \n                    Suggestions\n                    \n                        At least one lowercase\n                        At least one uppercase\n                        At least one numeric\n                        Minimum 10 characters\n                    \n                \n            \n        \n        \n        \n            Confirm Password\n            \n                \n                    \n                    Suggestions\n                    \n                        At least one lowercase\n                        At least one uppercase\n                        At least one numeric\n                        Minimum 10 characters\n                    \n                \n            \n        \n        \n            \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Profile                            User Information            @if(formUserInfo.valid) {                        } @else {                        }                                            Email                                                Username                                                Phone                                                Address            @if(formAddress.valid) {                                } @else {                                }                                                Unit Number                                                            Unit is required                                                                Street                                                            Street is required                                                                City                                                            City is required                                                                State                                                            State is required                                                                Country                                                Postal Code                                                            Postal Code is required                                                                                    Change Password                                    New Password and Compare Password should be same                            New Password and Old Password should not be same                                    Old Password                                                                    Suggestions                                            At least one lowercase                        At least one uppercase                        At least one numeric                        Minimum 10 characters                                                                                    New Password                                                                    Suggestions                                            At least one lowercase                        At least one uppercase                        At least one numeric                        Minimum 10 characters                                                                                    Confirm Password                                                                    Suggestions                                            At least one lowercase                        At least one uppercase                        At least one numeric                        Minimum 10 characters                                                                                        '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterComponent.html":{"url":"components/RegisterComponent.html","title":"component - RegisterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register/register.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            MessageService\n                \n            \n\n\n            \n                selector\n                app-register\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            ReactiveFormsModule\n                            FormsModule\n                            CommonModule\n                            RouterModule\n                            AnimateOnScrollModule\n                            PasswordModule\n                            InputTextModule\n                            InputMaskModule\n                            DividerModule\n                            SelectButtonModule\n                            ToastModule\n                            ButtonModule\n                            DialogModule\n                            InputOtpModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./register.component.html\n            \n\n\n\n            \n                styleUrl\n                ./register.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                formRegister\n                            \n                            \n                                isOTPSent\n                            \n                            \n                                isOTPValid\n                            \n                            \n                                isRegisterLoading\n                            \n                            \n                                strOTP\n                            \n                            \n                                strOTPError\n                            \n                            \n                                strSignUpTitle\n                            \n                            \n                                UserRoleOptions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onCloseOTPPopUp\n                            \n                            \n                                    Async\n                                onRegisterSubmit\n                            \n                            \n                                    Async\n                                OnSentOTPEmail\n                            \n                            \n                                    Async\n                                OnVerifyOTP\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, httpService: HttpService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register/register.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onCloseOTPPopUp\n                        \n                    \n                \n            \n            \n                \nonCloseOTPPopUp()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Closes the OTP pop-up and resets the OTP-related variables.\nThis function is called when the user closes the OTP pop-up. It resets the OTP value,\nthe OTP sent flag, and the OTP error flag to their initial states.\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \nThis function does not return any value.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onRegisterSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRegisterSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:162\n                        \n                    \n\n\n            \n                \n                        Handles the registration process by sending a POST request to the server.\nThis function is called when the user submits the registration form.\nThe function performs the following steps:\n\nSets the isRegisterLoading flag to true to indicate that the registration process is in progress.\nRetrieves the form data.\nRemoves any hyphens from the phone number.\nSends a POST request to the server with the registration data.\nIf the registration is successful, displays a success message and navigates to the login page.\nIf an error occurs during the registration process, displays an error message and clears the phone number field.\nSets the isRegisterLoading flag to false to indicate that the registration process is complete.\n\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise that resolves when the registration process is complete.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OnSentOTPEmail\n                        \n                    \n                \n            \n            \n                \n                        \n                    OnSentOTPEmail()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Sends an OTP to the user's email for verification.\nThis function is responsible for sending an OTP to the user's email address for account verification.\nIt retrieves the form data, sends a POST request to the server, and updates the UI based on the response.\nThe function performs the following steps:\n\nSets the isRegisterLoading flag to true to indicate that the OTP sending process is in progress.\nRetrieves the form data.\nSends a POST request to the server with the email data.\nIf the OTP sending is successful, updates the isOTPSent flag to true.\nIf an error occurs during the OTP sending process, displays an error message using the messageService.\nSets the isRegisterLoading flag to false to indicate that the OTP sending process is complete.\n\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise that resolves when the OTP sending process is complete.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        OnVerifyOTP\n                        \n                    \n                \n            \n            \n                \n                        \n                    OnVerifyOTP()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register/register.component.ts:113\n                        \n                    \n\n\n            \n                \n                        Handles the verification of the OTP sent to the user's email.\nThis function sends a POST request to the server to verify the OTP.\nIf the OTP is valid, it updates the form controls and changes the sign-up title.\nIf the OTP is invalid, it sets the strOTPError flag to true.\nThis function is called when the user submits the OTP received via email.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                \nA promise that resolves when the OTP verification process is complete.\n\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        formRegister\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new UntypedFormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n  })\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOTPSent\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOTPValid\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRegisterLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:38\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strOTP\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | undefined\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strOTPError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        strSignUpTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Sign Up\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UserRoleOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'Dealer', value: 'dealer' },\n    { label: 'Private Person', value: 'person' }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register/register.component.ts:40\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, ViewEncapsulation } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { FormControl, FormsModule, ReactiveFormsModule, UntypedFormGroup, Validators } from '@angular/forms';\n\n// custom service\nimport { HttpService } from '../../utilities/services/http.service';\n\n// primeng\nimport { MessageService } from 'primeng/api';\nimport { PasswordModule } from 'primeng/password';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { DividerModule } from 'primeng/divider';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { InputOtpModule } from 'primeng/inputotp';\nimport { CommonModule } from '@angular/common';\nimport { ToastModule } from 'primeng/toast';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { AnimateOnScrollModule } from 'primeng/animateonscroll';\n\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [ReactiveFormsModule, FormsModule, CommonModule, RouterModule, AnimateOnScrollModule, PasswordModule, InputTextModule, InputMaskModule, DividerModule, SelectButtonModule, ToastModule, ButtonModule, DialogModule, InputOtpModule],\n  providers: [MessageService],\n  templateUrl: './register.component.html',\n  styleUrl: './register.component.scss',\n  encapsulation: ViewEncapsulation.None\n})\nexport class RegisterComponent {\n\n  strSignUpTitle = \"Sign Up\";\n  isOTPSent = false;\n  strOTP: string | undefined;\n  strOTPError: boolean = false;\n  isOTPValid: boolean = false;\n  isRegisterLoading: boolean = false;\n\n  UserRoleOptions: any[] = [\n    { label: 'Dealer', value: 'dealer' },\n    { label: 'Private Person', value: 'person' }\n  ];\n\n  // login form\n  formRegister = new UntypedFormGroup({\n    email: new FormControl(null, [Validators.required, Validators.email]),\n  });\n\n  constructor(\n    private readonly router: Router,\n    private readonly httpService: HttpService,\n    private readonly messageService: MessageService\n  ) { }\n\n  /**\n * Closes the OTP pop-up and resets the OTP-related variables.\n *\n * This function is called when the user closes the OTP pop-up. It resets the OTP value,\n * the OTP sent flag, and the OTP error flag to their initial states.\n *\n * @returns {void} - This function does not return any value.\n */\n  onCloseOTPPopUp(): void {\n    this.strOTP = undefined;\n    this.isOTPSent = false;\n    this.strOTPError = false;\n  }\n\n  /**\n * Sends an OTP to the user's email for verification.\n *\n * This function is responsible for sending an OTP to the user's email address for account verification.\n * It retrieves the form data, sends a POST request to the server, and updates the UI based on the response.\n *\n * @remarks\n * The function performs the following steps:\n * 1. Sets the `isRegisterLoading` flag to true to indicate that the OTP sending process is in progress.\n * 2. Retrieves the form data.\n * 3. Sends a POST request to the server with the email data.\n * 4. If the OTP sending is successful, updates the `isOTPSent` flag to true.\n * 5. If an error occurs during the OTP sending process, displays an error message using the `messageService`.\n * 6. Sets the `isRegisterLoading` flag to false to indicate that the OTP sending process is complete.\n *\n * @returns {Promise} - A promise that resolves when the OTP sending process is complete.\n */\n  async OnSentOTPEmail(): Promise {\n    try {\n      this.isRegisterLoading = true;\n      const data = this.formRegister.value;\n      const response: any = await this.httpService.post('authentication/client-signup-otp', data);\n      if (response?.success) {\n        this.isOTPSent = true;\n      }\n    } catch (error: any) {\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: error });\n    } finally {\n      this.isRegisterLoading = false;\n    }\n  }\n\n  /**\n * Handles the verification of the OTP sent to the user's email.\n * This function sends a POST request to the server to verify the OTP.\n * If the OTP is valid, it updates the form controls and changes the sign-up title.\n * If the OTP is invalid, it sets the `strOTPError` flag to true.\n *\n * @remarks\n * This function is called when the user submits the OTP received via email.\n *\n * @returns {Promise} - A promise that resolves when the OTP verification process is complete.\n */\n  async OnVerifyOTP(): Promise {\n\n    // check otp is entered\n    if (this.strOTPError) {\n      this.strOTPError = false;\n    }\n\n    // start loading\n    this.isRegisterLoading = true;\n\n    // get data to send email\n    const data = this.formRegister.value;\n    try {\n      // send request to verify\n      const response: any = await this.httpService.post('authentication/verify-client-signup', { email: data.email, otp: this.strOTP?.trim() });\n      // if success\n      if (response?.success) {\n        this.isOTPSent = false;\n        this.isOTPValid = true;\n        this.formRegister.addControl('otp', new FormControl(this.strOTP));\n        this.formRegister.addControl('username', new FormControl(null, [Validators.required]));\n        this.formRegister.addControl('role', new FormControl(null, [Validators.required]));\n        this.formRegister.addControl('password', new FormControl(null, [Validators.required, Validators.minLength(10)]));\n        this.formRegister.addControl('phone', new FormControl(null, [Validators.required]));\n        this.strSignUpTitle = \"Create Account\";\n      }\n    } catch (error: any) {\n      this.strOTPError = true;\n    } finally {\n      this.isRegisterLoading = false;\n    }\n  }\n\n  /**\n * Handles the registration process by sending a POST request to the server.\n * This function is called when the user submits the registration form.\n *\n * @remarks\n * The function performs the following steps:\n * 1. Sets the `isRegisterLoading` flag to true to indicate that the registration process is in progress.\n * 2. Retrieves the form data.\n * 3. Removes any hyphens from the phone number.\n * 4. Sends a POST request to the server with the registration data.\n * 5. If the registration is successful, displays a success message and navigates to the login page.\n * 6. If an error occurs during the registration process, displays an error message and clears the phone number field.\n * 7. Sets the `isRegisterLoading` flag to false to indicate that the registration process is complete.\n *\n * @returns {Promise} - A promise that resolves when the registration process is complete.\n */\n  async onRegisterSubmit(): Promise {\n    this.isRegisterLoading = true;\n    const data = this.formRegister.value;\n    try {\n      data.phone = Number(data.phone.replace(/-/g, \"\"));\n      const result: any = await this.httpService.post('authentication/client-signup', data);\n      if (result?.success) {\n        this.messageService.add({ severity: 'success', summary: 'Success', detail: 'Your account successfully created, kindly login now.' });\n        this.router.navigateByUrl('/login');\n      }\n    } catch (error: any) {\n      this.formRegister.patchValue({\n        phone: null\n      })\n      this.messageService.add({ severity: 'error', summary: 'Error', detail: error });\n    } finally {\n      this.isRegisterLoading = false;\n    }\n  }\n}\n\n    \n\n    \n        \n    \n        \n            \n            \n                Email\n                \n            \n            \n            \n                Password\n                \n                At least 10 character password needed.\n            \n            \n            \n                Username\n                \n            \n            \n            \n                Who are you?\n                \n            \n            \n            \n                Phone\n                \n            \n            \n            \n                \n            \n            \n                \n            \n        \n    \n\n\n\n\n    \n        \n            \n                \n                EuroExotiCar\n            \n            \n                We sent to you verification code at  {{ formRegister.value.email }} , kindly verify\n                code below:\n            \n            \n            \n            \n                Invalid Code\n            \n            \n                 Note: Code only valid till 24 hours\n            \n            \n                \n                \n            \n        \n    \n\n\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                    Email                                                                    Password                                At least 10 character password needed.                                                    Username                                                                    Who are you?                                                                    Phone                                                                                                                                                                                            EuroExotiCar                                        We sent to you verification code at  {{ formRegister.value.email }} , kindly verify                code below:                                                                Invalid Code                                         Note: Code only valid till 24 hours                                                                                '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SEOService.html":{"url":"injectables/SEOService.html","title":"injectable - SEOService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SEOService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/utilities/services/seo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                setCanonicalURL\n                            \n                            \n                                setMetaDescription\n                            \n                            \n                                setOGContent\n                            \n                            \n                                setSEOPage\n                            \n                            \n                                setTitle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(metaService: Meta, titleService: Title)\n                    \n                \n                        \n                            \n                                Defined in src/app/utilities/services/seo.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        metaService\n                                                  \n                                                        \n                                                                    Meta\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        titleService\n                                                  \n                                                        \n                                                                    Title\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        setCanonicalURL\n                        \n                    \n                \n            \n            \n                \nsetCanonicalURL(url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/seo.service.ts:77\n                        \n                    \n\n\n            \n                \n                        Sets or updates the canonical URL for the current page.\nThis function either updates an existing canonical tag or adds a new one if it doesn't exist.\nExample :         especially useful when the same content might be accessed through multiple URLs.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe canonical URL to be set. This should be the preferred version of a page's URL,\nespecially useful when the same content might be accessed through multiple URLs.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                void This function doesn't return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setMetaDescription\n                        \n                    \n                \n            \n            \n                \nsetMetaDescription(content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/seo.service.ts:47\n                        \n                    \n\n\n            \n                \n                        Sets the meta description for the current page.\nThis function updates the HTML meta tag with the name 'description'.\nExample :             This should be a concise summary of the page's content.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe description text to be set as the content of the meta description tag.\nThis should be a concise summary of the page's content.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                void This function doesn't return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setOGContent\n                        \n                    \n                \n            \n            \n                \nsetOGContent(title: string, content: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/seo.service.ts:99\n                        \n                    \n\n\n            \n                \n                        Sets Open Graph (OG) metadata for the current page.\nThis function updates or adds OG tags for title, description, type, and site name.\nExample :           This should be a concise, descriptive title for the page content.\n             This should be a brief summary of the page's content.\n         This typically represents the base URL of the website.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe title of the page to be set in the og:title tag.\nThis should be a concise, descriptive title for the page content.\n\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe description of the page to be set in the og:description tag.\nThis should be a brief summary of the page's content.\n\n\n                                            \n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe URL to be set in the og:site_name tag.\nThis typically represents the base URL of the website.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                void This function doesn't return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setSEOPage\n                        \n                    \n                \n            \n            \n                \nsetSEOPage(title: string, content: string, url: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/seo.service.ts:24\n                        \n                    \n\n\n            \n                \n                        Sets up SEO-related metadata for a page.\nThis includes setting the page title, meta description, canonical URL, and Open Graph tags.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe title of the page to be set in the  tag and og:title.\n\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe description of the page to be set in the meta description and og:description.\n\n\n                                            \n                                        \n                                        \n                                                url\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe URL of the page to be set in og:site_name.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                void This function doesn't return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        setTitle\n                        \n                    \n                \n            \n            \n                \nsetTitle(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/utilities/services/seo.service.ts:64\n                        \n                    \n\n\n            \n                \n                        Sets the title of the current page.\nThis function updates the HTML  tag with the provided title.\nExample :           This should be a concise, descriptive title for the page content.\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe title to be set for the current page.\nThis should be a concise, descriptive title for the page content.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                void This function doesn't return a value.\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Meta, Title } from '@angular/platform-browser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SEOService {\n\n  constructor(\n    private metaService: Meta,\n    private titleService: Title\n  ) { }\n\n  /**\n   * Sets up SEO-related metadata for a page.\n   * This includes setting the page title, meta description, canonical URL, and Open Graph tags.\n   * \n   * @param title - The title of the page to be set in the  tag and og:title.\n   * @param content - The description of the page to be set in the meta description and og:description.\n   * @param url - The URL of the page to be set in og:site_name.\n   * \n   * @returns void This function doesn't return a value.\n   */\n  setSEOPage(title: string, content: string, url: string) {\n    // set page title\n    this.setTitle(title);\n\n    // add page description in meta\n    this.setMetaDescription(content);\n\n    //canonical url\n    this.setCanonicalURL(window.location.href);\n\n    // add og tag in metaService\n    this.setOGContent(title, content, url);\n  }\n\n  /**\n   * Sets the meta description for the current page.\n   * This function updates the HTML meta tag with the name 'description'.\n   * \n   * @param content - The description text to be set as the content of the meta description tag.\n   *                  This should be a concise summary of the page's content.\n   * \n   * @returns void This function doesn't return a value.\n   */\n  setMetaDescription(content: string) {\n    this.metaService.updateTag(\n      {\n        name: 'description',\n        content\n      });\n  }\n\n  /**\n   * Sets the title of the current page.\n   * This function updates the HTML  tag with the provided title.\n   *\n   * @param title - The title to be set for the current page.\n   *                This should be a concise, descriptive title for the page content.\n   *\n   * @returns void This function doesn't return a value.\n   */\n  setTitle(title: string) {\n    this.titleService.setTitle(title);\n  }\n\n  /**\n   * Sets or updates the canonical URL for the current page.\n   * This function either updates an existing canonical tag or adds a new one if it doesn't exist.\n   * \n   * @param url - The canonical URL to be set. This should be the preferred version of a page's URL,\n   *              especially useful when the same content might be accessed through multiple URLs.\n   * \n   * @returns void This function doesn't return a value.\n   */\n  setCanonicalURL(url: string) {\n    const canonicalTag = this.metaService.getTag('rel=\"canonical\"');\n    if (canonicalTag) {\n      this.metaService.updateTag({ rel: 'canonical', href: url });\n    } else {\n      this.metaService.addTag({ rel: 'canonical', href: url });\n    }\n  }\n\n  /**\n   * Sets Open Graph (OG) metadata for the current page.\n   * This function updates or adds OG tags for title, description, type, and site name.\n   *\n   * @param title - The title of the page to be set in the og:title tag.\n   *                This should be a concise, descriptive title for the page content.\n   * @param content - The description of the page to be set in the og:description tag.\n   *                  This should be a brief summary of the page's content.\n   * @param url - The URL to be set in the og:site_name tag.\n   *              This typically represents the base URL of the website.\n   *\n   * @returns void This function doesn't return a value.\n   */\n  setOGContent(title: string, content: string, url: string) {\n    this.metaService.updateTag({ name: 'og:title', content: title });\n    this.metaService.updateTag({ name: 'og:description', content });\n    this.metaService.updateTag({ name: 'og:type', content: 'product' });\n    this.metaService.updateTag({ name: 'og:site_name', content: url });\n  }\n}\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n\n               "},"components/SearchAlertComponent.html":{"url":"components/SearchAlertComponent.html","title":"component - SearchAlertComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SearchAlertComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/modules/user/search-alert/search-alert.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-search-alert\n            \n\n\n\n\n\n\n            \n                templateUrl\n                ./search-alert.component.html\n            \n\n\n\n            \n                styleUrl\n                ./search-alert.component.scss\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                arrAlertSubscribe\n                            \n                            \n                                arrFilters\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                findSearchLabelByValue\n                            \n                            \n                                    Async\n                                getAlertSubscribe\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                            \n                                onClickAlertSubscribe\n                            \n                            \n                                    Async\n                                onRemoveAlertSubscribe\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, httpService: HttpService, messageService: MessageService)\n                    \n                \n                        \n                            \n                                Defined in src/app/modules/user/search-alert/search-alert.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        httpService\n                                                  \n                                                        \n                                                                        HttpService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        messageService\n                                                  \n                                                        \n                                                                    MessageService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        findSearchLabelByValue\n                        \n                    \n                \n            \n            \n                \nfindSearchLabelByValue(filter: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/search-alert/search-alert.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Finds and formats the search label and value for a given filter.\nThis function processes a filter object to determine its corresponding label and value.\nIt handles special cases for 'Distance' filters and processes 'checkbox' and 'textbox-list' type filters differently.\n\nlabel: The display label for the filter.\nvalue: The formatted value of the filter. For 'Distance', it's either 'National' or a distance in km.\n   For other types, it's a string representation of the selected option(s).\n\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                filter\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe filter object to process. It should contain at least a 'name' property and a 'value' property.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     literal type\n\n                        \n                            \n                                An object containing:\n\nlabel: The display label for the filter.\nvalue: The formatted value of the filter. For 'Distance', it's either 'National' or a distance in km.\nFor other types, it's a string representation of the selected option(s).\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        getAlertSubscribe\n                        \n                    \n                \n            \n            \n                \n                        \n                    getAlertSubscribe()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/search-alert/search-alert.component.ts:51\n                        \n                    \n\n\n            \n                \n                        Fetches alert subscriptions for the current user from the server.\nThis asynchronous method sends a GET request to the 'alert-subscribe/user' endpoint\nusing the httpService. Upon successful response, it updates the arrAlertSubscribe\nproperty with the received data.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the alert subscriptions have been fetched and stored.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/search-alert/search-alert.component.ts:34\n                        \n                    \n\n\n            \n                \n                        Initializes the component by fetching filters and alert subscriptions.\nThis method is called automatically by Angular when the component is initialized.\n\n\n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A Promise that resolves when the initialization is complete.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onClickAlertSubscribe\n                        \n                    \n                \n            \n            \n                \nonClickAlertSubscribe(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/search-alert/search-alert.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Navigates to the detail page for a specific alert subscription.\nThis method is triggered when a user clicks on an alert subscription item.\nIt uses the Angular Router to navigate to the detail page, passing the\nsubscription's ID as a route parameter.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier of the alert subscription to view.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                This method does not return a value.\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        onRemoveAlertSubscribe\n                        \n                    \n                \n            \n            \n                \n                        \n                    onRemoveAlertSubscribe(event: any, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/modules/user/search-alert/search-alert.component.ts:81\n                        \n                    \n\n\n            \n                \n                        Removes an alert subscription for a specific vehicle.\nThis asynchronous method is triggered when a user attempts to unsubscribe from a vehicle alert.\nIt prevents the default event behavior, sends a delete request to the server, and updates the UI accordingly.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe DOM event object triggered by the user action.\n\n\n                                            \n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nThe unique identifier of the alert subscription to be removed.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                A promise that resolves when the unsubscribe process is complete.\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        arrAlertSubscribe\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Array\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/search-alert/search-alert.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        arrFilters\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                    \n                        \n                                Defined in src/app/modules/user/search-alert/search-alert.component.ts:20\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\n// custom service\nimport { HttpService } from '../../../utilities/services/http.service';\n\n// primeng\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-search-alert',\n  templateUrl: './search-alert.component.html',\n  styleUrl: './search-alert.component.scss'\n})\nexport class SearchAlertComponent {\n\n  // property to store the alert subscription data fetched from the API\n  arrAlertSubscribe: Array = [];\n  // property to store the filters fetched from the API\n  arrFilters: any;\n\n  constructor(\n    private readonly router: Router,\n    private readonly httpService: HttpService,\n    private readonly messageService: MessageService\n  ) { }\n\n  /**\n   * Initializes the component by fetching filters and alert subscriptions.\n   * This method is called automatically by Angular when the component is initialized.\n   * \n   * @returns A Promise that resolves when the initialization is complete.\n   */\n  async ngOnInit(): Promise {\n      // Fetch filters from the API and store them in arrFilters\n      this.arrFilters = (await this.httpService.get('filter') as any).data;\n  \n      // Fetch alert subscriptions for the user\n      await this.getAlertSubscribe();\n  }\n\n  /**\n   * Fetches alert subscriptions for the current user from the server.\n   * \n   * This asynchronous method sends a GET request to the 'alert-subscribe/user' endpoint\n   * using the httpService. Upon successful response, it updates the arrAlertSubscribe\n   * property with the received data.\n   * \n   * @returns {Promise} A promise that resolves when the alert subscriptions have been fetched and stored.\n   */\n  async getAlertSubscribe(): Promise {\n    await this.httpService.get('alert-subscribe/user').then((response: any) => {\n      this.arrAlertSubscribe = response;\n    });\n  }\n\n  /**\n   * Navigates to the detail page for a specific alert subscription.\n   * \n   * This method is triggered when a user clicks on an alert subscription item.\n   * It uses the Angular Router to navigate to the detail page, passing the\n   * subscription's ID as a route parameter.\n   *\n   * @param {string} id - The unique identifier of the alert subscription to view.\n   * @returns {void} This method does not return a value.\n   */\n  onClickAlertSubscribe(id: string): void {\n    this.router.navigate(['/detail/', id]);\n  }\n\n  /**\n   * Removes an alert subscription for a specific vehicle.\n   * \n   * This asynchronous method is triggered when a user attempts to unsubscribe from a vehicle alert.\n   * It prevents the default event behavior, sends a delete request to the server, and updates the UI accordingly.\n   *\n   * @param {any} event - The DOM event object triggered by the user action.\n   * @param {string} id - The unique identifier of the alert subscription to be removed.\n   * @returns {Promise} A promise that resolves when the unsubscribe process is complete.\n   */\n  async onRemoveAlertSubscribe(event: any, id: string): Promise {\n    event.stopPropagation();\n    event.preventDefault();\n    await this.httpService.delete(`alert-subscribe/${id}`)\n      .then((response: any) => {\n        if (response.success) {\n          this.messageService.add({ severity: 'secondary', summary: 'Success', detail: 'Vehicle Unsubscribed successfully!' });\n          this.getAlertSubscribe();\n        }\n      });\n  }\n\n  /**\n   * Finds and formats the search label and value for a given filter.\n   * \n   * This function processes a filter object to determine its corresponding label and value.\n   * It handles special cases for 'Distance' filters and processes 'checkbox' and 'textbox-list' type filters differently.\n   * \n   * @param {any} filter - The filter object to process. It should contain at least a 'name' property and a 'value' property.\n   * @returns {{ label: string, value: string }} An object containing:\n   *   - label: The display label for the filter.\n   *   - value: The formatted value of the filter. For 'Distance', it's either 'National' or a distance in km.\n   *            For other types, it's a string representation of the selected option(s).\n   */\n  findSearchLabelByValue(filter: any): { label: string; value: string; } {\n    if (filter.name === 'Distance') {\n      return { label: 'Distance', value: filter.value === 'national' ? 'National' : `${filter.value} km` };\n    }\n    const findFilter = this.arrFilters.find((flr: any) => flr.name.value === filter.name);\n    let value = '';\n    if (findFilter && findFilter.type === 'checkbox') {\n      findFilter.data.forEach((data: any) => {\n        if (filter.value.includes(data.value)) {\n          value += value ? `, ${data.label}` : `${data.label}`;\n        }\n      })\n    }\n    if(findFilter && findFilter.type === 'textbox-list') {\n      findFilter.data.forEach((data: any) => {\n        if (filter.value === data.value) {\n          value = data.label ;\n        }\n      });\n    }\n    return { label: findFilter.name.label, value };\n  }\n\n}\n\n    \n\n    \n        \n\n    \n        Saved Vehicles\n    \n\n\n\n@defer () {\n@if (arrAlertSubscribe && arrAlertSubscribe.length > 0) {\n\n    @for (subscribe of arrAlertSubscribe; track subscribe) {\n    \n        \n            \n                \n                    \n                        {{ subscribe.name }}\n                    \n                    \n                \n                \n                \n                    @for (filter of subscribe.filter; track filter) {\n                    \n                        {{ findSearchLabelByValue(filter).label }}:\n                        \n                            {{ findSearchLabelByValue(filter).value }}\n                        \n                    \n                    }\n                \n            \n        \n    \n    }\n\n} @else {\n\n    \n        \n    \n    \n        You don’t have any saved searches yet\n    \n    \n        Looking for a specific vehicle but still haven’t find the perfect deal? Save your search and quickly jump back\n        to it whenever you want!\n    \n\n}\n} @placeholder(minimum 1000) {\n\n    \n        \n            \n                \n                    \n                        \n                    \n                    \n                \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                        \n                    \n                    \n                \n                \n                \n                    \n                        \n                        \n                            \n                        \n                    \n                \n            \n        \n    \n\n}\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Saved Vehicles    @defer () {@if (arrAlertSubscribe && arrAlertSubscribe.length > 0) {    @for (subscribe of arrAlertSubscribe; track subscribe) {                                                                                    {{ subscribe.name }}                                                                                                            @for (filter of subscribe.filter; track filter) {                                            {{ findSearchLabelByValue(filter).label }}:                                                    {{ findSearchLabelByValue(filter).value }}                                                                }                                            }} @else {                            You don’t have any saved searches yet                Looking for a specific vehicle but still haven’t find the perfect deal? Save your search and quickly jump back        to it whenever you want!    }} @placeholder(minimum 1000) {                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                }'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CarListComponent', 'selector': 'app-car-list'},{'name': 'CarManageComponent', 'selector': 'app-car-manage'},{'name': 'DealerDetailComponent', 'selector': 'app-dealer-detail'},{'name': 'FavouriteVehicleComponent', 'selector': 'app-favourite-vehicle'},{'name': 'FinanceApplicationComponent', 'selector': 'app-finance-application'},{'name': 'ForgetPasswordComponent', 'selector': 'app-forget-password'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'IndexComponent', 'selector': 'app-index'},{'name': 'InquiryComponent', 'selector': 'app-inquiry'},{'name': 'LoaderComponent', 'selector': 'app-loader'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'PageNotFoundComponent', 'selector': 'app-page-not-found'},{'name': 'PrequalifyLoanComponent', 'selector': 'app-prequalify-loan'},{'name': 'PriceAlertComponent', 'selector': 'app-price-alert'},{'name': 'ProfileComponent', 'selector': 'app-profile'},{'name': 'RegisterComponent', 'selector': 'app-register'},{'name': 'SearchAlertComponent', 'selector': 'app-search-alert'},{'name': 'SearchComponent', 'selector': 'app-search'},{'name': 'StoreComponent', 'selector': 'app-store'},{'name': 'UserComponent', 'selector': 'app-user'},{'name': 'VehicleDetailComponent', 'selector': 'app-vehicle-detail'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SearchAlertComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_imports\n\n\n\ncluster_UserModule_declarations\n\n\n\n\nCarListComponent\n\nCarListComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCarListComponent->UserModule\n\n\n\n\n\nCarManageComponent\n\nCarManageComponent\n\nUserModule -->\n\nCarManageComponent->UserModule\n\n\n\n\n\nFavouriteVehicleComponent\n\nFavouriteVehicleComponent\n\nUserModule -->\n\nFavouriteVehicleComponent->UserModule\n\n\n\n\n\nFinanceApplicationComponent\n\nFinanceApplicationComponent\n\nUserModule -->\n\nFinanceApplicationComponent->UserModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nUserModule -->\n\nHomeComponent->UserModule\n\n\n\n\n\nInquiryComponent\n\nInquiryComponent\n\nUserModule -->\n\nInquiryComponent->UserModule\n\n\n\n\n\nPriceAlertComponent\n\nPriceAlertComponent\n\nUserModule -->\n\nPriceAlertComponent->UserModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nUserModule -->\n\nProfileComponent->UserModule\n\n\n\n\n\nSearchAlertComponent\n\nSearchAlertComponent\n\nUserModule -->\n\nSearchAlertComponent->UserModule\n\n\n\n\n\nStoreComponent\n\nStoreComponent\n\nUserModule -->\n\nStoreComponent->UserModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nGoogleMap\n\nGoogleMap\n\nUserModule -->\n\nGoogleMap->UserModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nUserModule -->\n\nLoaderComponent->UserModule\n\n\n\n\n\nMapMarker\n\nMapMarker\n\nUserModule -->\n\nMapMarker->UserModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nUserModule -->\n\nUserRoutingModule->UserModule\n\n\n\n\n\ncdkDragDrop\n\ncdkDragDrop\n\nUserModule -->\n\ncdkDragDrop->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CarListComponent\n                        \n                        \n                            CarManageComponent\n                        \n                        \n                            FavouriteVehicleComponent\n                        \n                        \n                            FinanceApplicationComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            InquiryComponent\n                        \n                        \n                            PriceAlertComponent\n                        \n                        \n                            ProfileComponent\n                        \n                        \n                            SearchAlertComponent\n                        \n                        \n                            StoreComponent\n                        \n                        \n                            UserComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            GoogleMap\n                        \n                        \n                            LoaderComponent\n                        \n                        \n                            MapMarker\n                        \n                        \n                            UserRoutingModule\n                        \n                        \n                            cdkDragDrop\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\n\n// custom components\nimport { UserComponent } from './user.component';\nimport { LoaderComponent } from '../loader/loader.component';\nimport { CarListComponent } from './car-list/car-list.component';\nimport { CarManageComponent } from './car-manage/car-manage.component';\nimport { HomeComponent } from './home/home.component';\nimport { StoreComponent } from './store/store.component';\nimport { InquiryComponent } from './inquiry/inquiry.component';\nimport { PriceAlertComponent } from './price-alert/price-alert.component';\nimport { SearchAlertComponent } from './search-alert/search-alert.component';\nimport { FavouriteVehicleComponent } from './favourite-vehicle/favourite-vehicle.component';\n\n// cdk drag and drop\nimport { DragDropModule as cdkDragDrop } from '@angular/cdk/drag-drop'; \n\n// interceptor to handle error\nimport { errorInterceptor } from '../../utilities/interceptor/error.interceptor';\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\n\n// google map\nimport { GoogleMap, MapMarker } from '@angular/google-maps';\n\n// primeng\nimport { SidebarModule } from 'primeng/sidebar';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ButtonModule } from 'primeng/button';\nimport { DialogModule } from 'primeng/dialog';\nimport { InputTextModule } from 'primeng/inputtext';\nimport { DropdownModule } from 'primeng/dropdown';\nimport { MenuModule } from 'primeng/menu';\nimport { ConfirmDialogModule } from 'primeng/confirmdialog';\nimport { GalleriaModule } from 'primeng/galleria';\nimport { TableModule } from 'primeng/table';\nimport { MultiSelectModule } from 'primeng/multiselect';\nimport { ConfirmationService, MessageService } from 'primeng/api';\nimport { PanelModule } from 'primeng/panel';\nimport { CalendarModule } from 'primeng/calendar';\nimport { KeyFilterModule } from 'primeng/keyfilter';\nimport { InputGroupModule } from 'primeng/inputgroup';\nimport { InputGroupAddonModule } from 'primeng/inputgroupaddon';\nimport { SelectButtonModule } from 'primeng/selectbutton';\nimport { CheckboxModule } from 'primeng/checkbox';\nimport { AutoCompleteModule } from 'primeng/autocomplete';\nimport { InputTextareaModule } from 'primeng/inputtextarea';\nimport { SkeletonModule } from 'primeng/skeleton';\nimport { ProfileComponent } from './profile/profile.component';\nimport { InputMaskModule } from 'primeng/inputmask';\nimport { PasswordModule } from 'primeng/password';\nimport { DividerModule } from 'primeng/divider';\nimport { FieldsetModule } from 'primeng/fieldset';\nimport { ToastModule } from 'primeng/toast';\nimport { InputSwitchModule } from 'primeng/inputswitch';\nimport { InputNumberModule } from 'primeng/inputnumber';\nimport { AvatarModule } from 'primeng/avatar';\nimport { TabViewModule } from 'primeng/tabview';\nimport { BadgeModule } from 'primeng/badge';\nimport { StyleClassModule } from 'primeng/styleclass';\nimport { PaginatorModule } from 'primeng/paginator';\nimport { TimelineModule } from 'primeng/timeline';\nimport { ScrollerModule } from 'primeng/scroller';\nimport { PanelMenuModule } from 'primeng/panelmenu';\nimport { AnimateOnScrollModule } from 'primeng/animateonscroll';\nimport { FloatLabelModule } from 'primeng/floatlabel';\n    \n// crop images\nimport { ImageCropperComponent } from 'ngx-image-cropper';\nimport { FinanceApplicationComponent } from './finance-application/finance-application.component';\n\n@NgModule({\n  declarations: [\n    UserComponent,\n    HomeComponent,\n    CarListComponent,\n    CarManageComponent,\n    ProfileComponent,\n    StoreComponent,\n    InquiryComponent,\n    PriceAlertComponent,\n    SearchAlertComponent,\n    FavouriteVehicleComponent,\n    FinanceApplicationComponent\n  ],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    SidebarModule,\n    ButtonModule,\n    DialogModule,\n    InputTextModule,\n    DropdownModule,\n    MenuModule,\n    ConfirmDialogModule,\n    GalleriaModule,\n    TableModule,\n    MultiSelectModule,\n    LoaderComponent,\n    PanelModule,\n    CalendarModule,\n    KeyFilterModule,\n    InputGroupModule,\n    InputGroupAddonModule,\n    SelectButtonModule,\n    CheckboxModule,\n    AutoCompleteModule,\n    FieldsetModule,\n    InputTextareaModule,\n    SkeletonModule,\n    InputMaskModule,\n    PasswordModule,\n    DividerModule,\n    ToastModule,\n    GoogleMap,\n    MapMarker,\n    cdkDragDrop,\n    InputSwitchModule,\n    ImageCropperComponent,\n    InputNumberModule,\n    AvatarModule,\n    TabViewModule,\n    BadgeModule,\n    PaginatorModule,\n    StyleClassModule,\n    TimelineModule,\n    ScrollerModule,\n    PanelMenuModule,\n    AnimateOnScrollModule,\n    FloatLabelModule\n  ],\n  providers: [\n    // http\n    provideHttpClient(withInterceptors([errorInterceptor])),\n    MessageService,\n    ConfirmationService\n  ]\n})\nexport class UserModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserRoutingModule.html":{"url":"modules/UserRoutingModule.html","title":"module - UserRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    UserRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/modules/user/user-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\n// dealer or person guard\nimport { dealerTypeGuard } from '../../utilities/guard/dealer-type.guard';\n\n// custom component\nimport { UserComponent } from './user.component';\nimport { HomeComponent } from './home/home.component';\nimport { CarListComponent } from './car-list/car-list.component';\nimport { CarManageComponent } from './car-manage/car-manage.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { StoreComponent } from './store/store.component';\nimport { InquiryComponent } from './inquiry/inquiry.component';\nimport { PriceAlertComponent } from './price-alert/price-alert.component';\nimport { SearchAlertComponent } from './search-alert/search-alert.component';\nimport { FavouriteVehicleComponent } from './favourite-vehicle/favourite-vehicle.component';\nimport { FinanceApplicationComponent } from './finance-application/finance-application.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: UserComponent,\n    children: [\n      {\n        path: 'home',\n        component: HomeComponent\n      },\n      {\n        path: 'car-list',\n        component: CarListComponent\n      },\n      {\n        path: 'car-manage',\n        component: CarManageComponent\n      },\n      {\n        path: 'profile',\n        component: ProfileComponent\n      },\n      {\n        path: 'store',\n        canActivate: [dealerTypeGuard],\n        component: StoreComponent\n      },\n      {\n        path: 'inquiry',\n        component: InquiryComponent\n      },\n      {\n        path: 'price-alert',\n        component: PriceAlertComponent\n      },\n      {\n        path: 'search-alert',\n        component: SearchAlertComponent\n      },\n      {\n        path: 'favourite-vehicle',\n        component: FavouriteVehicleComponent\n      },\n      {\n        path: 'finance-application',\n        component: FinanceApplicationComponent\n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.server.ts\n            \n            variable\n            serverConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/dealer-detail/dealer-detail.component.ts\n            \n            component\n            DealerDetailComponent\n            \n                31 %\n                (7/22)\n            \n        \n        \n            \n                \n                src/app/components/forget-password/forget-password.component.ts\n            \n            component\n            ForgetPasswordComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                33 %\n                (4/12)\n            \n        \n        \n            \n                \n                src/app/components/index/index.component.ts\n            \n            component\n            IndexComponent\n            \n                35 %\n                (5/14)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                src/app/components/page-not-found/page-not-found.component.ts\n            \n            component\n            PageNotFoundComponent\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/components/prequalify-loan/prequalify-loan.component.ts\n            \n            component\n            PrequalifyLoanComponent\n            \n                30 %\n                (13/43)\n            \n        \n        \n            \n                \n                src/app/components/register/register.component.ts\n            \n            component\n            RegisterComponent\n            \n                28 %\n                (4/14)\n            \n        \n        \n            \n                \n                src/app/components/search/search.component.ts\n            \n            component\n            SearchComponent\n            \n                53 %\n                (30/56)\n            \n        \n        \n            \n                \n                src/app/components/search/search.component.ts\n            \n            interface\n            FilterFormData\n            \n                0 %\n                (0/18)\n            \n        \n        \n            \n                \n                src/app/components/vehicle-detail/vehicle-detail.component.ts\n            \n            component\n            VehicleDetailComponent\n            \n                41 %\n                (16/39)\n            \n        \n        \n            \n                \n                src/app/modules/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/user/car-list/car-list.component.ts\n            \n            component\n            CarListComponent\n            \n                42 %\n                (11/26)\n            \n        \n        \n            \n                \n                src/app/modules/user/car-list/car-list.component.ts\n            \n            interface\n            Column\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/user/car-manage/car-manage.component.ts\n            \n            component\n            CarManageComponent\n            \n                50 %\n                (24/48)\n            \n        \n        \n            \n                \n                src/app/modules/user/car-manage/car.interface.ts\n            \n            interface\n            CarForm\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/modules/user/car-manage/car.interface.ts\n            \n            interface\n            CommonElement\n            \n                0 %\n                (0/31)\n            \n        \n        \n            \n                \n                src/app/modules/user/car-manage/car.interface.ts\n            \n            interface\n            LabelValueData\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                        src/app/modules/user/car-manage/car.interface.ts\n            \n            type alias\n            element\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/modules/user/car-manage/car.interface.ts\n            \n            type alias\n            textBoxtype\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/favourite-vehicle/favourite-vehicle.component.ts\n            \n            component\n            FavouriteVehicleComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/modules/user/finance-application/finance-application.component.ts\n            \n            component\n            FinanceApplicationComponent\n            \n                44 %\n                (11/25)\n            \n        \n        \n            \n                \n                        src/app/modules/user/finance-application/finance.data.ts\n            \n            variable\n            DATA_DRIVING_CLASS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/modules/user/finance-application/finance.data.ts\n            \n            variable\n            DATA_MARITAL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/modules/user/finance-application/finance.data.ts\n            \n            variable\n            DATA_RELATIONSHIP\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/modules/user/finance-application/finance.data.ts\n            \n            variable\n            DATA_RESIDENCE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/modules/user/finance-application/finance.data.ts\n            \n            variable\n            DATA_RESIDENCY_STATUS\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/modules/user/finance-application/finance.data.ts\n            \n            variable\n            DATA_SELF_EMPLOYED\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/modules/user/finance-application/finance.data.ts\n            \n            variable\n            DATA_SUBJECT\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/modules/user/finance-application/finance.data.ts\n            \n            variable\n            DATA_WORK_TYPE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/modules/user/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/modules/user/inquiry/inquiry.component.ts\n            \n            component\n            InquiryComponent\n            \n                52 %\n                (12/23)\n            \n        \n        \n            \n                \n                src/app/modules/user/price-alert/price-alert.component.ts\n            \n            component\n            PriceAlertComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                src/app/modules/user/profile/profile.component.ts\n            \n            component\n            ProfileComponent\n            \n                36 %\n                (4/11)\n            \n        \n        \n            \n                \n                src/app/modules/user/search-alert/search-alert.component.ts\n            \n            component\n            SearchAlertComponent\n            \n                55 %\n                (5/9)\n            \n        \n        \n            \n                \n                src/app/modules/user/store/store.component.ts\n            \n            component\n            StoreComponent\n            \n                38 %\n                (23/59)\n            \n        \n        \n            \n                \n                src/app/modules/user/store/store.component.ts\n            \n            interface\n            Column\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/modules/user/user.component.ts\n            \n            component\n            UserComponent\n            \n                34 %\n                (9/26)\n            \n        \n        \n            \n                \n                        src/app/utilities/guard/auth.guard.ts\n            \n            variable\n            AuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utilities/guard/dealer-type.guard.ts\n            \n            variable\n            dealerTypeGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/app/utilities/interceptor/error.interceptor.ts\n            \n            variable\n            errorInterceptor\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utilities/services/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                50 %\n                (2/4)\n            \n        \n        \n            \n                \n                src/app/utilities/services/common.service.ts\n            \n            injectable\n            CommonService\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/utilities/services/csv.service.ts\n            \n            injectable\n            CSVService\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/utilities/services/event.service.ts\n            \n            injectable\n            EventService\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/app/utilities/services/event.service.ts\n            \n            interface\n            INotification\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/utilities/services/http.service.ts\n            \n            injectable\n            HttpService\n            \n                78 %\n                (11/14)\n            \n        \n        \n            \n                \n                src/app/utilities/services/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                40 %\n                (2/5)\n            \n        \n        \n            \n                \n                src/app/utilities/services/local-storage.service.ts\n            \n            injectable\n            LocalStorageService\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                        src/app/utilities/services/local-storage.service.ts\n            \n            variable\n            BROWSER_STORAGE\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/utilities/services/seo.service.ts\n            \n            injectable\n            SEOService\n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                        src/environments/environment.development.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/environments/environment.ts\n            \n            variable\n            environment\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                        src/main.server.ts\n            \n            variable\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.12\n        \n            @angular/cdk : ^18.2.13\n        \n            @angular/common : ^18.2.12\n        \n            @angular/compiler : ^18.2.12\n        \n            @angular/core : ^18.2.12\n        \n            @angular/fire : ^18.0.1\n        \n            @angular/forms : ^18.2.12\n        \n            @angular/google-maps : ^18.2.13\n        \n            @angular/platform-browser : ^18.2.12\n        \n            @angular/platform-browser-dynamic : ^18.2.12\n        \n            @angular/platform-server : ^18.2.12\n        \n            @angular/router : ^18.2.12\n        \n            @angular/ssr : ^18.2.12\n        \n            dayjs : ^1.11.12\n        \n            express : ^4.18.2\n        \n            geolib : ^3.3.4\n        \n            highcharts : ^11.4.8\n        \n            ngx-image-cropper : ^8.0.0\n        \n            primeflex : ^3.3.1\n        \n            primeicons : ^7.0.0\n        \n            primeng : ^17.18.8\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ^0.14.8\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAutoTronic\nThis project was generated with Angular CLI version 17.3.7.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UserModule\n\n\n\ncluster_UserModule_declarations\n\n\n\ncluster_UserModule_imports\n\n\n\n\nCarListComponent\n\nCarListComponent\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nCarListComponent->UserModule\n\n\n\n\n\nCarManageComponent\n\nCarManageComponent\n\nUserModule -->\n\nCarManageComponent->UserModule\n\n\n\n\n\nFavouriteVehicleComponent\n\nFavouriteVehicleComponent\n\nUserModule -->\n\nFavouriteVehicleComponent->UserModule\n\n\n\n\n\nFinanceApplicationComponent\n\nFinanceApplicationComponent\n\nUserModule -->\n\nFinanceApplicationComponent->UserModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nUserModule -->\n\nHomeComponent->UserModule\n\n\n\n\n\nInquiryComponent\n\nInquiryComponent\n\nUserModule -->\n\nInquiryComponent->UserModule\n\n\n\n\n\nPriceAlertComponent\n\nPriceAlertComponent\n\nUserModule -->\n\nPriceAlertComponent->UserModule\n\n\n\n\n\nProfileComponent\n\nProfileComponent\n\nUserModule -->\n\nProfileComponent->UserModule\n\n\n\n\n\nSearchAlertComponent\n\nSearchAlertComponent\n\nUserModule -->\n\nSearchAlertComponent->UserModule\n\n\n\n\n\nStoreComponent\n\nStoreComponent\n\nUserModule -->\n\nStoreComponent->UserModule\n\n\n\n\n\nUserComponent\n\nUserComponent\n\nUserModule -->\n\nUserComponent->UserModule\n\n\n\n\n\nGoogleMap\n\nGoogleMap\n\nUserModule -->\n\nGoogleMap->UserModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nUserModule -->\n\nLoaderComponent->UserModule\n\n\n\n\n\nMapMarker\n\nMapMarker\n\nUserModule -->\n\nMapMarker->UserModule\n\n\n\n\n\nUserRoutingModule\n\nUserRoutingModule\n\nUserModule -->\n\nUserRoutingModule->UserModule\n\n\n\n\n\ncdkDragDrop\n\ncdkDragDrop\n\nUserModule -->\n\ncdkDragDrop->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    23 Components\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            element   (src/.../car.interface.ts)\n                        \n                        \n                            textBoxtype   (src/.../car.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/modules/user/car-manage/car.interface.ts\n    \n    \n        \n            \n                \n                    \n                    element\n                \n            \n            \n                \n                        \"textbox\" | \"dropdown\" | \"select-button\" | \"textarea\" | \"upload\" | \"checkbox\" | \"editor\" | \"multi-select\" | \"selection\" | \"multi-choice\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    textBoxtype\n                \n            \n            \n                \n                        \"normal\" | \"date\" | \"money\" | \"currency\" | \"group\" | \"number\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                        \n                            AuthGuard   (src/.../auth.guard.ts)\n                        \n                        \n                            bootstrap   (src/.../main.server.ts)\n                        \n                        \n                            BROWSER_STORAGE   (src/.../local-storage.service.ts)\n                        \n                        \n                            config   (src/.../app.config.server.ts)\n                        \n                        \n                            DATA_DRIVING_CLASS   (src/.../finance.data.ts)\n                        \n                        \n                            DATA_MARITAL   (src/.../finance.data.ts)\n                        \n                        \n                            DATA_RELATIONSHIP   (src/.../finance.data.ts)\n                        \n                        \n                            DATA_RESIDENCE   (src/.../finance.data.ts)\n                        \n                        \n                            DATA_RESIDENCY_STATUS   (src/.../finance.data.ts)\n                        \n                        \n                            DATA_SELF_EMPLOYED   (src/.../finance.data.ts)\n                        \n                        \n                            DATA_SUBJECT   (src/.../finance.data.ts)\n                        \n                        \n                            DATA_WORK_TYPE   (src/.../finance.data.ts)\n                        \n                        \n                            dealerTypeGuard   (src/.../dealer-type.guard.ts)\n                        \n                        \n                            environment   (src/.../environment.development.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                        \n                            errorInterceptor   (src/.../error.interceptor.ts)\n                        \n                        \n                            serverConfig   (src/.../app.config.server.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideClientHydration(),\n    // animation\n    provideAnimations(),\n    // http\n    provideHttpClient(withInterceptors([errorInterceptor])),\n    // firebase\n    provideFirebaseApp(() => initializeApp(environment.firebaseConfig)),\n    provideMessaging(() => getMessaging()),\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utilities/guard/auth.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        AuthGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : async (route, state) => {\n\n  // Get the AuthService and Router instances\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  \n  // Check if user is logged in already\n  if(authService.isLoggedIn()) {\n    return true;\n  }\n\n  // Redirect to the login page - if user is not logged in\n  return router.parseUrl('/login');\n  return false;\n}\n                    \n                \n\n\n        \n    \n\n    src/main.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => bootstrapApplication(AppComponent, config)\n                    \n                \n\n\n        \n    \n\n    src/app/utilities/services/local-storage.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        BROWSER_STORAGE\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new InjectionToken('Browser Storage', {\n  providedIn: 'root',\n  factory: () => localStorage\n})\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.server.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Default value : mergeApplicationConfig(appConfig, serverConfig)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        serverConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideServerRendering()\n  ]\n}\n                    \n                \n\n\n        \n    \n\n    src/app/modules/user/finance-application/finance.data.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        DATA_DRIVING_CLASS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'G1', value: 'g1' },\n    { label: 'G2', value: 'g2' },\n    { label: 'G', value: 'g' },\n    { label: 'M1', value: 'm1' },\n    { label: 'M2', value: 'm2' },\n    { label: 'M', value: 'm' },\n    { label: 'AZ', value: 'az' },\n    { label: 'DZ', value: 'dz' },\n    { label: 'None', value: 'none' },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_MARITAL\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'Single', value: 'single' },\n    { label: 'Married', value: 'married' },\n    { label: 'Divorced', value: 'divorced' },\n    // { label: 'Widowed', value: 'widowed' },\n    { label: 'Separated', value: 'separated' },\n    { label: 'Common Law', value: 'common_law' }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_RELATIONSHIP\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'Spouse', value: 'spouse' },\n    { label: 'Sibling', value:'sibling' },\n    { label: 'Common Law', value: 'common_law' },\n    { label: 'Family Member', value: 'family_member' },\n    { label: 'Friend', value: 'friend' },\n    { label: 'Other', value: 'other' }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_RESIDENCE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'Own', value: 'own' },\n    { label: 'Rent', value: 'rent' },\n    { label: 'Living with Family', value: 'living_with_family' }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_RESIDENCY_STATUS\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'Canadian Citizen', value: 'canadian_citizen' },\n    { label: 'Permanent Resident', value: 'permenent_resident' },\n    { label: 'Other', value: 'other' },\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_SELF_EMPLOYED\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'Yes', value: 'yes' },\n    { label: 'No', value: 'no' }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_SUBJECT\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'Mr', value: 'mr' },\n    { label: 'Mrs', value: 'mrs' },\n    { label: 'Miss', value: 'miss' },\n    { label: 'Ms', value: 'ms' },\n    // { label: 'Dr', value: 'dr' },\n    // { label: 'Prof', value: 'prof' }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        DATA_WORK_TYPE\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    { label: 'Contract', value:'contract' },\n    { label: 'Full Time', value: 'full_time' },\n    { label: 'Part Time', value: 'part_time' },\n    { label: 'Retired', value:'retired' },\n    { label: 'Student', value:'student' },\n    { label: 'Seasonal', value:'seasonal' },\n    { label: 'Unemployed', value:'unemployed' },\n]\n                    \n                \n\n\n        \n    \n\n    src/app/utilities/guard/dealer-type.guard.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dealerTypeGuard\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CanActivateFn\n\n                    \n                \n                \n                    \n                        Default value : (route, state) => {\n\n  // Get the LocalStorageService and Router instances\n  const localStorageService = inject(LocalStorageService);\n  const router = inject(Router);\n\n  // Check if the user is a dealer\n  if(localStorageService.userIsDealer()) {\n    return true;\n  }\n\n  // Redirect to the login page\n  return router.parseUrl('/error/400');\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.development.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: false,\n    front_url: 'http://localhost:4200/',\n    backend_url: 'http://localhost:9876/',\n    google_key: 'AIzaSyANtukHyZcPgUWR9jZL7aJD_F57U5KnmNI',\n    firebaseConfig: {\n        apiKey: \"AIzaSyDeVkLBuDp4IhJ-MDcAjzVuYt2UWGqKL74\",\n        authDomain: \"mechatronic-group-cd645.firebaseapp.com\",\n        projectId: \"mechatronic-group-cd645\",\n        storageBucket: \"mechatronic-group-cd645.appspot.com\",\n        messagingSenderId: \"387300066487\",\n        appId: \"1:387300066487:web:0b11d650d75f6aedd13932\",\n        measurementId: \"G-WTDT38HXV9\"\n    },\n    vapidKey: 'BEyfKU1lfh_RNRtVJxDW2U3UwmN7wRlfT8c5sqK56CbJIsd4N2wU6zg-IPHiUdHQ7Ljb0r9tAa2isemtv0lIVXc',\n}\n                    \n                \n\n\n        \n    \n\n    src/environments/environment.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        environment\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    production: true,\n    front_url: 'https://auto.mechatronic-group.com/',\n    backend_url: 'https://api.mechatronic-group.com/',\n    google_key: 'AIzaSyANtukHyZcPgUWR9jZL7aJD_F57U5KnmNI',\n    firebaseConfig: {\n        apiKey: \"AIzaSyDeVkLBuDp4IhJ-MDcAjzVuYt2UWGqKL74\",\n        authDomain: \"mechatronic-group-cd645.firebaseapp.com\",\n        projectId: \"mechatronic-group-cd645\",\n        storageBucket: \"mechatronic-group-cd645.appspot.com\",\n        messagingSenderId: \"387300066487\",\n        appId: \"1:387300066487:web:0b11d650d75f6aedd13932\",\n        measurementId: \"G-WTDT38HXV9\"\n    },\n    vapidKey: 'BEyfKU1lfh_RNRtVJxDW2U3UwmN7wRlfT8c5sqK56CbJIsd4N2wU6zg-IPHiUdHQ7Ljb0r9tAa2isemtv0lIVXc',\n}\n                    \n                \n\n\n        \n    \n\n    src/app/utilities/interceptor/error.interceptor.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        errorInterceptor\n                        \n                    \n                \n            \n                \n                    \n                        Type :     HttpInterceptorFn\n\n                    \n                \n                \n                    \n                        Default value : (req, next) => {\n\n  // inject dependencies\n  const router = inject(Router);\n  const authService = inject(AuthService);\n  const localStorageService = inject(LocalStorageService);\n\n  // intercept requests and handle errors\n  return next(req).pipe(\n    // tap to handle response events, including errors\n    tap(async (event: HttpEvent) => {\n      // handle response events only if it's an instance of HttpResponse\n      if(event instanceof HttpResponse) {\n        // check if error is related to http request\n        if (event instanceof HttpErrorResponse) {\n          // check if user is unauthorized (401) and not logged in\n          if (event.status === 401) {\n            if(authService.isLoggedIn()) {\n              localStorageService.remove('user');\n              localStorageService.remove('store');\n              localStorageService.remove('ne');\n              localStorageService.remove('user');\n              await authService.OnLogout();\n            }\n            // detail page is dynamic url so check by string\n            if('/detail'.indexOf(router.routerState.snapshot.url)) return\n            // check static pre defined url where login is not required\n            if(['/prequalify-loan?isLoginSetup=true', '/prequalify-loan', '/', '/search', '/detail'].includes(router.routerState.snapshot.url)) return\n            // redirect to login\n            router.navigate(['/login']);\n          } else if(event.status === 307) {\n            router.navigate(['/user/store']);\n          } else if(event.status === 0) {\n            router.navigateByUrl('/server-down');\n          } else {\n            return;\n          }\n        }\n      }\n    })\n  );\n}\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
